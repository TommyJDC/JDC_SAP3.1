{
  "version": 3,
  "sources": ["../../../app/utils/dateUtils.ts", "../../../app/firebase.admin.config.server.ts", "../../../app/services/firestore.service.server.ts", "../../../app/hooks/useGeoCoding.ts", "../../../app/utils/kmlZones.ts", "../../../app/components/InteractiveMap.tsx", "../../../app/entry.server.tsx", "../../../app/root.tsx", "../../../app/components/Header.tsx", "../../../app/components/ui/Button.tsx", "../../../app/components/MobileMenu.tsx", "../../../app/components/AuthModal.tsx", "../../../app/services/auth.service.ts", "../../../app/firebase.config.ts", "../../../app/context/ToastContext.tsx", "../../../app/components/Toast.tsx", "../../../app/services/auth.server.ts", "../../../app/services/session.server.ts", "../../../app/routes/auth.google.callback.ts", "../../../app/routes/installations.kezia.tsx", "../../../app/services/google.server.ts", "../../../app/routes/google-drive-files.tsx", "../../../app/routes/auth.google.ts", "../../../app/routes/tickets-sap.tsx", "../../../app/components/ui/Input.tsx", "../../../app/components/TicketSAPDetails.tsx", "../../../app/hooks/useGeminiSummary.ts", "../../../app/utils/styleUtils.ts", "../../../app/routes/api.health.ts", "../../../app/routes/envois-ctn.tsx", "../../../app/routes/dashboard.tsx", "../../../app/components/StatsCard.tsx", "../../../app/components/RecentTickets.tsx", "../../../tailwind.config.ts", "../../../app/components/RecentShipments.tsx", "../../../app/components/ClientOnly.tsx", "../../../app/routes/articles.tsx", "../../../app/routes/buckets.tsx", "../../../app/routes/clients.tsx", "../../../app/routes/logout.ts", "../../../app/routes/_index.tsx", "../../../app/routes/admin.tsx", "../../../app/components/ui/Card.tsx", "../../../app/components/EditUserModal.tsx", "../../../app/components/ui/Select.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["import { Timestamp } from 'firebase/firestore'; // Keep Timestamp import if needed for type checks\r\n\r\nconst frenchMonths: { [key: string]: number } = {\r\n  'janvier': 0, 'f\u00E9vrier': 1, 'mars': 2, 'avril': 3, 'mai': 4, 'juin': 5,\r\n  'juillet': 6, 'ao\u00FBt': 7, 'septembre': 8, 'octobre': 9, 'novembre': 10, 'd\u00E9cembre': 11\r\n};\r\n\r\n/**\r\n * Parses a French date string like \"jour J mois AAAA\" (e.g., \"mardi 8 avril 2025\").\r\n * Also handles potential Firestore Timestamps or JS Date objects.\r\n * Returns a Date object or null if parsing fails. Logs detailed warnings.\r\n */\r\nexport const parseFrenchDate = (dateInput: string | Date | Timestamp | undefined | null): Date | null => {\r\n  const originalInputForLog = dateInput; // Keep original for logging\r\n\r\n  if (!dateInput) {\r\n    // console.log(\"[parseFrenchDate] Received falsy input:\", originalInputForLog); // Optional log\r\n    return null;\r\n  }\r\n\r\n  // Handle if input is already a Date or Timestamp\r\n  if (dateInput instanceof Timestamp) {\r\n    try {\r\n      const date = dateInput.toDate();\r\n      if (!isNaN(date.getTime())) {\r\n        return date;\r\n      } else {\r\n        // Log if Timestamp conversion results in Invalid Date\r\n        console.warn(\"[parseFrenchDate] Timestamp.toDate() resulted in Invalid Date. Original input:\", originalInputForLog);\r\n        return null;\r\n      }\r\n    } catch (e) {\r\n      console.error(`[parseFrenchDate] Error converting Timestamp:`, e, \"Original input:\", originalInputForLog);\r\n      return null;\r\n    }\r\n  }\r\n  if (dateInput instanceof Date) {\r\n    if (!isNaN(dateInput.getTime())) {\r\n      return dateInput;\r\n    } else {\r\n      // Log if an Invalid Date object was passed directly\r\n      console.warn(\"[parseFrenchDate] Received an Invalid Date object directly. Original input:\", originalInputForLog);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Handle string input\r\n  if (typeof dateInput === 'string') {\r\n    const dateString = dateInput; // Keep original for logs if needed\r\n\r\n    // Clean the string: remove potential day name, trim whitespace\r\n    const cleanedString = dateString.toLowerCase().replace(/^\\w+\\s/, '').trim();\r\n    const parts = cleanedString.split(' ');\r\n\r\n    // Expected format after cleaning: [dayNumber, monthName, yearNumber]\r\n    if (parts.length === 3) {\r\n      const dayStr = parts[0];\r\n      const monthStr = parts[1];\r\n      const yearStr = parts[2];\r\n\r\n      const day = parseInt(dayStr, 10);\r\n      const year = parseInt(yearStr, 10);\r\n      const monthIndex = frenchMonths[monthStr];\r\n\r\n      if (!isNaN(day) && !isNaN(year) && monthIndex !== undefined) {\r\n        // Create Date object using UTC\r\n        try {\r\n          const date = new Date(Date.UTC(year, monthIndex, day));\r\n          // Basic validation\r\n          if (date.getUTCFullYear() === year && date.getUTCMonth() === monthIndex && date.getUTCDate() === day) {\r\n            return date;\r\n          } else {\r\n            console.warn(`[parseFrenchDate] Date object creation resulted in mismatch for French string. Original input: \"${originalInputForLog}\"`);\r\n          }\r\n        } catch (e) {\r\n          console.error(`[parseFrenchDate] Error creating Date object for French string: \"${originalInputForLog}\":`, e);\r\n          return null;\r\n        }\r\n      } else {\r\n         console.warn(`[parseFrenchDate] Failed to parse numeric components from French string: day=${dayStr}, month=${monthStr}, year=${yearStr}. Original input: \"${originalInputForLog}\"`);\r\n      }\r\n    } else {\r\n       console.warn(`[parseFrenchDate] Unexpected format after cleaning French string: \"${cleanedString}\". Original input: \"${originalInputForLog}\"`);\r\n    }\r\n\r\n    // Fallback attempt for other string formats (e.g., ISO, DD/MM/YYYY)\r\n    try {\r\n      // Use original string for fallback, as cleaning might break standard formats\r\n      const parsedDate = new Date(dateString);\r\n      if (!isNaN(parsedDate.getTime())) {\r\n        // console.log(`[parseFrenchDate] Fallback parsing successful for string. Original input: \"${originalInputForLog}\"`); // Optional log\r\n        return parsedDate;\r\n      }\r\n    } catch (e) {\r\n      // Ignore fallback error\r\n    }\r\n\r\n    // If all parsing attempts failed for the string\r\n    console.warn(`[parseFrenchDate] All parsing attempts failed for string. Original input: \"${originalInputForLog}\"`);\r\n    return null;\r\n  }\r\n\r\n  // If input type is unexpected\r\n  console.warn(`[parseFrenchDate] Received unexpected input type: ${typeof dateInput}. Original input:`, originalInputForLog);\r\n  return null;\r\n};\r\n\r\n\r\n/**\r\n * Formats a Date object into DD/MM/YYYY string using UTC date parts.\r\n */\r\nexport const formatDateForDisplay = (date: Date | null): string => {\r\n  if (!date || isNaN(date.getTime())) {\r\n    // No warning needed here, as parseFrenchDate should have already warned if applicable\r\n    return 'N/A';\r\n  }\r\n  // Use UTC methods to match the UTC date creation in parseFrenchDate\r\n  const day = String(date.getUTCDate()).padStart(2, '0');\r\n  const month = String(date.getUTCMonth() + 1).padStart(2, '0'); // Month is 0-indexed\r\n  const year = date.getUTCFullYear();\r\n  return `${day}/${month}/${year}`;\r\n};\r\n\r\n\r\n/**\r\n * Original formatDate function (might be used elsewhere) - formats to YYYY-MM-DD.\r\n * Uses local date parts.\r\n */\r\nexport const formatDate = (date: Date): string => {\r\n  // Check for invalid date passed to this specific formatter\r\n  if (!date || isNaN(date.getTime())) {\r\n      console.warn(\"[formatDate YYYY-MM-DD] Received invalid date object.\");\r\n      return 'Invalid Date';\r\n  }\r\n  const day = String(date.getDate()).padStart(2, '0');\r\n  const month = String(date.getMonth() + 1).padStart(2, '0'); // Month is 0-indexed\r\n  const year = date.getFullYear();\r\n  return `${year}-${month}-${day}`;\r\n};\r\n\r\n/**\r\n * Calculates the start (Monday 00:00 UTC) and end (Sunday 23:59:59.999 UTC) dates\r\n * for the week to display in the agenda.\r\n * If today is Saturday or Sunday, it calculates for the *next* week.\r\n * Otherwise, it calculates for the *current* week.\r\n * Returns dates in UTC.\r\n *\r\n * @param today Optional: The current date (defaults to new Date()). Useful for testing.\r\n * @returns An object { startOfWeek: Date, endOfWeek: Date }\r\n */\r\nexport const getWeekDateRangeForAgenda = (today = new Date()): { startOfWeek: Date, endOfWeek: Date } => {\r\n    const currentDay = today.getUTCDay(); // 0 = Sunday, 1 = Monday, ..., 6 = Saturday\r\n\r\n    let daysToAdd = 0;\r\n    // If today is Saturday (6) or Sunday (0), target next Monday\r\n    if (currentDay === 6) {\r\n        daysToAdd = 2; // Saturday to Monday\r\n    } else if (currentDay === 0) {\r\n        daysToAdd = 1; // Sunday to Monday\r\n    } else {\r\n        // Otherwise, target the current week's Monday\r\n        daysToAdd = 1 - currentDay; // Monday(1) - currentDay\r\n    }\r\n\r\n    // Calculate the start of the target week (Monday) using UTC methods\r\n    const startOfWeek = new Date(Date.UTC(today.getUTCFullYear(), today.getUTCMonth(), today.getUTCDate() + daysToAdd));\r\n    startOfWeek.setUTCHours(0, 0, 0, 0); // Set to beginning of the day in UTC\r\n\r\n    // Calculate the end of the target week (Sunday) using UTC methods\r\n    const endOfWeek = new Date(startOfWeek);\r\n    endOfWeek.setUTCDate(startOfWeek.getUTCDate() + 6); // Add 6 days to get to Sunday\r\n    endOfWeek.setUTCHours(23, 59, 59, 999); // Set to end of the day in UTC\r\n\r\n    return { startOfWeek, endOfWeek };\r\n};\r\n", "import * as admin from 'firebase-admin';\r\nimport { getFirestore as getAdminFirestore } from 'firebase-admin/firestore';\r\nimport { initializeApp as initializeAdminApp, getApps as getAdminApps } from 'firebase-admin/app';\r\n\r\nlet dbAdmin: admin.firestore.Firestore;\r\n\r\n// Simplified Initialization: Initialize only if no apps exist.\r\n// initializeApp handles idempotency if called multiple times with default config.\r\nif (getAdminApps().length === 0) {\r\n  console.log(\"[FirebaseAdminConfig] No existing apps found. Initializing Firebase Admin SDK...\");\r\n  try {\r\n    // Ensure GOOGLE_APPLICATION_CREDENTIALS is set in your .env or environment\r\n    if (!process.env.GOOGLE_APPLICATION_CREDENTIALS) {\r\n        console.warn(\"[FirebaseAdminConfig] WARNING: GOOGLE_APPLICATION_CREDENTIALS environment variable not set. Admin SDK might not authenticate properly.\");\r\n    }\r\n    // Initialize the default app without explicit credentials, relying on the env var\r\n    initializeAdminApp();\r\n    console.log(\"[FirebaseAdminConfig] Firebase Admin SDK initialized successfully.\");\r\n  } catch (error) {\r\n    console.error(\"[FirebaseAdminConfig] CRITICAL: Failed to initialize Firebase Admin SDK:\", error);\r\n    // Throw error to prevent app from starting incorrectly\r\n    throw new Error(\"Failed to initialize Firebase Admin SDK\");\r\n  }\r\n} else {\r\n  console.log(\"[FirebaseAdminConfig] Firebase Admin SDK already initialized.\");\r\n}\r\n\r\n// Always try to get the Firestore instance from the default app.\r\n// This should work whether the app was just initialized or already existed.\r\ntry {\r\n    dbAdmin = getAdminFirestore();\r\n} catch (error) {\r\n     console.error(\"[FirebaseAdminConfig] CRITICAL: Failed to get Firestore instance from Admin SDK:\", error);\r\n     // Provide a fallback or throw an error\r\n     throw new Error(\"Failed to get Firestore instance from Admin SDK. Ensure initialization succeeded.\");\r\n}\r\n\r\nexport { dbAdmin };\r\n", "// Import Timestamp and FieldValue directly if needed, but dbAdmin comes from config\r\nimport { Timestamp, FieldValue } from 'firebase-admin/firestore';\r\n// Import types remain the same\r\nimport type { UserProfile, SapTicket, Shipment, GeocodeCacheEntry, StatsSnapshot, Article } from '~/types/firestore.types';\r\nimport { parseFrenchDate } from '~/utils/dateUtils';\r\n// Import the initialized admin db instance\r\nimport { dbAdmin } from '~/firebase.admin.config.server'; // Import the configured instance\r\nimport type * as admin from 'firebase-admin'; // Import admin types if needed elsewhere\r\n\r\n\r\n// --- Helper for Status Correction (remains the same, uses data object) ---\r\nconst correctTicketStatus = (ticketData: admin.firestore.DocumentData): { correctedStatus: string | null, needsUpdate: boolean } => {\r\n  let currentStatus = ticketData.statut;\r\n  const demandeSAPLower = ticketData.demandeSAP?.toLowerCase() ?? '';\r\n  const needsRmaStatus = demandeSAPLower.includes('demande de rma');\r\n  const isNotRmaStatus = currentStatus !== 'Demande de RMA';\r\n\r\n  let correctedStatus: string | null = currentStatus;\r\n  let needsUpdate = false;\r\n\r\n  if (needsRmaStatus && isNotRmaStatus) {\r\n    correctedStatus = 'Demande de RMA';\r\n    needsUpdate = true;\r\n  } else if (!currentStatus && !needsRmaStatus) {\r\n    correctedStatus = 'Nouveau';\r\n    needsUpdate = true;\r\n  }\r\n\r\n  return { correctedStatus: correctedStatus ?? null, needsUpdate };\r\n};\r\n\r\n\r\n// --- User Profile Functions (Using Admin SDK) ---\r\n\r\n/**\r\n * Gets a user profile using the Admin SDK.\r\n * Assumes the passed `id` is the document ID in the 'users' collection\r\n * (could be Firebase UID or Google ID depending on how it's called).\r\n */\r\nexport const getUserProfileSdk = async (id: string): Promise<UserProfile | null> => {\r\n  if (!id) return null;\r\n  console.log(`[FirestoreService Admin] Getting profile for ID: ${id}`);\r\n  try {\r\n    const userDocRef = dbAdmin.collection('users').doc(id);\r\n    const userDocSnap = await userDocRef.get();\r\n    if (userDocSnap.exists) {\r\n      const data = userDocSnap.data() as any; // Cast to any temporarily\r\n      // Convert Timestamps to Dates before returning\r\n      const createdAt = data.createdAt instanceof Timestamp ? data.createdAt.toDate() : undefined;\r\n      const updatedAt = data.updatedAt instanceof Timestamp ? data.updatedAt.toDate() : undefined;\r\n      return {\r\n          uid: id,\r\n          email: data.email,\r\n          displayName: data.displayName,\r\n          role: data.role,\r\n          secteurs: data.secteurs,\r\n          createdAt: createdAt,\r\n          updatedAt: updatedAt,\r\n       } as UserProfile;\r\n    } else {\r\n      console.log(`[FirestoreService Admin] No profile found for ID: ${id}`);\r\n      throw new Error(`User profile not found for ID: ${id}`);\r\n    }\r\n  } catch (error: any) {\r\n    console.error(`[FirestoreService Admin] Error fetching user profile for ID ${id}:`, error);\r\n    if (error.message?.includes(\"not found\")) {\r\n        throw error;\r\n    }\r\n    throw new Error(`Impossible de r\u00E9cup\u00E9rer le profil utilisateur (ID: ${id}). Cause: ${error.message || error}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Creates a user profile using the Admin SDK.\r\n * Uses the passed `id` (Firebase UID or Google ID) as the document ID.\r\n */\r\nexport const createUserProfileSdk = async (\r\n  id: string,\r\n  email: string,\r\n  displayName: string,\r\n  initialRole: string = 'Technician'\r\n): Promise<UserProfile> => {\r\n  if (!id || !email || !displayName) {\r\n    throw new Error(\"ID, email, and display name are required to create a profile.\");\r\n  }\r\n  console.log(`[FirestoreService Admin] Creating profile for ID: ${id}, Email: ${email}`);\r\n  try {\r\n    const userDocRef = dbAdmin.collection('users').doc(id);\r\n    const docSnap = await userDocRef.get();\r\n    if (docSnap.exists) {\r\n        console.warn(`[FirestoreService Admin] Profile already exists for ID: ${id}. Overwriting.`);\r\n    }\r\n\r\n    // Define the data to set, excluding fields handled by FieldValue or the uid itself\r\n    const newUserProfileDataBase: Omit<UserProfile, 'uid' | 'createdAt' | 'updatedAt'> = {\r\n      email,\r\n      displayName,\r\n      role: initialRole,\r\n      secteurs: [],\r\n    };\r\n\r\n    // Add the server timestamp during the set operation\r\n    await userDocRef.set({\r\n        ...newUserProfileDataBase,\r\n        createdAt: FieldValue.serverTimestamp(),\r\n        updatedAt: FieldValue.serverTimestamp(), // Also set updatedAt on creation\r\n    });\r\n    console.log(`[FirestoreService Admin] User profile created/updated successfully for ID: ${id}`);\r\n\r\n    // Return the known data immediately. Timestamps will be populated on next read.\r\n    // Cast to UserProfile, acknowledging timestamps might be FieldValue initially server-side.\r\n    return { uid: id, ...newUserProfileDataBase } as UserProfile;\r\n\r\n  } catch (error: any) {\r\n    console.error(`[FirestoreService Admin] Error creating user profile for ID ${id}:`, error);\r\n     if (error.code === 7 || error.code === 'PERMISSION_DENIED') {\r\n        console.error(\"[FirestoreService Admin] CRITICAL: Firestore permission denied during profile creation. Check service account permissions and Firestore rules.\");\r\n        throw new Error(\"Permission refus\u00E9e par Firestore lors de la cr\u00E9ation du profil.\");\r\n    }\r\n    throw new Error(`Impossible de cr\u00E9er le profil utilisateur (ID: ${id}). Cause: ${error.message || error}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Updates a user profile using the Admin SDK.\r\n */\r\nexport const updateUserProfileSdk = async (uid: string, data: Partial<Omit<UserProfile, 'uid' | 'createdAt' | 'updatedAt'>>): Promise<void> => {\r\n  if (!uid || !data || Object.keys(data).length === 0) {\r\n    console.warn(\"[FirestoreService Admin] Update user profile called with invalid UID or empty data.\");\r\n    return;\r\n  }\r\n  console.log(`[FirestoreService Admin] Updating profile for UID: ${uid}`);\r\n  try {\r\n    const userDocRef = dbAdmin.collection('users').doc(uid);\r\n    // Add updatedAt timestamp\r\n    const updateData = { ...data, updatedAt: FieldValue.serverTimestamp() };\r\n    await userDocRef.update(updateData);\r\n    console.log(`[FirestoreService Admin] User profile updated successfully for UID: ${uid}`);\r\n  } catch (error: any) {\r\n    console.error(`[FirestoreService Admin] Error updating user profile for UID ${uid}:`, error);\r\n     if (error.code === 7 || error.code === 'PERMISSION_DENIED') {\r\n        console.error(\"[FirestoreService Admin] CRITICAL: Firestore permission denied during profile update.\");\r\n        throw new Error(\"Permission refus\u00E9e par Firestore lors de la mise \u00E0 jour du profil.\");\r\n    }\r\n    throw new Error(`Impossible de mettre \u00E0 jour le profil utilisateur (UID: ${uid}). Cause: ${error.message || error}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Gets all user profiles using the Admin SDK.\r\n */\r\nexport const getAllUserProfilesSdk = async (): Promise<UserProfile[]> => {\r\n  console.log(\"[FirestoreService Admin] Fetching all user profiles...\");\r\n  try {\r\n    const usersCollectionRef = dbAdmin.collection('users');\r\n    const q = usersCollectionRef.orderBy('email');\r\n    const querySnapshot = await q.get();\r\n    const profiles = querySnapshot.docs.map((doc) => {\r\n        const data = doc.data() as any;\r\n        const createdAt = data.createdAt instanceof Timestamp ? data.createdAt.toDate() : undefined;\r\n        const updatedAt = data.updatedAt instanceof Timestamp ? data.updatedAt.toDate() : undefined;\r\n        return {\r\n            uid: doc.id,\r\n            email: data.email,\r\n            displayName: data.displayName,\r\n            role: data.role,\r\n            secteurs: data.secteurs,\r\n            createdAt: createdAt,\r\n            updatedAt: updatedAt,\r\n        } as UserProfile\r\n    });\r\n    console.log(`[FirestoreService Admin] Fetched ${profiles.length} profiles.`);\r\n    return profiles;\r\n  } catch (error: any) {\r\n    console.error(\"[FirestoreService Admin] Error fetching all user profiles:\", error);\r\n    throw new Error(`Impossible de r\u00E9cup\u00E9rer la liste des utilisateurs. Cause: ${error.message || error}`);\r\n  }\r\n};\r\n\r\n\r\n// --- Article Image Functions (Using Admin SDK) ---\r\n\r\nexport const addArticleImageUrl = async (articleId: string, imageUrl: string): Promise<void> => {\r\n  if (!articleId || !imageUrl) {\r\n    throw new Error(\"Article ID and image URL are required.\");\r\n  }\r\n  console.log(`[FirestoreService Admin] Adding image URL to article ${articleId}...`);\r\n  try {\r\n    const articleDocRef = dbAdmin.collection('articles').doc(articleId);\r\n    await articleDocRef.update({\r\n      imageUrls: FieldValue.arrayUnion(imageUrl)\r\n    });\r\n    console.log(`[FirestoreService Admin] Image URL successfully added to article ${articleId}.`);\r\n  } catch (error: any) {\r\n    console.error(`[FirestoreService Admin] Error adding image URL to article ${articleId}:`, error);\r\n     if (error.code === 7 || error.code === 'PERMISSION_DENIED') {\r\n        throw new Error(\"Permission refus\u00E9e pour mettre \u00E0 jour l'article.\");\r\n    } else if (error.code === 5 || error.code === 'NOT_FOUND') {\r\n        throw new Error(`L'article avec l'ID ${articleId} n'a pas \u00E9t\u00E9 trouv\u00E9.`);\r\n    }\r\n    throw new Error(`Impossible d'ajouter l'URL de l'image \u00E0 l'article : ${error.message || error.code}`);\r\n  }\r\n};\r\n\r\nexport const deleteArticleImageUrl = async (articleId: string, imageUrl: string): Promise<void> => {\r\n  if (!articleId || !imageUrl) {\r\n    throw new Error(\"Article ID and image URL are required for deletion.\");\r\n  }\r\n  console.log(`[FirestoreService Admin] Removing image URL from article ${articleId}...`);\r\n  try {\r\n    const articleDocRef = dbAdmin.collection('articles').doc(articleId);\r\n    await articleDocRef.update({\r\n      imageUrls: FieldValue.arrayRemove(imageUrl)\r\n    });\r\n    console.log(`[FirestoreService Admin] Image URL successfully removed from article ${articleId}.`);\r\n  } catch (error: any) {\r\n    console.error(`[FirestoreService Admin] Error removing image URL from article ${articleId}:`, error);\r\n     if (error.code === 7 || error.code === 'PERMISSION_DENIED') {\r\n        throw new Error(\"Permission refus\u00E9e pour mettre \u00E0 jour l'article.\");\r\n    } else if (error.code === 5 || error.code === 'NOT_FOUND') {\r\n        throw new Error(`L'article avec l'ID ${articleId} n'a pas \u00E9t\u00E9 trouv\u00E9.`);\r\n    }\r\n    throw new Error(`Impossible de supprimer l'URL de l'image de l'article : ${error.message || error.code}`);\r\n  }\r\n};\r\n\r\n\r\n// --- Article Search Functions (Using Admin SDK) ---\r\n\r\nexport const searchArticles = async (criteria: { code?: string; nom?: string }): Promise<Article[]> => {\r\n  const { code, nom } = criteria;\r\n  const trimmedCode = code?.trim();\r\n  const trimmedNom = nom?.trim();\r\n  const nomUppercase = trimmedNom?.toUpperCase();\r\n\r\n  console.log(`[FirestoreService Admin] Searching articles with criteria:`, { code: trimmedCode, nom: trimmedNom });\r\n\r\n  if (!trimmedCode && !trimmedNom) {\r\n    console.log(\"[FirestoreService Admin] No search criteria provided for articles.\");\r\n    return [];\r\n  }\r\n\r\n  const articlesCollection = dbAdmin.collection('articles');\r\n  const resultsMap = new Map<string, Article>();\r\n\r\n  try {\r\n    if (trimmedCode) {\r\n      const codeQuery = articlesCollection.where(\"Code\", \"==\", trimmedCode);\r\n      console.log(`[FirestoreService Admin] Executing Code exact match query for: \"${trimmedCode}\"`);\r\n      const codeSnapshot = await codeQuery.get();\r\n      console.log(`[FirestoreService Admin] Code query found ${codeSnapshot.docs.length} matches.`);\r\n      codeSnapshot.docs.forEach(docSnap => {\r\n        const data = docSnap.data();\r\n        if (data.Code && data.D\u00E9signation) {\r\n          resultsMap.set(docSnap.id, { id: docSnap.id, ...data } as Article);\r\n        } else {\r\n           console.warn(`[FirestoreService Admin] Document ${docSnap.id} matched by Code is missing 'Code' or 'D\u00E9signation'.`);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (nomUppercase) {\r\n      const endTerm = nomUppercase + '\\uf8ff';\r\n      const designationQuery = articlesCollection\r\n        .orderBy(\"D\u00E9signation\")\r\n        .startAt(nomUppercase)\r\n        .endAt(endTerm);\r\n\r\n      console.log(`[FirestoreService Admin] Executing D\u00E9signation prefix query (uppercase) for: \"${nomUppercase}\"`);\r\n      const designationSnapshot = await designationQuery.get();\r\n      console.log(`[FirestoreService Admin] D\u00E9signation query found ${designationSnapshot.docs.length} potential matches.`);\r\n\r\n      designationSnapshot.docs.forEach(docSnap => {\r\n        const data = docSnap.data();\r\n        if (data.Code && data.D\u00E9signation) {\r\n          resultsMap.set(docSnap.id, { id: docSnap.id, ...data } as Article);\r\n        } else {\r\n          console.warn(`[FirestoreService Admin] Document ${docSnap.id} matched by D\u00E9signation is missing 'Code' or 'D\u00E9signation'.`);\r\n        }\r\n      });\r\n    }\r\n\r\n    const combinedResults = Array.from(resultsMap.values());\r\n    console.log(`[FirestoreService Admin] Article search completed. Found ${combinedResults.length} unique articles.`);\r\n    return combinedResults;\r\n\r\n  } catch (error: any) {\r\n    console.error(\"[FirestoreService Admin] Error executing article search:\", error);\r\n    if (error.code === 9 || error.code === 'FAILED_PRECONDITION') {\r\n        console.error(\"[FirestoreService Admin] Firestore Error: Likely missing a composite index. Check the Firestore console error message for a link to create it. You'll likely need an index on 'D\u00E9signation' (ascending).\");\r\n        throw new Error(\"Erreur Firestore: Index manquant requis pour la recherche par nom (sur 'D\u00E9signation'). V\u00E9rifiez la console Firebase.\");\r\n    }\r\n    throw new Error(`\u00C9chec de la recherche d'articles. Cause: ${error.message || error}`);\r\n  }\r\n};\r\n\r\n\r\n// --- SAP Ticket Functions (Using Admin SDK) ---\r\n\r\nexport const updateSAPTICKET = async (sectorId: string, ticketId: string, data: Partial<Omit<SapTicket, 'id' | 'secteur' | 'date'>>): Promise<void> => {\r\n  if (!sectorId || !ticketId || !data || Object.keys(data).length === 0) {\r\n    console.warn(\"[FirestoreService Admin] updateSAPTICKET called with invalid sectorId, ticketId, or empty data.\");\r\n    throw new Error(\"Identifiants de secteur/ticket ou donn\u00E9es de mise \u00E0 jour manquants.\");\r\n  }\r\n  console.log(`[FirestoreService Admin] Attempting to update ticket ${ticketId} in sector ${sectorId} with data:`, data);\r\n  try {\r\n    const ticketDocRef = dbAdmin.collection(sectorId).doc(ticketId);\r\n    // Ensure date is not accidentally overwritten with undefined if not provided\r\n    const updateData = { ...data };\r\n    if ('date' in updateData) delete (updateData as any).date;\r\n\r\n    await ticketDocRef.update(updateData);\r\n    console.log(`[FirestoreService Admin] Successfully updated ticket ${ticketId} in sector ${sectorId}.`);\r\n  } catch (error: any) {\r\n    console.error(`[FirestoreService Admin] Error updating ticket ${ticketId} in sector ${sectorId}:`, error);\r\n    if (error.code === 7 || error.code === 'PERMISSION_DENIED') {\r\n      console.error(`[FirestoreService Admin] CRITICAL: Firestore permission denied for update operation on collection '${sectorId}'. Check service account permissions and Firestore rules.`);\r\n      throw new Error(`Permission refus\u00E9e par Firestore pour la mise \u00E0 jour dans le secteur ${sectorId}.`);\r\n    } else if (error.code === 5 || error.code === 'NOT_FOUND') {\r\n        console.error(`[FirestoreService Admin] Error: Document ${ticketId} not found in collection ${sectorId}.`);\r\n        throw new Error(`Le ticket ${ticketId} n'a pas \u00E9t\u00E9 trouv\u00E9 dans le secteur ${sectorId}.`);\r\n    }\r\n    throw new Error(`Impossible de mettre \u00E0 jour le ticket SAP ${ticketId}. Cause: ${error.message || error}`);\r\n  }\r\n};\r\n\r\nexport const getRecentTicketsForSectors = async (sectors: string[], count: number = 5): Promise<SapTicket[]> => {\r\n  if (!sectors || sectors.length === 0) return [];\r\n  console.log(`[FirestoreService Admin] Fetching recent tickets for sectors: ${sectors.join(', ')}`);\r\n\r\n  const ticketPromises = sectors.map(async (sector) => {\r\n    try {\r\n      const sectorCollectionRef = dbAdmin.collection(sector);\r\n      const q = sectorCollectionRef.orderBy('date', 'desc').limit(count);\r\n      const querySnapshot = await q.get();\r\n       return querySnapshot.docs.map(doc => {\r\n          const data = doc.data();\r\n          const parsedDate = parseFrenchDate(data.date);\r\n          const { correctedStatus } = correctTicketStatus(data);\r\n          return {\r\n           id: doc.id,\r\n           ...data,\r\n            statut: correctedStatus ?? data.statut,\r\n            secteur: sector,\r\n            date: parsedDate\r\n          } as SapTicket;\r\n       });\r\n    } catch (error: any) {\r\n      console.error(`[FirestoreService Admin] Error fetching tickets for sector ${sector}:`, error);\r\n       if (error.code === 9 || error.code === 'FAILED_PRECONDITION') {\r\n         console.error(`[FirestoreService Admin] Index missing for ticket query in sector ${sector} (likely on 'date' desc).`);\r\n       }\r\n      return [];\r\n    }\r\n  });\r\n\r\n  try {\r\n     const resultsBySector = await Promise.all(ticketPromises);\r\n     const allTickets = resultsBySector.flat();\r\n     allTickets.sort((a, b) => {\r\n         if (!(b.date instanceof Date)) return -1;\r\n         if (!(a.date instanceof Date)) return 1;\r\n         return b.date.getTime() - a.date.getTime();\r\n     });\r\n     console.log(`[FirestoreService Admin] Found ${allTickets.length} tickets across sectors, returning top ${count}`);\r\n    return allTickets.slice(0, count);\r\n  } catch (error) {\r\n    console.error(\"[FirestoreService Admin] Error merging ticket results:\", error);\r\n    throw new Error(\"Impossible de r\u00E9cup\u00E9rer les tickets r\u00E9cents.\");\r\n  }\r\n};\r\n\r\nexport const getAllTicketsForSectorsSdk = async (sectors: string[]): Promise<SapTicket[]> => {\r\n  if (!sectors || sectors.length === 0) {\r\n    console.log(\"[FirestoreService Admin] getAllTicketsForSectorsSdk: No sectors provided, returning [].\");\r\n    return [];\r\n  }\r\n  console.log(`[FirestoreService Admin] Fetching ALL tickets (one-time) for sectors: ${sectors.join(', ')}`);\r\n\r\n  const ticketPromises = sectors.map(async (sector) => {\r\n    try {\r\n      const sectorCollectionRef = dbAdmin.collection(sector);\r\n      const q = sectorCollectionRef.orderBy('date', 'desc');\r\n      const querySnapshot = await q.get();\r\n      console.log(`[FirestoreService Admin] Fetched ${querySnapshot.size} tickets for sector ${sector}.`);\r\n       return querySnapshot.docs.map(doc => {\r\n          const data = doc.data();\r\n          const parsedDate = parseFrenchDate(data.date);\r\n          const { correctedStatus } = correctTicketStatus(data);\r\n          return {\r\n           id: doc.id,\r\n           ...data,\r\n            statut: correctedStatus ?? data.statut,\r\n            secteur: sector,\r\n            date: parsedDate\r\n          } as SapTicket;\r\n       });\r\n    } catch (error: any) {\r\n      console.error(`[FirestoreService Admin] Error fetching ALL tickets for sector ${sector}:`, error);\r\n       if (error.code === 9 || error.code === 'FAILED_PRECONDITION') {\r\n         console.error(`[FirestoreService Admin] Index missing for ticket query in sector ${sector} (likely on 'date' desc).`);\r\n       }\r\n      return [];\r\n    }\r\n  });\r\n\r\n  try {\r\n     const resultsBySector = await Promise.all(ticketPromises);\r\n     const allTickets = resultsBySector.flat();\r\n     allTickets.sort((a, b) => {\r\n         if (!(b.date instanceof Date)) return -1;\r\n         if (!(a.date instanceof Date)) return 1;\r\n         return b.date.getTime() - a.date.getTime();\r\n     });\r\n     console.log(`[FirestoreService Admin] Fetched a total of ${allTickets.length} tickets across all specified sectors.`);\r\n    return allTickets;\r\n  } catch (error) {\r\n    console.error(\"[FirestoreService Admin] Error merging ALL ticket results:\", error);\r\n    throw new Error(\"Impossible de r\u00E9cup\u00E9rer tous les tickets SAP pour les secteurs sp\u00E9cifi\u00E9s.\");\r\n  }\r\n};\r\n\r\nexport const getTotalTicketCountSdk = async (sectors: string[]): Promise<number> => {\r\n  if (!sectors || sectors.length === 0) {\r\n      console.log(\"[FirestoreService Admin] getTotalTicketCountSdk: No sectors provided, returning 0.\");\r\n      return 0;\r\n  }\r\n  console.log(`[FirestoreService Admin] Counting total tickets via aggregate for sectors: ${sectors.join(', ')}`);\r\n\r\n  const countPromises = sectors.map(async (sector) => {\r\n    try {\r\n      const sectorCollectionRef = dbAdmin.collection(sector);\r\n      const snapshot = await sectorCollectionRef.count().get();\r\n      const count = snapshot.data().count;\r\n      console.log(`[FirestoreService Admin] Counted ${count} docs for sector ${sector}.`);\r\n      return count;\r\n    } catch (error) {\r\n      console.error(`[FirestoreService Admin] Error counting tickets via aggregate for sector ${sector}:`, error);\r\n      return 0;\r\n    }\r\n  });\r\n\r\n  try {\r\n    const counts = await Promise.all(countPromises);\r\n    const totalCount = counts.reduce((sum, count) => sum + count, 0);\r\n    console.log(`[FirestoreService Admin] Total ticket count via aggregate across sectors: ${totalCount}`);\r\n    return totalCount;\r\n  } catch (error) {\r\n    console.error(\"[FirestoreService Admin] Error summing ticket counts from aggregate:\", error);\r\n    throw new Error(\"Impossible de calculer le nombre total de tickets.\");\r\n  }\r\n};\r\n\r\n\r\n// --- Shipment Functions (Using Admin SDK) ---\r\n\r\nexport const getAllShipments = async (userProfile: UserProfile | null): Promise<Shipment[]> => {\r\n  if (!userProfile) {\r\n    console.log(\"[FirestoreService Admin][getAllShipments] Cannot fetch shipments, user profile is null.\");\r\n    return [];\r\n  }\r\n\r\n  console.log(`[FirestoreService Admin][getAllShipments] Fetching shipments for user: ${userProfile.uid}, Role: ${userProfile.role}`);\r\n  const shipmentsCollectionRef = dbAdmin.collection('Envoi');\r\n  let q: admin.firestore.Query<admin.firestore.DocumentData>;\r\n\r\n  try {\r\n    const userSectors = userProfile.secteurs ?? [];\r\n\r\n    if (userProfile.role === 'Admin') {\r\n        console.log(\"[FirestoreService Admin][getAllShipments] Admin user. Fetching ALL shipments.\");\r\n        q = shipmentsCollectionRef.orderBy('nomClient');\r\n    } else {\r\n      if (userSectors.length === 0) {\r\n        console.log(`[FirestoreService Admin][getAllShipments] Non-admin user ${userProfile.uid} has no assigned sectors. Returning empty list.`);\r\n        return [];\r\n      }\r\n      console.log(`[FirestoreService Admin][getAllShipments] Non-admin user. Querying sectors: ${userSectors.join(', ')}`);\r\n      q = shipmentsCollectionRef\r\n        .where('secteur', 'in', userSectors)\r\n        .orderBy('nomClient');\r\n    }\r\n\r\n    console.log(\"[FirestoreService Admin][getAllShipments] Executing query...\");\r\n    const querySnapshot = await q.get();\r\n    console.log(`[FirestoreService Admin][getAllShipments] Query successful. Fetched ${querySnapshot.size} documents.`);\r\n\r\n    const shipments = querySnapshot.docs.map((doc) => {\r\n        const data = doc.data();\r\n        const dateCreation = data.dateCreation instanceof Timestamp ? data.dateCreation.toDate() : undefined;\r\n        return { id: doc.id, ...data, dateCreation } as Shipment;\r\n    });\r\n    return shipments;\r\n\r\n  } catch (error: any) {\r\n    console.error(\"[FirestoreService Admin][getAllShipments] Error fetching shipments:\", error);\r\n    if (error.code === 7 || error.code === 'PERMISSION_DENIED') {\r\n         console.error(\"[FirestoreService Admin][getAllShipments] CRITICAL: Firestore permission denied. Check service account permissions and Firestore rules.\");\r\n         throw new Error(\"Permission refus\u00E9e par Firestore. V\u00E9rifiez les r\u00E8gles de s\u00E9curit\u00E9.\");\r\n     } else if (error.code === 9 || error.code === 'FAILED_PRECONDITION') {\r\n         console.error(\"[FirestoreService Admin][getAllShipments] CRITICAL: Firestore query requires an index. Check Firestore console.\");\r\n         throw new Error(\"Index Firestore manquant. V\u00E9rifiez la console Firestore.\");\r\n     } else {\r\n         throw new Error(`Impossible de r\u00E9cup\u00E9rer la liste des envois. Cause: ${error.message || error}`);\r\n     }\r\n  }\r\n};\r\n\r\nexport const getRecentShipmentsForSectors = async (sectors: string[], count: number = 5): Promise<Shipment[]> => {\r\n  const fetchAllSectors = !sectors || sectors.length === 0;\r\n\r\n  if (fetchAllSectors) {\r\n    console.log(`[FirestoreService Admin] Fetching ${count} recent shipments across ALL sectors (Admin view).`);\r\n  } else {\r\n    console.log(`[FirestoreService Admin] Fetching ${count} recent shipments for sectors: ${sectors.join(', ')}`);\r\n  }\r\n\r\n  try {\r\n    const shipmentsCollectionRef = dbAdmin.collection('Envoi');\r\n    let q: admin.firestore.Query<admin.firestore.DocumentData>;\r\n\r\n    const baseQuery = shipmentsCollectionRef.orderBy('dateCreation', 'desc').limit(count);\r\n\r\n    if (fetchAllSectors) {\r\n      q = baseQuery;\r\n    } else {\r\n      if (sectors.length > 0) {\r\n          q = baseQuery.where('secteur', 'in', sectors);\r\n      } else {\r\n          console.warn(\"[FirestoreService Admin] getRecentShipmentsForSectors: Non-admin called with empty sectors array unexpectedly. Returning [].\");\r\n          return [];\r\n      }\r\n    }\r\n\r\n    const querySnapshot = await q.get();\r\n    const shipments = querySnapshot.docs.map((doc) => {\r\n        const data = doc.data();\r\n        const dateCreation = data.dateCreation instanceof Timestamp ? data.dateCreation.toDate() : undefined;\r\n        return {\r\n            id: doc.id,\r\n            ...data,\r\n            dateCreation: dateCreation\r\n        } as Shipment;\r\n    });\r\n\r\n    console.log(`[FirestoreService Admin] Fetched ${shipments.length} recent shipments matching criteria.`);\r\n    return shipments;\r\n  } catch (error: any) {\r\n    console.error(\"[FirestoreService Admin] Error fetching recent shipments:\", error);\r\n     if (error.code === 9 || error.code === 'FAILED_PRECONDITION') {\r\n         console.error(\"[FirestoreService Admin] CRITICAL: Firestore query requires an index (likely on dateCreation desc). Check Firestore console.\");\r\n         throw new Error(\"Index Firestore manquant (probablement sur dateCreation). V\u00E9rifiez la console Firestore.\");\r\n     }\r\n    throw new Error(`Impossible de r\u00E9cup\u00E9rer les envois r\u00E9cents. Cause: ${error.message || error}`);\r\n  }\r\n};\r\n\r\nconst getAllShipmentsForSectors = async (sectors: string[], isAdmin: boolean): Promise<Shipment[]> => {\r\n  console.log(`[FirestoreService Admin] getAllShipmentsForSectors: Fetching ALL shipments. Admin: ${isAdmin}, Sectors: ${sectors.join(', ')}`);\r\n\r\n  try {\r\n    const shipmentsCollectionRef = dbAdmin.collection('Envoi');\r\n    let q: admin.firestore.Query<admin.firestore.DocumentData>;\r\n\r\n    if (isAdmin) {\r\n        console.log(\"[FirestoreService Admin] getAllShipmentsForSectors: Admin detected, fetching all documents.\");\r\n        q = shipmentsCollectionRef;\r\n    } else {\r\n        if (!sectors || sectors.length === 0) {\r\n            console.log(\"[FirestoreService Admin] getAllShipmentsForSectors: Non-admin with no sectors, returning [].\");\r\n            return [];\r\n        }\r\n        console.log(`[FirestoreService Admin] getAllShipmentsForSectors: Non-admin, fetching for sectors: ${sectors.join(', ')}`);\r\n        q = shipmentsCollectionRef.where('secteur', 'in', sectors);\r\n    }\r\n\r\n    const querySnapshot = await q.get();\r\n    const shipments = querySnapshot.docs.map((doc) => {\r\n        const data = doc.data();\r\n        const dateCreation = data.dateCreation instanceof Timestamp ? data.dateCreation.toDate() : undefined;\r\n        return { id: doc.id, ...data, dateCreation } as Shipment;\r\n    });\r\n    console.log(`[FirestoreService Admin] getAllShipmentsForSectors: Fetched ${shipments.length} total shipments.`);\r\n    return shipments;\r\n  } catch (error: any) {\r\n    console.error(\"[FirestoreService Admin] Error fetching all shipments for sectors:\", error);\r\n     if (error.code === 9 || error.code === 'FAILED_PRECONDITION') {\r\n         console.error(\"[FirestoreService Admin] CRITICAL: Firestore query requires an index. Check Firestore console.\");\r\n         throw new Error(\"Index Firestore manquant. V\u00E9rifiez la console Firestore.\");\r\n     }\r\n    throw new Error(`Impossible de r\u00E9cup\u00E9rer tous les envois pour les secteurs. Cause: ${error.message || error}`);\r\n  }\r\n};\r\n\r\nexport const getDistinctClientCountFromEnvoiSdk = async (userProfile: UserProfile | null): Promise<number> => {\r\n   if (!userProfile) {\r\n     console.log(\"[FirestoreService Admin] getDistinctClientCountFromEnvoiSdk: No user profile provided, returning 0.\");\r\n     return 0;\r\n   }\r\n\r\n   const isAdmin = userProfile.role === 'Admin';\r\n   const userSectors = userProfile.secteurs ?? [];\r\n\r\n   console.warn(`[FirestoreService Admin] Calculating distinct client count from 'Envoi' documents. Admin: ${isAdmin}, Sectors: ${userSectors.join(', ')}. This can be inefficient.`);\r\n\r\n   try {\r\n     const accessibleShipments = await getAllShipmentsForSectors(userSectors, isAdmin);\r\n     console.log(`[FirestoreService Admin] getDistinctClientCountFromEnvoiSdk: Fetched ${accessibleShipments.length} accessible shipments.`);\r\n\r\n     if (accessibleShipments.length === 0) {\r\n         console.log(\"[FirestoreService Admin] getDistinctClientCountFromEnvoiSdk: No accessible shipments found, returning 0 distinct clients.\");\r\n         return 0;\r\n     }\r\n\r\n     const uniqueClientIdentifiers = new Set<string>();\r\n     accessibleShipments.forEach((shipment) => {\r\n       let clientIdentifier: string | null = null;\r\n       if (shipment.codeClient && String(shipment.codeClient).trim() !== '') {\r\n         clientIdentifier = String(shipment.codeClient).trim();\r\n       } else if (shipment.nomClient && String(shipment.nomClient).trim() !== '') {\r\n          clientIdentifier = String(shipment.nomClient).trim();\r\n       }\r\n       if (clientIdentifier) {\r\n         uniqueClientIdentifiers.add(clientIdentifier);\r\n       }\r\n     });\r\n\r\n     const count = uniqueClientIdentifiers.size;\r\n     console.log(`[FirestoreService Admin] getDistinctClientCountFromEnvoiSdk: Found ${count} distinct clients from accessible 'Envoi' documents.`);\r\n     return count;\r\n   } catch (error) {\r\n     console.error(\"[FirestoreService Admin] getDistinctClientCountFromEnvoiSdk: Error calculating distinct client count:\", error);\r\n     throw new Error(\"Impossible de compter les clients distincts depuis les envois.\");\r\n   }\r\n };\r\n\r\nexport const deleteShipmentSdk = async (shipmentId: string): Promise<void> => {\r\n  if (!shipmentId) {\r\n    throw new Error(\"Shipment ID is required to delete.\");\r\n  }\r\n  console.log(`[FirestoreService Admin] Attempting to delete shipment with ID: ${shipmentId}`);\r\n  try {\r\n    const shipmentDocRef = dbAdmin.collection('Envoi').doc(shipmentId);\r\n    await shipmentDocRef.delete();\r\n    console.log(`[FirestoreService Admin] Successfully deleted shipment: ${shipmentId}`);\r\n  } catch (error: any) {\r\n    console.error(`[FirestoreService Admin] Error deleting shipment ${shipmentId}:`, error);\r\n    if (error.code === 7 || error.code === 'PERMISSION_DENIED') {\r\n      console.error(\"[FirestoreService Admin] CRITICAL: Firestore permission denied for delete operation.\");\r\n      throw new Error(\"Permission refus\u00E9e par Firestore pour la suppression.\");\r\n    }\r\n    throw new Error(`Impossible de supprimer l'envoi. Cause: ${error.message || error}`);\r\n  }\r\n};\r\n\r\n\r\n// --- Stats Snapshot Functions (Using Admin SDK) ---\r\n\r\nexport const getLatestStatsSnapshotsSdk = async (count: number = 1): Promise<StatsSnapshot[]> => {\r\n  console.log(`[FirestoreService Admin] Fetching latest ${count} stats snapshot(s) from 'dailyStatsSnapshots'...`);\r\n  try {\r\n    const snapshotsCollectionRef = dbAdmin.collection('dailyStatsSnapshots');\r\n    const q = snapshotsCollectionRef\r\n      .orderBy('timestamp', 'desc')\r\n      .limit(count);\r\n    const querySnapshot = await q.get();\r\n    const snapshots = querySnapshot.docs.map(doc => {\r\n        const data = doc.data();\r\n        const timestamp = data.timestamp instanceof Timestamp ? data.timestamp.toDate() : (data.timestamp ? new Date(data.timestamp) : new Date(0));\r\n        return {\r\n            id: doc.id,\r\n            timestamp: timestamp,\r\n            totalTickets: data.totalTickets ?? 0,\r\n            activeShipments: data.activeShipments ?? 0,\r\n            activeClients: data.activeClients ?? 0,\r\n        } as StatsSnapshot;\r\n    });\r\n    console.log(`[FirestoreService Admin] Fetched ${snapshots.length} snapshot(s).`);\r\n    return snapshots;\r\n  } catch (error: any) {\r\n    console.error(\"[FirestoreService Admin] Error fetching latest stats snapshots:\", error);\r\n     if (error.code === 9 || error.code === 'FAILED_PRECONDITION') {\r\n         console.error(\"[FirestoreService Admin] CRITICAL: Firestore query requires an index (likely on timestamp desc). Check Firestore console.\");\r\n         throw new Error(\"Index Firestore manquant (probablement sur timestamp). V\u00E9rifiez la console Firestore.\");\r\n     }\r\n    throw new Error(`Impossible de r\u00E9cup\u00E9rer le dernier snapshot de statistiques. Cause: ${error.message || error}`);\r\n  }\r\n};\r\n\r\n\r\n// --- Geocode Cache (Using Admin SDK) ---\r\nconst GEOCODE_COLLECTION_NAME = 'geocodes';\r\n\r\nexport const getGeocodeFromCache = async (address: string): Promise<{ latitude: number; longitude: number } | null> => {\r\n  console.log(`[FirestoreService Admin] Getting geocode cache for address: ${address}`);\r\n  try {\r\n    const cacheDocRef = dbAdmin.collection(GEOCODE_COLLECTION_NAME).doc(address);\r\n    const docSnap = await cacheDocRef.get();\r\n\r\n    if (docSnap.exists) {\r\n      const data = docSnap.data() as GeocodeCacheEntry;\r\n      console.log(`[FirestoreService Admin] Geocode cache hit for address: ${address}`);\r\n      return { latitude: data.latitude, longitude: data.longitude };\r\n    } else {\r\n      console.log(`[FirestoreService Admin] Geocode cache miss for address: ${address}`);\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.error(\"[FirestoreService Admin] Error getting geocode from cache:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const saveGeocodeToCache = async (address: string, latitude: number, longitude: number): Promise<void> => {\r\n   console.log(`[FirestoreService Admin] Saving geocode cache for address: ${address}`);\r\n  try {\r\n    const cacheDocRef = dbAdmin.collection(GEOCODE_COLLECTION_NAME).doc(address);\r\n    // Use admin.firestore.FieldValue for server timestamp with Admin SDK\r\n    const cacheEntry: Omit<GeocodeCacheEntry, 'timestamp'> & { timestamp: admin.firestore.FieldValue } = {\r\n      latitude,\r\n      longitude,\r\n      timestamp: FieldValue.serverTimestamp(),\r\n    };\r\n    await cacheDocRef.set(cacheEntry);\r\n    console.log(`[FirestoreService Admin] Geocode saved to cache for address: ${address}`);\r\n  } catch (error: any) {\r\n    console.error(\"[FirestoreService Admin] Error saving geocode to cache:\", error);\r\n     if (error.code === 7 || error.code === 'PERMISSION_DENIED') {\r\n        console.error(\"[FirestoreService Admin] CRITICAL: Firestore permission denied saving geocode cache.\");\r\n    }\r\n  }\r\n};\r\n", "import { useState, useEffect, useCallback, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { getGeocodeFromCache, saveGeocodeToCache } from '~/services/firestore.service.server';\r\nimport type { GeocodeCacheEntry } from '~/types/firestore.types';\r\n\r\n// API response interfaces\r\ninterface OpenCageResult {\r\n  geometry: { lat: number; lng: number };\r\n  formatted: string;\r\n}\r\ninterface OpenCageResponse {\r\n  results: OpenCageResult[];\r\n  status: { code: number; message: string };\r\n}\r\n\r\n// Type for individual geocode result\r\ntype Coordinates = { lat: number; lng: number } | null;\r\n\r\n// Return type of the hook\r\ninterface UseGeoCodingResult {\r\n  coordinates: Map<string, Coordinates>; // Map from normalized address to Coordinates\r\n  isLoading: boolean;\r\n  error: string | null;\r\n}\r\n\r\n// Normalize address\r\nconst normalizeAddress = (address: string): string => {\r\n  return address.trim().toLowerCase().replace(/\\s+/g, ' ');\r\n};\r\n\r\nconst useGeoCoding = (addresses: string[]): UseGeoCodingResult => {\r\n  const [coordinatesMap, setCoordinatesMap] = useState<Map<string, Coordinates>>(new Map());\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const apiKey = \"b93a76ecb4b0439dbfe9e64c3c6aff07\"; // Hardcoded API Key\r\n  const processingRef = useRef<Set<string>>(new Set());\r\n\r\n  const addressesKey = JSON.stringify(addresses.slice().sort());\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    const signal = abortController.signal;\r\n\r\n    const geocodeBatch = async () => {\r\n      if (!addresses || addresses.length === 0) {\r\n        setCoordinatesMap(new Map());\r\n        setIsLoading(false);\r\n        setError(null);\r\n        processingRef.current.clear();\r\n        return;\r\n      }\r\n\r\n      if (!apiKey) {\r\n        console.error(\"OpenCage API Key is missing (hardcoded value)\");\r\n        setError('API Key missing');\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      const addressesToFetch: string[] = [];\r\n      const currentProcessing = new Set<string>();\r\n\r\n      addresses.forEach(addr => {\r\n        if (!addr) return;\r\n        const normalizedAddr = normalizeAddress(addr);\r\n        if (!coordinatesMap.has(normalizedAddr) && !processingRef.current.has(normalizedAddr)) {\r\n          addressesToFetch.push(addr);\r\n          processingRef.current.add(normalizedAddr);\r\n          currentProcessing.add(normalizedAddr);\r\n        }\r\n      });\r\n\r\n      if (addressesToFetch.length === 0) {\r\n        setIsLoading(false);\r\n        const currentNormalizedAddresses = new Set(addresses.map(normalizeAddress));\r\n        processingRef.current.forEach(addr => {\r\n            if (!currentNormalizedAddresses.has(addr)) {\r\n                processingRef.current.delete(addr);\r\n            }\r\n        });\r\n        return;\r\n      }\r\n\r\n      console.log(`[useGeoCoding] Batch geocoding ${addressesToFetch.length} new addresses.`);\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      const promises = addressesToFetch.map(async (addr): Promise<[string, Coordinates]> => {\r\n        const normalizedAddr = normalizeAddress(addr);\r\n        try {\r\n          // 1. Check Firestore Cache (using getGeocodeFromCache which now uses 'geocodes')\r\n          console.log(`[useGeoCoding] Checking cache for: \"${normalizedAddr}\"`);\r\n          const cachedData = await getGeocodeFromCache(normalizedAddr);\r\n          if (cachedData) {\r\n            console.log(`[useGeoCoding] Cache hit for \"${normalizedAddr}\"`);\r\n            return [normalizedAddr, { lat: cachedData.latitude, lng: cachedData.longitude }];\r\n          }\r\n\r\n          // 2. Cache miss - Call OpenCageData API\r\n          if (signal.aborted) throw new Error('Request aborted');\r\n          console.log(`[useGeoCoding] Cache miss. Calling OpenCage API for: \"${addr}\"`);\r\n          const url = `https://api.opencagedata.com/geocode/v1/json?q=${encodeURIComponent(addr)}&key=${apiKey}&language=fr&pretty=1`;\r\n          const response = await axios.get<OpenCageResponse>(url, { signal });\r\n\r\n          if (signal.aborted) throw new Error('Request aborted');\r\n\r\n          if (response.data?.results?.length > 0) {\r\n            const { lat, lng } = response.data.results[0].geometry;\r\n            console.log(`[useGeoCoding] Geocoded \"${addr}\" to:`, { lat, lng });\r\n            // 3. Store result in Firestore Cache (using saveGeocodeToCache which now uses 'geocodes')\r\n            saveGeocodeToCache(normalizedAddr, lat, lng).catch(cacheErr => {\r\n              console.error(`[useGeoCoding] Error storing geocode cache for \"${normalizedAddr}\":`, cacheErr);\r\n            });\r\n            return [normalizedAddr, { lat, lng }];\r\n          } else {\r\n            console.warn(`[useGeoCoding] No results found for address: \"${addr}\"`);\r\n            // Optionally save null to cache to prevent re-querying\r\n            // saveGeocodeToCache(normalizedAddr, null, null).catch(...)\r\n            return [normalizedAddr, null];\r\n          }\r\n        } catch (err: any) {\r\n          if (axios.isCancel(err) || (err.message && err.message.includes('aborted'))) {\r\n             console.log(`[useGeoCoding] Geocode request aborted for \"${addr}\"`);\r\n             return [normalizedAddr, null]; // Return null for aborted requests, matching Coordinates type\r\n          }\r\n          console.error(`[useGeoCoding] Error geocoding address \"${addr}\":`, err);\r\n          let errorMessage = 'Erreur de g\u00E9ocodage';\r\n           if (axios.isAxiosError(err)) {\r\n             if (err.response) {\r\n               errorMessage = `Erreur API (${err.response.status}): ${err.response.data?.status?.message || 'Erreur inconnue'}`;\r\n               if (err.response.status === 401 || err.response.status === 403) errorMessage = 'Cl\u00E9 API invalide';\r\n               else if (err.response.status === 402) errorMessage = 'Quota API d\u00E9pass\u00E9';\r\n             } else if (err.request) {\r\n               errorMessage = 'Pas de r\u00E9ponse du serveur';\r\n             }\r\n           }\r\n          // Check if the error is specifically a Firestore permission error\r\n          if (err.code === 'permission-denied') {\r\n             errorMessage = \"Permission refus\u00E9e pour l'\u00E9criture dans le cache de g\u00E9ocodage.\";\r\n             console.error(\"Firestore permission denied. Check your security rules for the 'geocodes' collection.\");\r\n          }\r\n          setError(prev => prev ? `${prev} | ${errorMessage}` : errorMessage);\r\n          return [normalizedAddr, null];\r\n        }\r\n      });\r\n\r\n      const results = await Promise.allSettled(promises);\r\n\r\n      if (!signal.aborted) {\r\n        setCoordinatesMap(prevMap => {\r\n          const newMap = new Map(prevMap);\r\n          results.forEach(result => {\r\n            if (result.status === 'fulfilled' && result.value && result.value[1] !== undefined) {\r\n              const [normalizedAddr, coords] = result.value;\r\n              newMap.set(normalizedAddr, coords);\r\n            } else if (result.status === 'rejected') {\r\n              console.error(\"[useGeoCoding] Promise rejected:\", result.reason);\r\n            }\r\n            // Remove processed addresses from the processing ref\r\n            if (result.status === 'fulfilled' && result.value) {\r\n                 processingRef.current.delete(result.value[0]);\r\n            }\r\n            // Simplified removal for rejected/aborted for now\r\n            // else if (result.status === 'rejected') {\r\n            //    // Need a way to map rejection back to address if not handled inside promise\r\n            // }\r\n          });\r\n           const currentNormalizedAddresses = new Set(addresses.map(normalizeAddress));\r\n           processingRef.current.forEach(addr => {\r\n               if (!currentNormalizedAddresses.has(addr)) {\r\n                   processingRef.current.delete(addr);\r\n               }\r\n           });\r\n          return newMap;\r\n        });\r\n        setIsLoading(false);\r\n      } else {\r\n         console.log(\"[useGeoCoding] Effect aborted, skipping state update.\");\r\n      }\r\n\r\n       if (signal.aborted) {\r\n           currentProcessing.forEach(addr => processingRef.current.delete(addr));\r\n       }\r\n\r\n    };\r\n\r\n    geocodeBatch();\r\n\r\n    return () => {\r\n      console.log(\"[useGeoCoding] Cleanup effect\");\r\n      abortController.abort();\r\n    };\r\n  }, [addressesKey, apiKey]); // Dependencies\r\n\r\n  return { coordinates: coordinatesMap, isLoading: isLoading, error: error };\r\n};\r\n\r\nexport default useGeoCoding;\r\n", "// NOTE: This is a manual conversion of the provided secteurs.kml.\r\n// A proper KML parsing library would be more robust but may not be\r\n// available or easy to use in this environment.\r\n// KML coordinates are lon,lat,alt. GeoJSON coordinates are lon,lat.\r\n\r\n// Define the structure expected by the InteractiveMap component\r\ninterface KmlZoneFeature {\r\n  type: \"Feature\";\r\n  properties: {\r\n    name: string;\r\n    // Add other properties if needed from KML <Data> tags\r\n  };\r\n  geometry: {\r\n    type: \"Polygon\";\r\n    coordinates: number[][][]; // Array of LinearRings, first is outer, others are inner\r\n  };\r\n}\r\n\r\ninterface KmlZone {\r\n  feature: KmlZoneFeature;\r\n}\r\n\r\n// Helper to convert KML coordinate string to GeoJSON number array format\r\nconst kmlCoordsToGeoJson = (kmlCoordString: string): number[][] => {\r\n  return kmlCoordString\r\n    .trim()\r\n    .split(/\\s+/) // Split by spaces\r\n    .map(pair => {\r\n      const coords = pair.split(','); // Split lon,lat,alt\r\n      // Return only lon, lat as numbers\r\n      return [parseFloat(coords[0]), parseFloat(coords[1])];\r\n    })\r\n    // Ensure the first and last points are the same for a valid LinearRing\r\n    .filter(coords => !isNaN(coords[0]) && !isNaN(coords[1])); // Filter out potential NaN results\r\n};\r\n\r\n// Manually define the zones based on the KML structure\r\nexport const kmlZones: KmlZone[] = [\r\n  {\r\n    feature: {\r\n      type: \"Feature\",\r\n      properties: { name: \"Baptiste\" },\r\n      geometry: {\r\n        type: \"Polygon\",\r\n        coordinates: [\r\n          kmlCoordsToGeoJson(`\r\n            4.8836577,44.886044,0\r\n            4.2842162,44.9924881,0\r\n            3.8667357,44.7225929,0\r\n            4.0644896,44.3231158,0\r\n            4.646765,44.3034632,0\r\n            5.4927123,44.1124911,0\r\n            5.7151854,44.1834396,0\r\n            5.4515135,44.405585,0\r\n            5.836035,44.6894078,0\r\n            5.4563201,44.7906117,0\r\n            5.1425231,44.9652883,0\r\n            5.0251067,44.94488,0\r\n            4.8836577,44.886044,0\r\n          `)\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  {\r\n    feature: {\r\n      type: \"Feature\",\r\n      properties: { name: \"julien Is\u00E8re\" }, // Note: KML name has space\r\n      geometry: {\r\n        type: \"Polygon\",\r\n        coordinates: [\r\n          kmlCoordsToGeoJson(`\r\n            5.4712372,45.0877866,0\r\n            5.4087525,45.2146597,0\r\n            5.3407746,45.3460764,0\r\n            5.3579407,45.3923861,0\r\n            5.154007,45.5084757,0\r\n            5.1588727,45.6134865,0\r\n            5.0592499,45.6488118,0\r\n            4.8024445,45.5810905,0\r\n            4.8628693,45.5253153,0\r\n            4.7543793,45.4535917,0\r\n            4.7548924,45.3637067,0\r\n            4.8045044,45.3002118,0\r\n            4.9947052,45.3475241,0\r\n            5.1794129,45.2518931,0\r\n            5.1505738,45.0800295,0\r\n            5.3819733,45.0465649,0\r\n            5.4712372,45.0877866,0\r\n          `)\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  {\r\n    feature: {\r\n      type: \"Feature\",\r\n      properties: { name: \"Julien\" },\r\n      geometry: {\r\n        type: \"Polygon\",\r\n        coordinates: [\r\n          kmlCoordsToGeoJson(`\r\n            5.4607639,44.7993594,0\r\n            5.47999,45.0836844,0\r\n            5.3804264,45.04343,0\r\n            5.1462803,45.0788359,0\r\n            5.1744328,45.2507031,0\r\n            4.9952183,45.3444058,0\r\n            4.8029575,45.2970908,0\r\n            4.7548924,45.3637067,0\r\n            4.5983372,45.2912944,0\r\n            4.4905338,45.2303966,0\r\n            4.2852268,44.9963497,0\r\n            4.8812351,44.8894264,0\r\n            5.0206242,44.946315,0\r\n            5.1435337,44.968666,0\r\n            5.4607639,44.7993594,0\r\n          `)\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  {\r\n    feature: {\r\n      type: \"Feature\",\r\n      properties: { name: \"Florian\" },\r\n      geometry: {\r\n        type: \"Polygon\",\r\n        coordinates: [\r\n          kmlCoordsToGeoJson(`\r\n            5.8179481,44.7013913,0\r\n            6.1461645,44.8612524,0\r\n            6.3569647,44.8558986,0\r\n            6.3260653,45.0012533,0\r\n            6.2072756,45.0187293,0\r\n            6.2628937,45.1254119,0\r\n            6.1619567,45.160767,0\r\n            6.1303705,45.4370377,0\r\n            5.9793082,45.5852412,0\r\n            5.8893576,45.6020577,0\r\n            5.6256856,45.6083024,0\r\n            5.3626999,45.878565,0\r\n            5.2226244,45.7661144,0\r\n            5.0722489,45.7910165,0\r\n            5.161513,45.6990145,0\r\n            5.0592036,45.646717,0\r\n            5.1615684,45.610667,0\r\n            5.1546475,45.5049321,0\r\n            5.3668206,45.3946213,0\r\n            5.3482813,45.3459005,0\r\n            5.4801178,45.0890645,0\r\n            5.4718786,44.7959962,0\r\n            5.8179481,44.7013913,0\r\n          `)\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  {\r\n    feature: {\r\n      type: \"Feature\",\r\n      properties: { name: \"Matthieu\" },\r\n      geometry: {\r\n        type: \"Polygon\",\r\n        coordinates: [\r\n          kmlCoordsToGeoJson(`\r\n            5.811555,46.0055516,0\r\n            5.8369609,45.9325323,0\r\n            5.8778364,45.8310799,0\r\n            5.9590929,45.8132902,0\r\n            5.9993579,45.7506936,0\r\n            6.1535045,45.7550725,0\r\n            6.18921,45.7004294,0\r\n            6.3128062,45.6889188,0\r\n            6.5181132,45.9038709,0\r\n            6.7158671,45.7248816,0\r\n            6.8023845,45.7718382,0\r\n            7.0440837,45.9277564,0\r\n            6.894395,46.118946,0\r\n            6.8113109,46.1322712,0\r\n            6.8628093,46.2829067,0\r\n            6.7934581,46.3279694,0\r\n            6.8161174,46.4269768,0\r\n            6.5201732,46.458678,0\r\n            6.2269755,46.3146916,0\r\n            6.309373,46.2468299,0\r\n            5.9578105,46.1346504,0\r\n            5.8294078,46.1065697,0\r\n            5.811555,46.0055516,0\r\n          `)\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  {\r\n    feature: {\r\n      type: \"Feature\",\r\n      properties: { name: \"Guillem\" },\r\n      geometry: {\r\n        type: \"Polygon\",\r\n        coordinates: [\r\n          kmlCoordsToGeoJson(`\r\n            5.8274262,45.9345997,0\r\n            5.7704346,45.7264774,0\r\n            5.6413453,45.6194831,0\r\n            5.889911,45.6108379,0\r\n            5.984668,45.5940239,0\r\n            6.1350434,45.4458434,0\r\n            6.1789887,45.1744565,0\r\n            6.2696259,45.1376567,0\r\n            6.4591401,45.0523449,0\r\n            6.6376679,45.1095567,0\r\n            7.1526521,45.251852,0\r\n            7.185611,45.4053629,0\r\n            6.807956,45.7648112,0\r\n            6.7118256,45.7188075,0\r\n            6.5181916,45.8968606,0\r\n            6.3190644,45.6823611,0\r\n            6.1831086,45.693873,0\r\n            6.147403,45.7456476,0\r\n            5.9935944,45.7446893,0\r\n            5.9496491,45.8069479,0\r\n            5.8741181,45.8241765,0\r\n            5.8274262,45.9345997,0\r\n          `)\r\n        ]\r\n      }\r\n    }\r\n  }\r\n];\r\n\r\n// Ensure all polygons are closed (first and last point are identical)\r\nkmlZones.forEach(zone => {\r\n  zone.feature.geometry.coordinates.forEach(ring => {\r\n    if (ring.length > 0) {\r\n      const first = ring[0];\r\n      const last = ring[ring.length - 1];\r\n      if (first[0] !== last[0] || first[1] !== last[1]) {\r\n        console.warn(`[kmlZones] Polygon ring for \"${zone.feature.properties.name}\" was not closed. Closing it.`);\r\n        ring.push(first);\r\n      }\r\n    }\r\n  });\r\n});\r\n", "import React, { useState, useMemo, useEffect, useCallback } from 'react';\r\n// Import MarkerEvent and ViewStateChangeEvent for v7/v8 compatibility if needed\r\nimport Map, { Marker, Popup, Source, Layer, MapRef, MarkerEvent, ViewStateChangeEvent } from 'react-map-gl';\r\nimport mapboxgl from 'mapbox-gl'; // Import mapboxgl types/namespace\r\nimport type { Feature, FeatureCollection, Point } from 'geojson';\r\nimport useGeoCoding from '~/hooks/useGeoCoding';\r\nimport { kmlZones } from '~/utils/kmlZones';\r\nimport type { SapTicket } from '~/types/firestore.types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner, faExclamationTriangle, faMapMarkedAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\n// Mapbox Access Token (Ensure this is securely managed, e.g., via environment variables)\r\nconst MAPBOX_ACCESS_TOKEN = 'pk.eyJ1Ijoic2ltcGVyZnk0MDQiLCJhIjoiY201ZnFuNG5wMDBoejJpczZkNXMxNTBveCJ9.BM3MvMHuUkhQj91tQTChoQ';\r\n\r\n// Interface for props\r\ninterface InteractiveMapProps {\r\n  tickets: SapTicket[];\r\n  isLoadingTickets: boolean;\r\n}\r\n\r\n// Zone colors mapping (adjust structure for Mapbox layer paint properties)\r\nconst zoneColorMap: { [key: string]: { color: string; opacity: number } } = {\r\n  'Baptiste': { color: '#FFEA00', opacity: 0.3 }, // Yellow\r\n  'julien Is\u00E8re': { color: '#000000', opacity: 0.3 }, // Black\r\n  'Julien': { color: '#097138', opacity: 0.3 }, // Green\r\n  'Florian': { color: '#E65100', opacity: 0.3 }, // Orange\r\n  'Matthieu': { color: '#9C27B0', opacity: 0.3 }, // Purple\r\n  'Guillem': { color: '#9FA8DA', opacity: 0.3 }, // Light Purple/Blue\r\n};\r\nconst defaultZoneColor = '#3388ff';\r\nconst defaultZoneOpacity = 0.3;\r\n\r\n// Helper to create Mapbox paint properties for zones based on name\r\nconst zoneFillPaint: mapboxgl.FillPaint = {\r\n  'fill-color': [\r\n    'match',\r\n    ['get', 'name'], // Get the 'name' property from the feature\r\n    'Baptiste', zoneColorMap['Baptiste'].color,\r\n    'julien Is\u00E8re', zoneColorMap['julien Is\u00E8re'].color,\r\n    'Julien', zoneColorMap['Julien'].color,\r\n    'Florian', zoneColorMap['Florian'].color,\r\n    'Matthieu', zoneColorMap['Matthieu'].color,\r\n    'Guillem', zoneColorMap['Guillem'].color,\r\n    defaultZoneColor // Default color\r\n  ],\r\n  'fill-opacity': [\r\n    'case',\r\n    ['boolean', ['feature-state', 'hover'], false], // Check hover state\r\n    0.5, // Opacity when hovered\r\n    [ // Opacity based on name when not hovered\r\n        'match',\r\n        ['get', 'name'],\r\n        'Baptiste', zoneColorMap['Baptiste'].opacity,\r\n        'julien Is\u00E8re', zoneColorMap['julien Is\u00E8re'].opacity,\r\n        'Julien', zoneColorMap['Julien'].opacity,\r\n        'Florian', zoneColorMap['Florian'].opacity,\r\n        'Matthieu', zoneColorMap['Matthieu'].opacity,\r\n        'Guillem', zoneColorMap['Guillem'].opacity,\r\n        defaultZoneOpacity // Default opacity\r\n    ]\r\n  ]\r\n};\r\n\r\nconst zoneLinePaint: mapboxgl.LinePaint = {\r\n    'line-color': [\r\n        'match',\r\n        ['get', 'name'],\r\n        'Baptiste', zoneColorMap['Baptiste'].color,\r\n        'julien Is\u00E8re', zoneColorMap['julien Is\u00E8re'].color,\r\n        'Julien', zoneColorMap['Julien'].color,\r\n        'Florian', zoneColorMap['Florian'].color,\r\n        'Matthieu', zoneColorMap['Matthieu'].color,\r\n        'Guillem', zoneColorMap['Guillem'].color,\r\n        defaultZoneColor\r\n    ],\r\n    'line-width': [\r\n        'case',\r\n        ['boolean', ['feature-state', 'hover'], false],\r\n        4, // Line width when hovered\r\n        2  // Default line width\r\n    ],\r\n    'line-opacity': 0.8\r\n};\r\n\r\n\r\n// Marker color based on ticket status\r\nconst getMarkerColor = (status?: string): string => {\r\n    if (!status) return '#808080'; // Grey as default\r\n    const statusLower = status.toLowerCase();\r\n    if (statusLower.includes('en cours')) return '#FFA500'; // Orange\r\n    if (statusLower.includes('ferm\u00E9')) return '#4CAF50'; // Green\r\n    if (statusLower.includes('annul\u00E9')) return '#F44336'; // Red\r\n    if (statusLower.includes('demande de rma')) return '#9C27B0'; // Purple\r\n    if (statusLower.includes('nouveau')) return '#2196F3'; // Blue\r\n    if (statusLower.includes('ouvert')) return '#FFEB3B'; // Yellow\r\n    return '#808080'; // Default Grey\r\n};\r\n\r\n// Normalize address function (remains the same)\r\nconst normalizeAddress = (address: string): string => {\r\n    return address.trim().toLowerCase().replace(/\\s+/g, ' ');\r\n};\r\n\r\n// --- Component ---\r\nconst InteractiveMap: React.FC<InteractiveMapProps> = ({ tickets, isLoadingTickets }) => {\r\n  // v7 typically uses individual state pieces or a single viewport object\r\n  const [viewport, setViewport] = useState({\r\n    longitude: 2.2137,\r\n    latitude: 46.2276,\r\n    zoom: 5.5,\r\n    // pitch, bearing, padding might be handled differently or directly on Map component in v7\r\n  });\r\n  const [mapError, setMapError] = useState<string | null>(null);\r\n  const [selectedTicket, setSelectedTicket] = useState<SapTicket | null>(null);\r\n  const [hoveredZoneId, setHoveredZoneId] = useState<string | number | null>(null);\r\n  const mapRef = React.useRef<MapRef>(null);\r\n\r\n  // --- Geocoding Logic ---\r\n  const uniqueAddresses = useMemo(() => {\r\n    console.log(\"[InteractiveMap] Recalculating unique addresses...\");\r\n    if (!Array.isArray(tickets)) return [];\r\n    const addresses = tickets\r\n      .map(ticket => ticket.adresse)\r\n      .filter((addr): addr is string => typeof addr === 'string' && addr.trim() !== '');\r\n    const uniqueSet = new Set(addresses);\r\n    console.log(`[InteractiveMap] Found ${uniqueSet.size} unique addresses.`);\r\n    return Array.from(uniqueSet);\r\n  }, [tickets]);\r\n\r\n  const { coordinates: geocodedCoordinates, isLoading: isGeocoding, error: geocodingError } = useGeoCoding(uniqueAddresses);\r\n  // --- End Geocoding ---\r\n\r\n  // --- Prepare Zones GeoJSON ---\r\n  const zonesGeoJson: FeatureCollection = useMemo(() => {\r\n    console.log(\"[InteractiveMap] Preparing zones GeoJSON...\");\r\n    const features = kmlZones.map((zone, index) => ({\r\n        ...zone.feature,\r\n        id: index // Assign a unique ID for hover state management\r\n    }));\r\n    return {\r\n      type: 'FeatureCollection',\r\n      features: features as Feature[], // Assert type after adding id\r\n    };\r\n  }, []);\r\n  // --- End Zones GeoJSON ---\r\n\r\n  // --- Map Event Handlers (Adjusted for v7/v8 compatibility) ---\r\n  // Use onMove which is generally available, update viewport state\r\n   const handleMove = useCallback((evt: ViewStateChangeEvent) => {\r\n    // evt.viewState contains longitude, latitude, zoom etc.\r\n    setViewport(evt.viewState);\r\n  }, []);\r\n\r\n\r\n  const handleMapLoad = useCallback(() => {\r\n    console.log(\"[InteractiveMap] Map loaded.\");\r\n    // Fit bounds to zones once map and zones data are ready\r\n    if (mapRef.current && zonesGeoJson.features.length > 0) {\r\n        // Calculate bounds from GeoJSON (requires a helper or library like @turf/bbox)\r\n        // For simplicity, we'll keep the initial view for now.\r\n        // A more robust solution would calculate the bounding box of zonesGeoJson.\r\n        console.log(\"[InteractiveMap] Map loaded, zones ready (bounds fitting skipped for simplicity).\");\r\n    }\r\n  }, [zonesGeoJson]); // Re-run if zonesGeoJson changes (shouldn't often)\r\n\r\n  const handleMouseEnterZone = useCallback((e: mapboxgl.MapLayerMouseEvent) => {\r\n    if (e.features && e.features.length > 0) {\r\n        const feature = e.features[0];\r\n        if (feature.id !== undefined && feature.id !== hoveredZoneId) {\r\n            if (hoveredZoneId !== null) {\r\n                mapRef.current?.setFeatureState(\r\n                    { source: 'zones-source', id: hoveredZoneId },\r\n                    { hover: false }\r\n                );\r\n            }\r\n            setHoveredZoneId(feature.id);\r\n            mapRef.current?.setFeatureState(\r\n                { source: 'zones-source', id: feature.id },\r\n                { hover: true }\r\n            );\r\n            // Safely set cursor style\r\n            const mapInstance = mapRef.current?.getMap();\r\n            if (mapInstance) {\r\n                mapInstance.getCanvas().style.cursor = 'pointer';\r\n            }\r\n        }\r\n    }\r\n  }, [hoveredZoneId]);\r\n\r\n  const handleMouseLeaveZone = useCallback(() => {\r\n    if (hoveredZoneId !== null) {\r\n        mapRef.current?.setFeatureState(\r\n            { source: 'zones-source', id: hoveredZoneId },\r\n            { hover: false }\r\n        );\r\n    }\r\n    setHoveredZoneId(null);\r\n    // Safely reset cursor style\r\n    const mapInstance = mapRef.current?.getMap();\r\n    if (mapInstance) {\r\n        mapInstance.getCanvas().style.cursor = '';\r\n    }\r\n  }, [hoveredZoneId]);\r\n\r\n  // --- End Map Event Handlers ---\r\n\r\n  // Handle geocoding errors\r\n  useEffect(() => {\r\n    if (geocodingError) {\r\n      console.error(\"[InteractiveMap] Geocoding Error:\", geocodingError);\r\n      setMapError(prev => prev ? `${prev} | Erreur G\u00E9ocodage: ${geocodingError}` : `Erreur G\u00E9ocodage: ${geocodingError}`);\r\n    } else {\r\n      // Clear geocoding error if it resolves\r\n      if (mapError?.includes('G\u00E9ocodage')) {\r\n         const otherErrors = mapError.replace(/\\|? Erreur G\u00E9ocodage:.*?($|\\|)/, '').trim();\r\n         setMapError(otherErrors || null);\r\n      }\r\n    }\r\n  }, [geocodingError, mapError]);\r\n\r\n  // --- Render Markers ---\r\n  const ticketMarkers = useMemo(() => {\r\n    if (!Array.isArray(tickets) || geocodedCoordinates.size === 0) {\r\n      return null;\r\n    }\r\n    console.log(`[InteractiveMap] Rendering ${tickets.length} tickets, ${geocodedCoordinates.size} geocoded.`);\r\n\r\n    return tickets.map((ticket) => {\r\n      const originalAddress = ticket.adresse;\r\n      if (!originalAddress || typeof originalAddress !== 'string' || originalAddress.trim() === '') return null;\r\n\r\n      const normalizedAddr = normalizeAddress(originalAddress);\r\n      const coordinates = geocodedCoordinates.get(normalizedAddr);\r\n\r\n      if (coordinates) {\r\n        const markerColor = getMarkerColor(ticket.statut);\r\n        return (\r\n          <Marker\r\n            key={ticket.id}\r\n            longitude={coordinates.lng}\r\n            latitude={coordinates.lat}\r\n            anchor=\"center\"\r\n            // Let TypeScript infer the event type, access originalEvent\r\n            onClick={(e) => {\r\n              // Prevent map click event when clicking marker\r\n              if (e.originalEvent) { // Check for originalEvent\r\n                e.originalEvent.stopPropagation();\r\n              }\r\n              setSelectedTicket(ticket);\r\n            }}\r\n          >\r\n            {/* Custom Marker Style */}\r\n            <div style={{\r\n                backgroundColor: markerColor,\r\n                width: '15px',\r\n                height: '15px',\r\n                borderRadius: '50%',\r\n                border: '2px solid white',\r\n                boxShadow: '0 0 5px rgba(0,0,0,0.5)',\r\n                cursor: 'pointer'\r\n            }}></div>\r\n          </Marker>\r\n        );\r\n      }\r\n      return null; // Skip tickets without coordinates\r\n    }).filter(Boolean); // Remove null entries\r\n\r\n  }, [tickets, geocodedCoordinates]);\r\n  // --- End Render Markers ---\r\n\r\n\r\n  return (\r\n    <div className=\"bg-jdc-card p-4 rounded-lg shadow-lg relative min-h-[450px]\">\r\n      <h2 className=\"text-xl font-semibold text-white mb-3 flex items-center\">\r\n        <FontAwesomeIcon icon={faMapMarkedAlt} className=\"mr-2 text-jdc-yellow\" />\r\n        Carte des Tickets R\u00E9cents (Mapbox)\r\n      </h2>\r\n\r\n      {/* Loading and Error Overlays */}\r\n      {(isLoadingTickets || (isGeocoding && geocodedCoordinates.size === 0 && uniqueAddresses.length > 0)) && (\r\n        <div className=\"absolute inset-0 z-[500] flex items-center justify-center bg-jdc-card bg-opacity-75 rounded-lg\">\r\n          <FontAwesomeIcon icon={faSpinner} spin className=\"text-jdc-yellow text-3xl mr-2\" />\r\n          <span className=\"text-white\">\r\n            {isLoadingTickets ? \"Chargement des tickets...\" : \"G\u00E9ocodage des adresses...\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {isGeocoding && !isLoadingTickets && (\r\n        <div className=\"absolute top-16 right-4 z-[1000] text-jdc-yellow\" title=\"G\u00E9ocodage en cours...\">\r\n          <FontAwesomeIcon icon={faSpinner} spin />\r\n        </div>\r\n      )}\r\n      {mapError && !isLoadingTickets && !isGeocoding && (\r\n        <div className=\"absolute top-12 left-1/2 transform -translate-x-1/2 z-[1000] bg-red-800 text-white px-4 py-2 rounded text-sm shadow-lg flex items-center\">\r\n          <FontAwesomeIcon icon={faExclamationTriangle} className=\"mr-2\" />\r\n          {mapError}\r\n        </div>\r\n      )}\r\n\r\n      {/* Map Container */}\r\n      <div\r\n        className={`w-full h-[450px] rounded-lg overflow-hidden ${ (isLoadingTickets || (isGeocoding && geocodedCoordinates.size === 0 && uniqueAddresses.length > 0)) ? 'opacity-50' : ''}`}\r\n        style={{ backgroundColor: '#4a4a4a' }}\r\n      >\r\n        <Map\r\n          ref={mapRef}\r\n          // Pass individual viewport props for v7\r\n          latitude={viewport.latitude}\r\n          longitude={viewport.longitude}\r\n          zoom={viewport.zoom}\r\n          // Use onMove for viewport updates\r\n          onMove={handleMove}\r\n          onLoad={handleMapLoad}\r\n          mapboxAccessToken={MAPBOX_ACCESS_TOKEN}\r\n          mapStyle=\"mapbox://styles/mapbox/streets-v11\" // Standard Mapbox street style\r\n          style={{ width: '100%', height: '100%' }}\r\n          onMouseEnter={handleMouseEnterZone} // Attach hover listener to map for zones layer\r\n          onMouseLeave={handleMouseLeaveZone}\r\n          interactiveLayerIds={['zones-fill-layer']} // Make the zones fill layer interactive for hover\r\n        >\r\n          {/* Zones Layer */}\r\n          <Source id=\"zones-source\" type=\"geojson\" data={zonesGeoJson} generateId={true}>\r\n            <Layer\r\n                id=\"zones-fill-layer\"\r\n                type=\"fill\"\r\n                source=\"zones-source\"\r\n                paint={zoneFillPaint}\r\n            />\r\n            <Layer\r\n                id=\"zones-line-layer\"\r\n                type=\"line\"\r\n                source=\"zones-source\"\r\n                paint={zoneLinePaint}\r\n            />\r\n          </Source>\r\n\r\n          {/* Ticket Markers */}\r\n          {ticketMarkers}\r\n\r\n          {/* Popup for Selected Ticket */}\r\n          {selectedTicket && geocodedCoordinates.get(normalizeAddress(selectedTicket.adresse || '')) && (\r\n            <Popup\r\n              longitude={geocodedCoordinates.get(normalizeAddress(selectedTicket.adresse || ''))!.lng}\r\n              latitude={geocodedCoordinates.get(normalizeAddress(selectedTicket.adresse || ''))!.lat}\r\n              anchor=\"bottom\"\r\n              onClose={() => setSelectedTicket(null)}\r\n              closeOnClick={false} // Keep popup open when map is clicked\r\n              offset={15} // Offset from marker center\r\n            >\r\n              <div>\r\n                <b>{selectedTicket.raisonSociale || 'Client inconnu'}</b><br/>\r\n                {selectedTicket.adresse}<br/>\r\n                Statut: {selectedTicket.statut || 'Non d\u00E9fini'}<br/>\r\n                ID: {selectedTicket.id}\r\n              </div>\r\n            </Popup>\r\n          )}\r\n        </Map>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InteractiveMap;\r\n", "import type { EntryContext } from \"@remix-run/node\";\r\nimport { RemixServer } from \"@remix-run/react\";\r\nimport { renderToString } from \"react-dom/server\";\r\n\r\nexport default function handleRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  const markup = renderToString(\r\n    <RemixServer context={remixContext} url={request.url} />\r\n  );\r\n\r\n  responseHeaders.set(\"Content-Type\", \"text/html\");\r\n  return new Response(\"<!DOCTYPE html>\" + markup, {\r\n    status: responseStatusCode,\r\n    headers: responseHeaders,\r\n  });\r\n}\r\n", "import { type ReactNode, useEffect, useState, Suspense } from 'react';\nimport {\n  Links,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData,\n  useLocation,\n  useNavigation\n  // useSubmit, // Removed as it was only for client-side logout\n} from \"@remix-run/react\";\n// Consolidate imports from @remix-run/node\nimport type { LinksFunction, LoaderFunctionArgs, ActionFunctionArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport * as NProgress from 'nprogress'; // Use namespace import\nimport nProgressStyles from 'nprogress/nprogress.css?url'; // Import nprogress CSS\nimport globalStylesUrl from \"~/styles/global.css?url\"; // Import global CSS\nimport tailwindStylesUrl from \"~/tailwind.css?url\"; // Import Tailwind CSS\nimport mapboxStylesUrl from 'mapbox-gl/dist/mapbox-gl.css?url'; // Import Mapbox GL CSS\n\nimport { Header } from \"~/components/Header\";\nimport { MobileMenu } from \"~/components/MobileMenu\";\nimport { AuthModal } from \"~/components/AuthModal\";\nimport ToastContainer from '~/components/Toast'; // Correct: Import default export\nimport { ToastProvider, useToast } from '~/context/ToastContext'; // Import ToastProvider and useToast\n// Firebase client-side auth imports are removed\nimport type { UserProfile } from '~/types/firestore.types'; // Keep UserProfile type\n// Re-introduce client SDK imports for profile fetching\nimport { getFirestore, doc, getDoc, Timestamp } from 'firebase/firestore';\nimport { db as clientDb } from '~/firebase.config'; // Import client db instance\nimport { authenticator } from \"~/services/auth.server\"; // Import remix-auth authenticator\nimport type { UserSession } from \"~/services/session.server\"; // Import UserSession type\n\n// Define links for CSS\nexport const links: LinksFunction = () => [\n// Google Fonts - Roboto\n{ rel: \"preconnect\", href: \"https://fonts.googleapis.com\" },\n{ rel: \"preconnect\", href: \"https://fonts.gstatic.com\", crossOrigin: \"anonymous\" },\n{ rel: \"stylesheet\", href: \"https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap\" },\n// App Styles\n{ rel: \"stylesheet\", href: tailwindStylesUrl },\n{ rel: \"stylesheet\", href: globalStylesUrl },\n{ rel: \"stylesheet\", href: nProgressStyles },\n{ rel: \"stylesheet\", href: mapboxStylesUrl } // Add Mapbox GL CSS here\n];\n\n// --- Root Loader: Load ONLY the user session ---\nexport const loader = async ({ request }: LoaderFunctionArgs) => {\n  console.log(\"Root Loader: Checking authentication state via remix-auth.\");\n  // Attempt to get the user session from the request using the authenticator\n  const userSession = await authenticator.isAuthenticated(request); // Returns UserSession or null\n\n  // DO NOT fetch profile here to avoid serialization issues with Timestamps\n  console.log(\"Root Loader: Returning data:\", { user: userSession });\n  return json({ user: userSession });\n};\n\n// --- Root Action ---\n// Consider removing if no root actions other than logout (handled by /logout) are needed.\nexport const action = async ({ request }: ActionFunctionArgs) => {\n  const formData = await request.formData();\n  const action = formData.get(\"_action\");\n  console.warn(\"Root Action: Received unexpected action:\", action);\n  return json({ ok: false, error: \"Invalid root action\" }, { status: 400 });\n};\n\n// --- Client-side Profile Fetch Function ---\n// Uses the Firebase Client SDK\nasync function getClientUserProfile(userId: string): Promise<UserProfile | null> {\n  if (!userId) return null;\n  console.log(`[getClientUserProfile] Fetching profile client-side for ID: ${userId}`);\n  try {\n    const userDocRef = doc(clientDb, 'users', userId); // Use clientDb\n    const userDocSnap = await getDoc(userDocRef);\n\n    if (userDocSnap.exists()) {\n      const data = userDocSnap.data();\n      // Convert Timestamps to Dates\n      const createdAt = data.createdAt instanceof Timestamp ? data.createdAt.toDate() : undefined;\n      const updatedAt = data.updatedAt instanceof Timestamp ? data.updatedAt.toDate() : undefined;\n      console.log(`[getClientUserProfile] Profile found for ID: ${userId}`);\n      return {\n        uid: userId, // Use the passed userId as uid\n        email: data.email,\n        displayName: data.displayName,\n        role: data.role,\n        secteurs: data.secteurs,\n        createdAt: createdAt,\n        updatedAt: updatedAt\n      } as UserProfile;\n    } else {\n      console.warn(`[getClientUserProfile] No profile found for ID: ${userId}`);\n      return null; // Return null if profile doesn't exist\n    }\n  } catch (error) {\n    console.error(`[getClientUserProfile] Error fetching profile for ID ${userId}:`, error);\n    // Re-throw or return null based on how you want to handle errors\n    throw new Error(`Impossible de r\u00E9cup\u00E9rer le profil client (ID: ${userId}).`);\n    // return null;\n  }\n}\n\n\n// Main App Component wrapped with ToastProvider\nfunction App({ children }: {children: ReactNode;}) {\n  // Get user session from the root loader\n  const { user } = useLoaderData<typeof loader>(); // user is UserSession | null\n  const location = useLocation();\n  const navigation = useNavigation();\n  const { addToast } = useToast();\n\n  // State for profile fetched client-side\n  const [profile, setProfile] = useState<UserProfile | null>(null);\n  const [profileLoading, setProfileLoading] = useState(false);\n\n  // State for mobile menu and auth modal (keep these)\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [isAuthModalOpen, setIsAuthModalOpen] = useState(false);\n\n  // NProgress loading indicator logic\n  useEffect(() => {\n    if (navigation.state === 'idle' && !profileLoading) {// Only stop if not loading profile\n      NProgress.done();\n    } else {\n      NProgress.start();\n    }\n  }, [navigation.state, profileLoading]); // Depend on profileLoading too\n\n  // Fetch profile client-side when user session changes\n  useEffect(() => {\n    let isMounted = true;\n    const fetchProfile = async () => {\n      // Use userId from the session object loaded by the root loader\n      const currentUserId = user?.userId;\n\n      if (currentUserId) {\n        console.log(`[App Effect] User session found (userId: ${currentUserId}). Fetching profile client-side...`);\n        setProfileLoading(true);\n        setProfile(null); // Clear previous profile while fetching\n        try {\n          // Use the actual client-side fetch function\n          const clientProfile = await getClientUserProfile(currentUserId);\n          if (isMounted) {\n            setProfile(clientProfile); // Set profile (or null if not found)\n            if (!clientProfile) {\n              console.warn(`[App Effect] Profile not found client-side for userId: ${currentUserId}`);\n              // Optionally show a toast if profile not found after login\n              // addToast({ message: 'Profil utilisateur non trouv\u00E9.', type: 'warning' });\n            }\n          }\n        } catch (error: any) {\n          console.error(\"[App Effect] Error fetching profile client-side:\", error);\n          if (isMounted) setProfile(null);\n          addToast({ message: `Erreur chargement profil: ${error.message}`, type: 'error' });\n        } finally {\n          if (isMounted) setProfileLoading(false);\n        }\n      } else {\n        console.log(\"[App Effect] No user session, clearing profile.\");\n        if (isMounted) {\n          setProfile(null);\n          setProfileLoading(false); // Ensure loading is false if no user\n        }\n      }\n    };\n\n    fetchProfile();\n\n    return () => {isMounted = false;};\n  }, [user, addToast]); // Re-run when user session changes\n\n  const toggleMobileMenu = () => setIsMobileMenuOpen(!isMobileMenuOpen);\n  const openAuthModal = () => setIsAuthModalOpen(true); // Keep for Firebase email/pw modal\n  const closeAuthModal = () => setIsAuthModalOpen(false);\n\n  // Determine if the current route is the dashboard\n  const isDashboard = location.pathname === '/dashboard';\n\n  return (\n    <>\r\n      <Header\n        user={user} // Pass UserSession | null\n        profile={profile} // Pass profile from client-side state\n        onToggleMobileMenu={toggleMobileMenu}\n        onLoginClick={openAuthModal}\n        loadingAuth={navigation.state !== 'idle' || profileLoading} // Indicate loading during navigation or profile fetch\n      />\r\n       <MobileMenu\n        isOpen={isMobileMenuOpen}\n        onClose={toggleMobileMenu}\n        user={user} // Pass UserSession | null\n        profile={profile} // Pass profile from client-side state\n        onLoginClick={openAuthModal}\n        loadingAuth={navigation.state !== 'idle' || profileLoading} // Indicate loading during navigation or profile fetch\n      />\r\n       <AuthModal isOpen={isAuthModalOpen} onClose={closeAuthModal} /> {/* Keep for modal login */}\r\n       <main className={`container mx-auto px-4 py-6 ${isDashboard ? 'mt-0' : 'mt-16 md:mt-20'}`}>\r\n          {/* Pass user session and client-fetched profile to Outlet context */}\r\n          <Outlet context={{ user, profile, profileLoading }} />\r\n       </main>\r\n       <ToastContainer /> {/* Correct: Use the imported default component */}\r\n    </>);\n\n}\n\n\n// Document structure\nexport default function Document() {\n  return (\n    <html lang=\"fr\" className=\"h-full bg-jdc-blue-dark\">\r\n      <head>\r\n        <meta charSet=\"utf-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n        <Meta />\r\n        <Links />\r\n      </head>\r\n      <body className=\"h-full font-sans text-jdc-gray-300\"> {/* Added default text color */}\r\n        <ToastProvider>\r\n           {/* App should wrap the actual content */}\r\n           <App>\r\n             <Suspense fallback={<div>Chargement de l'application...</div>}>\r\n               {/* Outlet renders the matched route component */}\r\n             </Suspense>\r\n           </App>\r\n        </ToastProvider>\r\n        <div id=\"modal-root\"></div> {/* Add portal target here */}\r\n        <ScrollRestoration />\r\n        <Scripts />\r\n      </body>\r\n    </html>);\n\n}\n\n// Error Boundary\nexport function ErrorBoundary() {\n  return (\n    <html lang=\"fr\" className=\"h-full bg-jdc-blue-dark\">\r\n      <head>\r\n        <title>Oops! Une erreur est survenue</title>\r\n        <Meta />\r\n        <Links />\r\n      </head>\r\n      <body className=\"h-full font-sans text-white flex flex-col items-center justify-center\">\r\n         <h1 className=\"text-2xl font-bold mb-4\">Une erreur est survenue</h1>\r\n         <p>Nous sommes d\u00E9sol\u00E9s, quelque chose s'est mal pass\u00E9.</p>\r\n         <Scripts />\r\n      </body>\r\n    </html>);\n\n}", "import React, { Fragment } from 'react'; // Import Fragment\r\nimport { Link, NavLink, Form } from '@remix-run/react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars, faUserCircle, faSignOutAlt, faSignInAlt, faCog, faTachometerAlt, faTicketAlt, faTruck, faSearch, faSheetPlastic, faChevronDown } from '@fortawesome/free-solid-svg-icons';\r\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons';\r\n import { Button } from './ui/Button';\r\n import type { UserSession } from '~/services/session.server';\r\n import type { UserProfile } from '~/types/firestore.types';\r\n import { Menu, Transition } from '@headlessui/react'; // Import Headless UI Menu\r\n\r\n interface HeaderProps {\r\n   user: UserSession | null;\r\n  profile: UserProfile | null;\r\n  onToggleMobileMenu: () => void;\r\n  onLoginClick: () => void;\r\n  loadingAuth: boolean;\r\n}\r\n\r\n// Main navigation items (excluding installations dropdown)\r\nconst navItems = [\r\n  { name: 'Tableau de Bord', to: '/dashboard', icon: faTachometerAlt },\r\n  { name: 'Tickets SAP', to: '/tickets-sap', icon: faTicketAlt },\r\n  { name: 'Envois CTN', to: '/envois-ctn', icon: faTruck },\r\n  { name: 'Recherche Articles', to: '/articles', icon: faSearch },\r\n  // Removed 'Install Kezia'\r\n];\r\n\r\n// Items for the Installations dropdown\r\nconst installationItems = [\r\n    { name: 'Kezia', to: '/installations/kezia', disabled: false, icon: faSheetPlastic }, // Added icon\r\n    { name: 'CHR', to: '#', disabled: true, icon: faSheetPlastic }, // Placeholder link\r\n    { name: 'HACCP', to: '#', disabled: true, icon: faSheetPlastic }, // Placeholder link\r\n    { name: 'Tabac', to: '#', disabled: true, icon: faSheetPlastic }, // Placeholder link\r\n];\r\n\r\n// Define Admin item separately\r\nconst adminItem = { name: 'Admin', to: '/admin', icon: faCog };\r\n\r\nconst JDC_LOGO_URL = \"https://www.jdc.fr/images/logo_jdc_blanc.svg\";\r\n\r\nexport const Header: React.FC<HeaderProps> = ({ user, profile, onToggleMobileMenu, onLoginClick, loadingAuth }) => {\r\n  const linkActiveClass = \"text-jdc-yellow\";\r\n  const linkInactiveClass = \"text-jdc-gray-300 hover:text-jdc-yellow transition-colors\";\r\n  // Base classes for menu button to match nav links\r\n  const menuButtonClass = `${linkInactiveClass} font-medium flex items-center transition-transform duration-200 ease-in-out hover:scale-105 focus:outline-none focus-visible:ring-2 focus-visible:ring-white focus-visible:ring-opacity-75`;\r\n  // Base classes for menu items\r\n  const menuItemBaseClass = \"group flex w-full items-center rounded-md px-3 py-2 text-sm\"; // Adjusted padding/alignment\r\n\r\n  // Determine if the Admin link should be shown\r\n  const showAdminLink = !loadingAuth && profile?.role?.toLowerCase() === 'admin';\r\n\r\n  return (\r\n    <header className=\"bg-jdc-blue-dark border-b border-jdc-gray-800 py-3 px-4 md:px-6 sticky top-0 z-40\">\r\n      <div className=\"flex justify-between items-center max-w-7xl mx-auto\">\r\n        {/* Left Section: Logo, Mobile Button, Desktop Nav */}\r\n        <div className=\"flex items-center space-x-4 md:space-x-6\">\r\n           <Link to={user ? \"/dashboard\" : \"/\"} className=\"flex-shrink-0\">\r\n             <img src={JDC_LOGO_URL} alt=\"JDC Logo\" className=\"h-8 w-auto\" />\r\n           </Link>\r\n           {/* Mobile Menu Button */}\r\n           <button\r\n             onClick={onToggleMobileMenu}\r\n             className=\"md:hidden text-jdc-gray-300 hover:text-white focus:outline-none\"\r\n             aria-label=\"Ouvrir le menu\"\r\n           >\r\n             <FontAwesomeIcon icon={faBars} size=\"lg\" />\r\n           </button>\r\n\r\n           {/* Desktop Navigation */}\r\n           {user && !loadingAuth && (\r\n             <nav className=\"hidden md:flex space-x-6 items-center\">\r\n               {/* Regular Nav Items */}\r\n               {navItems.map((item) => (\r\n                 <NavLink\r\n                   key={item.to}\r\n                   to={item.to}\r\n                   className={({ isActive }) => `${isActive ? linkActiveClass : linkInactiveClass} font-medium flex items-center transition-transform duration-200 ease-in-out hover:scale-105`}\r\n                   prefetch=\"intent\"\r\n                 >\r\n                   <FontAwesomeIcon icon={item.icon} className=\"mr-1.5\" />\r\n                   {item.name}\r\n                 </NavLink>\r\n               ))}\r\n\r\n               {/* Installations Dropdown Menu */}\r\n               <Menu as=\"div\" className=\"relative inline-block text-left\">\r\n                 <div>\r\n                   <Menu.Button className={menuButtonClass}>\r\n                     <span>Installations</span>\r\n                     <FontAwesomeIcon icon={faChevronDown} className=\"ml-1.5 h-4 w-4\" aria-hidden=\"true\" />\r\n                   </Menu.Button>\r\n                 </div>\r\n                 <Transition\r\n                   as={Fragment}\r\n                   enter=\"transition ease-out duration-100\"\r\n                   enterFrom=\"transform opacity-0 scale-95\"\r\n                   enterTo=\"transform opacity-100 scale-100\"\r\n                   leave=\"transition ease-in duration-75\"\r\n                   leaveFrom=\"transform opacity-100 scale-100\"\r\n                   leaveTo=\"transform opacity-0 scale-95\"\r\n                 >\r\n                   <Menu.Items className=\"absolute left-0 mt-2 w-48 origin-top-left divide-y divide-jdc-gray-700 rounded-md bg-jdc-gray-800 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none z-50\">\r\n                     <div className=\"px-1 py-1 \">\r\n                       {installationItems.map((item) => (\r\n                         <Menu.Item key={item.name} disabled={item.disabled}>\r\n                           {({ active, disabled }) => (\r\n                             <NavLink\r\n                               to={item.to}\r\n                               className={`${menuItemBaseClass} ${\r\n                                 active ? 'bg-jdc-blue text-white' : 'text-jdc-gray-300'\r\n                               } ${\r\n                                 disabled ? 'opacity-50 cursor-not-allowed' : 'hover:bg-jdc-gray-700 hover:text-white'\r\n                               }`}\r\n                               onClick={(e) => { if (disabled) e.preventDefault(); }}\r\n                               aria-disabled={disabled}\r\n                             >\r\n                               <FontAwesomeIcon icon={item.icon} className=\"mr-2 h-5 w-5\" aria-hidden=\"true\" />\r\n                               {item.name}\r\n                               {disabled && <span className=\"text-xs ml-1 opacity-75\">(Bient\u00F4t)</span>}\r\n                             </NavLink>\r\n                           )}\r\n                         </Menu.Item>\r\n                       ))}\r\n                     </div>\r\n                   </Menu.Items>\r\n                 </Transition>\r\n               </Menu>\r\n\r\n               {/* Admin Link */}\r\n               {showAdminLink && (\r\n                 <NavLink\r\n                   to={adminItem.to}\r\n                   className={({ isActive }) => `${isActive ? linkActiveClass : linkInactiveClass} font-medium flex items-center transition-transform duration-200 ease-in-out hover:scale-105`}\r\n                 >\r\n                    <FontAwesomeIcon icon={adminItem.icon} className=\"mr-1.5\" />\r\n                   {adminItem.name}\r\n                 </NavLink>\r\n               )}\r\n             </nav>\r\n           )}\r\n           {/* Loading Placeholder */}\r\n           {loadingAuth && <div className=\"hidden md:block text-jdc-gray-400 text-sm\">Chargement...</div>}\r\n        </div>\r\n\r\n        {/* Right Section: User Actions */}\r\n        <div className=\"flex items-center space-x-3\">\r\n          {loadingAuth ? (\r\n             <div className=\"h-8 w-20 bg-jdc-gray-700 rounded animate-pulse\"></div>\r\n          ) : user ? (\r\n            <>\r\n              <span className=\"text-jdc-gray-300 hidden sm:inline\" title={user.email ?? ''}>\r\n                <FontAwesomeIcon icon={faUserCircle} className=\"mr-1\" />\r\n                {profile?.displayName || user.displayName || user.email?.split('@')[0] || 'Utilisateur'}\r\n              </span>\r\n              <Form method=\"post\" action=\"/logout\">\r\n                <Button type=\"submit\" variant=\"secondary\" size=\"sm\" title=\"D\u00E9connexion\">\r\n                  <FontAwesomeIcon icon={faSignOutAlt} />\r\n                  <span className=\"sr-only sm:not-sr-only sm:ml-1\">D\u00E9connexion</span>\r\n                </Button>\r\n              </Form>\r\n            </>\r\n          ) : (\r\n            <div className=\"flex items-center space-x-2\">\r\n               <Button variant=\"primary\" size=\"sm\" onClick={onLoginClick} leftIcon={<FontAwesomeIcon icon={faSignInAlt} />}>\r\n                 Connexion\r\n                </Button>\r\n                <Form method=\"post\" action=\"/auth/google\">\r\n                  <Button type=\"submit\" variant=\"secondary\" size=\"sm\" leftIcon={<FontAwesomeIcon icon={faGoogle} />}>\r\n                     <span className=\"hidden sm:inline\">Google</span>\r\n                  </Button>\r\n                </Form>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n", "import React from 'react';\r\nimport { Link, type LinkProps } from '@remix-run/react';\r\n\r\ntype ButtonVariant = 'primary' | 'secondary' | 'danger' | 'ghost';\r\ntype ButtonSize = 'sm' | 'md' | 'lg';\r\n\r\ninterface ButtonBaseProps {\r\n  variant?: ButtonVariant;\r\n  size?: ButtonSize;\r\n  isLoading?: boolean;\r\n  disabled?: boolean;\r\n  leftIcon?: React.ReactElement;\r\n  rightIcon?: React.ReactElement;\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\n// Props for a standard button element\r\n// Omit 'children' from ButtonHTMLAttributes to resolve conflict with ButtonBaseProps\r\ninterface ButtonElementProps extends ButtonBaseProps, Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, 'children'> {\r\n  as?: 'button';\r\n  to?: never; // Ensure 'to' is not passed for 'button'\r\n}\r\n\r\n// Props for a link element styled as a button\r\ninterface LinkElementProps extends ButtonBaseProps, Omit<LinkProps, 'children' | 'className'> {\r\n  as: 'link';\r\n  to: LinkProps['to']; // 'to' is required for 'link'\r\n}\r\n\r\ntype ButtonProps = ButtonElementProps | LinkElementProps;\r\n\r\n// Added active:scale-95 and transition-transform for click animation\r\nconst baseStyles = \"inline-flex items-center justify-center font-semibold rounded focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-jdc-black transition-colors duration-150 disabled:opacity-50 disabled:cursor-not-allowed transition-transform duration-100 ease-in-out active:scale-95\";\r\n\r\nconst variantStyles: Record<ButtonVariant, string> = {\r\n  primary: \"bg-jdc-yellow text-jdc-black hover:bg-yellow-300 focus:ring-jdc-yellow\",\r\n  secondary: \"bg-jdc-card text-jdc-gray-300 border border-jdc-gray-800 hover:bg-jdc-gray-800 focus:ring-jdc-gray-400\",\r\n  danger: \"bg-red-600 text-white hover:bg-red-700 focus:ring-red-500\",\r\n  ghost: \"bg-transparent text-jdc-gray-300 hover:bg-jdc-gray-800 focus:ring-jdc-gray-400\",\r\n};\r\n\r\nconst sizeStyles: Record<ButtonSize, string> = {\r\n  sm: \"px-3 py-1.5 text-sm\",\r\n  md: \"px-4 py-2 text-base\",\r\n  lg: \"px-6 py-3 text-lg\",\r\n};\r\n\r\nexport const Button: React.FC<ButtonProps> = ({\r\n  as = 'button',\r\n  variant = 'primary',\r\n  size = 'md',\r\n  isLoading = false,\r\n  disabled = false,\r\n  leftIcon,\r\n  rightIcon,\r\n  children,\r\n  className = '',\r\n  ...props\r\n}) => {\r\n  const combinedClassName = `${baseStyles} ${variantStyles[variant]} ${sizeStyles[size]} ${className}`;\r\n\r\n  const content = (\r\n    <>\r\n      {isLoading ? (\r\n        <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n          <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n          <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n        </svg>\r\n      ) : (\r\n        leftIcon && <span className=\"mr-2 -ml-1\">{React.cloneElement(leftIcon, { className: 'h-5 w-5' })}</span>\r\n      )}\r\n      {children}\r\n      {!isLoading && rightIcon && <span className=\"ml-2 -mr-1\">{React.cloneElement(rightIcon, { className: 'h-5 w-5' })}</span>}\r\n    </>\r\n  );\r\n\r\n  if (as === 'link') {\r\n    // Destructure LinkProps specifically for the Link component\r\n    const { to, reloadDocument, replace, state, preventScrollReset, relative, ...restLinkProps } = props as Omit<LinkElementProps, 'as' | 'children' | 'className' | 'variant' | 'size' | 'isLoading' | 'disabled' | 'leftIcon' | 'rightIcon'>;\r\n\r\n    // We cannot pass button-specific HTML attributes like 'type' or 'onClick' directly to Remix's Link\r\n    // Filter out any remaining non-Link props if necessary, though TS should help here.\r\n\r\n    return (\r\n      <Link\r\n        to={to}\r\n        reloadDocument={reloadDocument}\r\n        replace={replace}\r\n        state={state}\r\n        preventScrollReset={preventScrollReset}\r\n        relative={relative}\r\n        className={combinedClassName}\r\n        aria-disabled={disabled || isLoading}\r\n        // onClick={(e) => (disabled || isLoading) && e.preventDefault()} // Prevent navigation if disabled\r\n        {...restLinkProps} // Pass remaining valid LinkProps\r\n      >\r\n        {content}\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  // Handle 'button' element props\r\n  const { type = 'button', onClick, ...restButtonProps } = props as Omit<ButtonElementProps, 'as' | 'children' | 'className' | 'variant' | 'size' | 'isLoading' | 'disabled' | 'leftIcon' | 'rightIcon'>;\r\n\r\n  return (\r\n    <button\r\n      type={type}\r\n      className={combinedClassName}\r\n      disabled={disabled || isLoading}\r\n      onClick={onClick}\r\n      {...restButtonProps} // Pass remaining valid button attributes\r\n    >\r\n      {content}\r\n    </button>\r\n  );\r\n};\r\n", "import React from 'react';\r\nimport { Link, NavLink } from '@remix-run/react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n import { faTimes, faUserCircle, faSignOutAlt, faSignInAlt, faTachometerAlt, faTicketAlt, faTruck, faCog } from '@fortawesome/free-solid-svg-icons'; // Added faCog\r\n import { Button } from './ui/Button';\r\n // Use UserSession from server loader instead of AppUser from client-side auth\r\n // import type { AppUser } from '~/services/auth.service';\r\n import type { UserSession } from '~/services/session.server'; // Import UserSession\r\n import type { UserProfile } from '~/types/firestore.types'; // Import UserProfile\r\n\r\n interface MobileMenuProps {\r\n   isOpen: boolean;\r\n   onClose: () => void;\r\n   user: UserSession | null; // Use UserSession type\r\n   profile: UserProfile | null; // Use profile from context\r\n   onLoginClick: () => void;\r\n   // Remove onLogoutClick as it's handled by Header form\r\n   loadingAuth: boolean; // Add loadingAuth prop\r\n }\r\n\r\nconst navItems = [\r\n  { name: 'Tableau de Bord', to: '/dashboard', icon: faTachometerAlt },\r\n  { name: 'Tickets SAP', to: '/tickets-sap', icon: faTicketAlt },\r\n  { name: 'Envois CTN', to: '/envois-ctn', icon: faTruck },\r\n];\r\n\r\n// Define Admin item separately\r\nconst adminItem = { name: 'Admin', to: '/admin', icon: faCog };\r\n\r\n const JDC_LOGO_URL = \"https://www.jdc.fr/images/logo_jdc_blanc.svg\"; // Re-add logo URL if needed\r\n\r\n export const MobileMenu: React.FC<MobileMenuProps> = ({ isOpen, onClose, user, profile, onLoginClick, loadingAuth }) => { // Removed onLogoutClick\r\n   const linkActiveClass = \"text-jdc-yellow bg-jdc-gray-800\";\r\n   const linkInactiveClass = \"text-jdc-gray-300 hover:text-white hover:bg-jdc-gray-700\";\r\n  const linkBaseClass = \"flex items-center px-3 py-2 rounded-md text-base font-medium transition-colors\";\r\n\r\n  // Determine if the Admin link should be shown\r\n  const showAdminLink = !loadingAuth && profile?.role?.toLowerCase() === 'admin';\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div\r\n      className=\"fixed inset-0 bg-black bg-opacity-50 z-40 md:hidden\" // Keep z-index lower than header\r\n      onClick={onClose}\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div\r\n        className=\"fixed inset-y-0 left-0 w-64 bg-jdc-blue-darker shadow-xl z-50 flex flex-col\"\r\n        onClick={(e) => e.stopPropagation()} // Prevent closing when clicking inside menu\r\n      >\r\n        {/* Menu Header */}\r\n        <div className=\"flex items-center justify-between px-4 py-3 border-b border-jdc-gray-800\">\r\n           <Link to={user ? \"/dashboard\" : \"/\"} onClick={onClose}>\r\n             <img src={JDC_LOGO_URL} alt=\"JDC Logo\" className=\"h-8 w-auto\" />\r\n           </Link>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-jdc-gray-400 hover:text-white focus:outline-none\"\r\n            aria-label=\"Fermer le menu\"\r\n          >\r\n            <FontAwesomeIcon icon={faTimes} size=\"lg\" />\r\n          </button>\r\n        </div>\r\n\r\n        {/* Navigation Links */}\r\n        <nav className=\"flex-1 px-2 py-4 space-y-1\">\r\n          {loadingAuth ? (\r\n             <div className=\"px-3 py-2 text-jdc-gray-400\">Chargement...</div>\r\n          ) : user ? (\r\n            <>\r\n              {navItems.map((item) => (\r\n                <NavLink\r\n                  key={item.to}\r\n                  to={item.to}\r\n                  onClick={onClose} // Close menu on link click\r\n                  className={({ isActive }) => `${linkBaseClass} ${isActive ? linkActiveClass : linkInactiveClass}`}\r\n                  prefetch=\"intent\" // Keep prefetch for other items\r\n                >\r\n                  <FontAwesomeIcon icon={item.icon} className=\"mr-3 h-5 w-5\" />\r\n                  {item.name}\r\n                </NavLink>\r\n              ))}\r\n              {/* Conditionally render Admin link */}\r\n              {showAdminLink && (\r\n                <NavLink\r\n                  to={adminItem.to}\r\n                  onClick={onClose}\r\n                  className={({ isActive }) => `${linkBaseClass} ${isActive ? linkActiveClass : linkInactiveClass}`}\r\n                  // Removed prefetch=\"intent\" for Admin link\r\n                >\r\n                  <FontAwesomeIcon icon={adminItem.icon} className=\"mr-3 h-5 w-5\" />\r\n                  {adminItem.name}\r\n                </NavLink>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <div className=\"px-3 py-2 text-jdc-gray-400\">Veuillez vous connecter.</div>\r\n          )}\r\n        </nav>\r\n\r\n        {/* User Info / Actions Footer */}\r\n        <div className=\"border-t border-jdc-gray-800 p-4\">\r\n          {loadingAuth ? (\r\n             <div className=\"h-10 bg-jdc-gray-700 rounded animate-pulse\"></div> // Placeholder\r\n          ) : user ? (\r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex items-center space-x-2 text-sm text-jdc-gray-300\">\r\n                <FontAwesomeIcon icon={faUserCircle} className=\"h-6 w-6\" />\r\n                <span className=\"truncate\" title={user.email ?? ''}>\r\n                   {profile?.displayName || user.displayName || user.email?.split('@')[0]}\r\n                 </span>\r\n               </div>\r\n               {/* Logout button removed, handled by Header form */}\r\n             </div>\r\n           ) : (\r\n             <Button variant=\"primary\" size=\"sm\" onClick={() => { onLoginClick(); onClose(); }} className=\"w-full\" leftIcon={<FontAwesomeIcon icon={faSignInAlt} />}>\r\n              Connexion\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n", "import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes, faSpinner } from '@fortawesome/free-solid-svg-icons';\r\nimport { FcGoogle } from 'react-icons/fc';\r\nimport { Button } from './ui/Button';\r\nimport { signInWithGoogle } from '~/services/auth.service';\r\nimport { useToast } from '~/context/ToastContext'; // Use our toast hook\r\n\r\ninterface AuthModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nexport const AuthModal: React.FC<AuthModalProps> = ({ isOpen, onClose }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isGoogleLoading, setIsGoogleLoading] = useState(false); // Separate loading for Google\r\n  const [error, setError] = useState<string | null>(null);\r\n  const { addToast } = useToast(); // Get addToast function\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const handleClose = () => {\r\n    setError(null);\r\n    setIsLoading(false);\r\n    setIsGoogleLoading(false);\r\n    onClose();\r\n  };\r\n\r\n  const handleGoogleSignIn = async () => {\r\n    setIsGoogleLoading(true);\r\n    setError(null);\r\n    try {\r\n        const user = await signInWithGoogle();\r\n        addToast({ type: 'success', message: `Connect\u00E9 avec Google: ${user.displayName || user.email}` });\r\n        handleClose(); // Close modal on success\r\n    } catch (err) {\r\n        const message = err instanceof Error ? err.message : 'Erreur de connexion Google.';\r\n        setError(message);\r\n        addToast({ type: 'error', message: message });\r\n    } finally {\r\n        setIsGoogleLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"fixed inset-0 bg-black bg-opacity-80 flex items-center justify-center z-50 p-4\"\r\n      onClick={handleClose}\r\n      role=\"dialog\"\r\n      aria-modal=\"true\"\r\n      aria-labelledby=\"auth-modal-title\"\r\n    >\r\n      <div\r\n        className=\"bg-jdc-card p-6 md:p-8 rounded-lg shadow-xl relative w-full max-w-md\"\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        <button\r\n          onClick={handleClose}\r\n          className=\"absolute top-3 right-3 text-jdc-gray-400 hover:text-white focus:outline-none\"\r\n          aria-label=\"Fermer la modal\"\r\n        >\r\n          <FontAwesomeIcon icon={faTimes} size=\"lg\" />\r\n        </button>\r\n\r\n        <h2 id=\"auth-modal-title\" className=\"text-2xl font-semibold text-white mb-6 text-center\">\r\n          Connexion\r\n        </h2>\r\n\r\n        {/* Google Sign-In Button - Seule m\u00E9thode autoris\u00E9e */}\r\n        <Button\r\n            variant=\"secondary\"\r\n            className=\"w-full mb-4 flex items-center justify-center gap-2 border border-jdc-gray-600 hover:bg-jdc-gray-700\"\r\n            onClick={handleGoogleSignIn}\r\n            isLoading={isGoogleLoading}\r\n            disabled={isLoading || isGoogleLoading}\r\n        >\r\n            {isGoogleLoading ? (\r\n                <FontAwesomeIcon icon={faSpinner} spin />\r\n            ) : (\r\n                <FcGoogle size={20} />\r\n            )}\r\n            <span>Se connecter avec Google</span>\r\n        </Button>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n", "import {\r\n  getAuth,\r\n  signInWithEmailAndPassword,\r\n  signOut as firebaseSignOut,\r\n  onAuthStateChanged,\r\n  createUserWithEmailAndPassword,\r\n  updateProfile as updateFirebaseProfile, // Renamed to avoid conflict\r\n  GoogleAuthProvider, // Import Google provider\r\n  signInWithPopup, // Import popup sign-in method\r\n  type User as FirebaseUser,\r\n  type AuthError\r\n} from \"firebase/auth\";\r\nimport { auth } from \"~/firebase.config\"; // Use the initialized auth instance\r\nimport { createUserProfileSdk, getUserProfileSdk } from \"./firestore.service.server\"; // Import profile creation AND fetching\r\nimport type { UserProfile } from \"~/types/firestore.types\"; // Import UserProfile type\r\n\r\n// Define a simpler User type for our app state\r\nexport interface AppUser {\r\n  uid: string;\r\n  email: string | null;\r\n  displayName: string | null; // Add other relevant fields if needed\r\n}\r\n\r\n// --- Map Firebase User to App User ---\r\nconst mapFirebaseUserToAppUser = (firebaseUser: FirebaseUser): AppUser => {\r\n    return {\r\n        uid: firebaseUser.uid,\r\n        email: firebaseUser.email,\r\n        displayName: firebaseUser.displayName,\r\n    };\r\n};\r\n\r\n// --- Login ---\r\nexport const signIn = async (email: string, password: string): Promise<AppUser> => {\r\n  try {\r\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n    return mapFirebaseUserToAppUser(userCredential.user);\r\n  } catch (error) {\r\n    console.error(\"Firebase Sign In Error:\", error);\r\n    const authError = error as AuthError;\r\n    if (authError.code === 'auth/invalid-credential' || authError.code === 'auth/user-not-found' || authError.code === 'auth/wrong-password') {\r\n       throw new Error(\"Email ou mot de passe incorrect.\");\r\n    } else if (authError.code === 'auth/invalid-email') {\r\n        throw new Error(\"Format d'email invalide.\");\r\n    }\r\n    throw new Error(\"Erreur de connexion. Veuillez r\u00E9essayer.\");\r\n  }\r\n};\r\n\r\n// --- Logout ---\r\nexport const signOut = async (): Promise<void> => {\r\n  try {\r\n    await firebaseSignOut(auth);\r\n  } catch (error) {\r\n    console.error(\"Firebase Sign Out Error:\", error);\r\n    throw new Error(\"Erreur lors de la d\u00E9connexion.\");\r\n  }\r\n};\r\n\r\n// --- Sign Up and Create Profile (Email/Password) ---\r\nexport const signUpAndCreateProfile = async (email: string, password: string, displayName: string): Promise<UserProfile> => {\r\n  let firebaseUser: FirebaseUser | null = null;\r\n\r\n  try {\r\n    // Step 1: Create user in Firebase Authentication\r\n    console.log(`[AuthService] Attempting to create Auth user for: ${email}`);\r\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n    firebaseUser = userCredential.user;\r\n    console.log(`[AuthService] Auth user created successfully: ${firebaseUser.uid}`);\r\n\r\n    // Step 1.5: Update Firebase Auth profile display name (optional but good practice)\r\n    try {\r\n        await updateFirebaseProfile(firebaseUser, { displayName: displayName });\r\n        console.log(`[AuthService] Firebase Auth profile display name updated for: ${firebaseUser.uid}`);\r\n    } catch (updateError) {\r\n        console.warn(`[AuthService] Could not update Firebase Auth display name for ${firebaseUser.uid}:`, updateError);\r\n        // Non-critical, continue with Firestore profile creation\r\n    }\r\n\r\n    // Step 2: Create user profile document in Firestore\r\n    console.log(`[AuthService] Attempting to create Firestore profile for: ${firebaseUser.uid}`);\r\n    const newUserProfile = await createUserProfileSdk(\r\n        firebaseUser.uid,\r\n        firebaseUser.email!, // Email is guaranteed non-null after successful creation\r\n        displayName,\r\n        'Technician' // Default role\r\n    );\r\n    console.log(`[AuthService] Firestore profile created successfully for: ${firebaseUser.uid}`);\r\n\r\n    return newUserProfile;\r\n\r\n  } catch (error) {\r\n    console.error(\"[AuthService] Error during sign up or profile creation:\", error);\r\n    const authError = error as AuthError;\r\n\r\n    if (authError.code === 'auth/email-already-in-use') {\r\n      throw new Error(\"Cette adresse email est d\u00E9j\u00E0 utilis\u00E9e.\");\r\n    } else if (authError.code === 'auth/invalid-email') {\r\n      throw new Error(\"Format d'email invalide.\");\r\n    } else if (authError.code === 'auth/weak-password') {\r\n      throw new Error(\"Le mot de passe est trop faible (minimum 6 caract\u00E8res).\");\r\n    } else if (error instanceof Error && error.message.includes(\"Firestore\")) {\r\n        console.warn(`[AuthService] Auth user ${firebaseUser?.uid} created, but Firestore profile failed.`);\r\n        // Consider deleting the Auth user here in production if profile creation is critical\r\n        // await firebaseUser?.delete();\r\n        throw new Error(`Erreur lors de la cr\u00E9ation du profil: ${error.message}`);\r\n    }\r\n    throw new Error(\"Erreur lors de la cr\u00E9ation du compte. Veuillez r\u00E9essayer.\");\r\n  }\r\n};\r\n\r\n// --- Sign In with Google ---\r\nexport const signInWithGoogle = async (): Promise<AppUser> => {\r\n  const provider = new GoogleAuthProvider();\r\n  try {\r\n    console.log(\"[AuthService] Attempting Google Sign-In Popup...\");\r\n    const result = await signInWithPopup(auth, provider);\r\n    const firebaseUser = result.user;\r\n    console.log(`[AuthService] Google Sign-In successful for: ${firebaseUser.uid} (${firebaseUser.email})`);\r\n\r\n    // Check if Firestore profile exists, create if not\r\n    try {\r\n      console.log(`[AuthService] Checking for existing Firestore profile for: ${firebaseUser.uid}`);\r\n      await getUserProfileSdk(firebaseUser.uid);\r\n      console.log(`[AuthService] Firestore profile found for: ${firebaseUser.uid}`);\r\n    } catch (profileError: any) {\r\n      // Assuming 'profileError' indicates \"not found\" (adjust if getUserProfileSdk throws differently)\r\n      // A more robust check might involve checking error codes if available\r\n      if (profileError.message?.includes(\"not found\") || profileError.code === 'not-found') { // Example check\r\n          console.log(`[AuthService] No Firestore profile found for ${firebaseUser.uid}. Creating one...`);\r\n          try {\r\n              await createUserProfileSdk(\r\n                  firebaseUser.uid,\r\n                  firebaseUser.email || `no-email-${firebaseUser.uid}@example.com`, // Provide fallback email if null\r\n                  firebaseUser.displayName || \"Utilisateur Google\", // Use Google display name or fallback\r\n                  'Technician' // Default role for new Google users\r\n              );\r\n              console.log(`[AuthService] Firestore profile created successfully for Google user: ${firebaseUser.uid}`);\r\n          } catch (creationError) {\r\n              console.error(`[AuthService] CRITICAL: Failed to create Firestore profile for Google user ${firebaseUser.uid} after successful auth:`, creationError);\r\n              // Decide how to handle this: sign out the user? Show an error?\r\n              // For now, we'll let the sign-in proceed but log the critical failure.\r\n              // throw new Error(\"Erreur lors de la finalisation de l'inscription Google.\"); // Option to throw\r\n          }\r\n      } else {\r\n          // Rethrow unexpected errors during profile check\r\n          console.error(`[AuthService] Error checking Firestore profile for ${firebaseUser.uid}:`, profileError);\r\n          throw new Error(\"Erreur lors de la v\u00E9rification du profil utilisateur.\");\r\n      }\r\n    }\r\n\r\n    return mapFirebaseUserToAppUser(firebaseUser);\r\n\r\n  } catch (error) {\r\n    console.error(\"[AuthService] Google Sign In Error:\", error);\r\n    const authError = error as AuthError;\r\n    if (authError.code === 'auth/popup-closed-by-user') {\r\n      throw new Error(\"Connexion Google annul\u00E9e.\");\r\n    } else if (authError.code === 'auth/account-exists-with-different-credential') {\r\n      throw new Error(\"Un compte existe d\u00E9j\u00E0 avec cet email mais avec une m\u00E9thode de connexion diff\u00E9rente.\");\r\n      // TODO: Consider implementing account linking flow here if needed\r\n    } else if (authError.code === 'auth/cancelled-popup-request') {\r\n        throw new Error(\"Multiples tentatives de connexion Google d\u00E9tect\u00E9es. Veuillez r\u00E9essayer.\");\r\n    }\r\n    // Add other specific Google error codes if needed\r\n    throw new Error(\"Erreur lors de la connexion avec Google. Veuillez r\u00E9essayer.\");\r\n  }\r\n};\r\n\r\n\r\n// --- Auth State Listener ---\r\nexport const listenToAuthState = (callback: (user: AppUser | null) => void): (() => void) => {\r\n  const unsubscribe = onAuthStateChanged(auth, (firebaseUser: FirebaseUser | null) => {\r\n    if (firebaseUser) {\r\n      // User is signed in, map to AppUser\r\n      // We rely on the initial sign-in/sign-up logic (including Google)\r\n      // to ensure the Firestore profile exists.\r\n      // The displayName here might be from Firebase Auth, which could be updated\r\n      // slightly after Firestore profile creation/update. The root loader\r\n      // fetching the Firestore profile is the source of truth for display name in the app.\r\n      const appUser = mapFirebaseUserToAppUser(firebaseUser);\r\n      callback(appUser);\r\n    } else {\r\n      // User is signed out\r\n      callback(null);\r\n    }\r\n  });\r\n\r\n  return unsubscribe; // Return the unsubscribe function for cleanup\r\n};\r\n", "import { initializeApp, getApps, getApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\"; // Import Firestore\r\n// Storage n'est plus initialis\u00E9 ici\r\n\r\n// Your web app's Firebase configuration (Keep using environment variables in production)\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyADAy8ySvJsUP5diMyR9eIUgtPFimpydcA\", // Replace with env var process.env.REACT_APP_FIREBASE_API_KEY\r\n  authDomain: \"sap-jdc.firebaseapp.com\", // Replace with env var\r\n  databaseURL: \"https://sap-jdc-default-rtdb.europe-west1.firebasedatabase.app\", // Replace with env var if using RTDB\r\n  projectId: \"sap-jdc\", // Replace with env var\r\n  storageBucket: \"sap-jdc.appspot.com\", // Corrected based on your example\r\n  messagingSenderId: \"1079234336489\", // Replace with env var\r\n  appId: \"1:1079234336489:web:2428621b62a393068ec278\", // Replace with env var\r\n  measurementId: \"G-PRWSK0TEFZ\" // Optional, replace with env var\r\n};\r\n\r\n// Initialize Firebase only if it hasn't been initialized yet\r\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\r\nconst auth = getAuth(app);\r\n\r\n// Initialize Firestore using the standard method\r\nconst db = getFirestore(app);\r\n// Cloud Storage n'est plus initialis\u00E9 ici\r\n\r\n// const analytics = getAnalytics(app); // Optional\r\n\r\nexport { app, auth, db }; // Ne plus exporter storage\r\n", "import React, {\r\n  createContext,\r\n  useState,\r\n  useContext,\r\n  useCallback,\r\n  ReactNode,\r\n  useRef,\r\n} from 'react';\r\nimport {\r\n  type Toast,\r\n  type ToastMessageData,\r\n  type ToastType,\r\n} from '~/components/Toast';\r\n\r\ntype ToastInput =\r\n  | string\r\n  | {\r\n      type?: ToastType;\r\n      message: string;\r\n      title?: string;\r\n    };\r\n\r\ninterface ToastContextProps {\r\n  toasts: ToastMessageData[];\r\n  addToast: (toastData: ToastInput) => void;\r\n  removeToast: (id: string) => void;\r\n}\r\n\r\nconst ToastContext = createContext<ToastContextProps | undefined>(undefined);\r\n\r\nexport const ToastProvider: React.FC<{ children: ReactNode }> = ({\r\n  children,\r\n}) => {\r\n  const [toasts, setToasts] = useState<ToastMessageData[]>([]);\r\n  const toastIdCounter = useRef(0);\r\n\r\n  const addToast = useCallback((toastData: ToastInput) => {\r\n    const id = (toastIdCounter.current++).toString();\r\n    let message = '';\r\n    let type: ToastType = 'info';\r\n    let title: string | undefined = undefined;\r\n\r\n    if (typeof toastData === 'string') {\r\n      message = toastData;\r\n    } else if (toastData?.message) {\r\n      message = toastData.message;\r\n      title = toastData.title;\r\n      type = toastData.type || 'info';\r\n    } else {\r\n      console.warn('Toast data invalide:', toastData);\r\n      message = 'Notification sans message';\r\n      type = 'warning';\r\n    }\r\n\r\n    const newToast: ToastMessageData = {\r\n      id,\r\n      message,\r\n      type,\r\n      ...(title && { title }),\r\n    };\r\n\r\n    setToasts((prev) => [...prev, newToast]);\r\n\r\n    setTimeout(() => {\r\n      removeToast(id);\r\n    }, 5000);\r\n  }, []);\r\n\r\n  const removeToast = useCallback((id: string) => {\r\n    setToasts((prev) => prev.filter((toast) => toast.id !== id));\r\n  }, []);\r\n\r\n  return (\r\n    <ToastContext.Provider value={{ toasts, addToast, removeToast }}>\r\n      {children}\r\n    </ToastContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useToast = (): ToastContextProps => {\r\n  const context = useContext(ToastContext);\r\n  if (!context) {\r\n    throw new Error('useToast must be used within a ToastProvider');\r\n  }\r\n  return context;\r\n};\r\n", "import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faCheckCircle,\r\n  faExclamationCircle,\r\n  faInfoCircle,\r\n  faExclamationTriangle,\r\n  faTimes,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport {\r\n  useToast as useAppToast,\r\n  type ToastMessageData,\r\n  type ToastType,\r\n} from '~/context/ToastContext';\r\n\r\n// Configuration for styling based on toast type\r\nconst toastConfig: Record<ToastType, {\r\n  icon: any;\r\n  bgClass: string;\r\n  iconColor: string;\r\n  textColor: string;\r\n  progressClass: string;\r\n}> = {\r\n  success: {\r\n    icon: faCheckCircle,\r\n    bgClass: 'bg-green-600',\r\n    iconColor: 'text-green-100',\r\n    textColor: 'text-green-50',\r\n    progressClass: 'bg-green-200',\r\n  },\r\n  error: {\r\n    icon: faExclamationCircle,\r\n    bgClass: 'bg-red-600',\r\n    iconColor: 'text-red-100',\r\n    textColor: 'text-red-50',\r\n    progressClass: 'bg-red-200',\r\n  },\r\n  info: {\r\n    icon: faInfoCircle,\r\n    bgClass: 'bg-blue-600',\r\n    iconColor: 'text-blue-100',\r\n    textColor: 'text-blue-50',\r\n    progressClass: 'bg-blue-200',\r\n  },\r\n  warning: {\r\n    icon: faExclamationTriangle,\r\n    bgClass: 'bg-yellow-500',\r\n    iconColor: 'text-yellow-100',\r\n    textColor: 'text-yellow-50',\r\n    progressClass: 'bg-yellow-200',\r\n  },\r\n};\r\n\r\n// \u2705 Toast (Message) Component\r\ninterface ToastProps {\r\n  toast: ToastMessageData;\r\n  onClose: (id: string) => void;\r\n}\r\n\r\nexport const Toast: React.FC<ToastProps> = ({ toast, onClose }) => {\r\n  const config = toastConfig[toast.type];\r\n\r\n  return (\r\n    <div\r\n      className={`max-w-sm w-full ${config.bgClass} shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden mb-3 transition-all duration-300 ease-in-out`}\r\n      role=\"alert\"\r\n      aria-live=\"assertive\"\r\n      aria-atomic=\"true\"\r\n    >\r\n      <div className=\"p-4\">\r\n        <div className=\"flex items-start\">\r\n          <div className=\"flex-shrink-0\">\r\n            <FontAwesomeIcon icon={config.icon} className={`h-6 w-6 ${config.iconColor}`} aria-hidden=\"true\" />\r\n          </div>\r\n          <div className=\"ml-3 w-0 flex-1 pt-0.5\">\r\n            <p className={`text-sm font-medium ${config.textColor}`}>{toast.title}</p>\r\n            <p className={`mt-1 text-sm ${config.textColor} opacity-90`}>{toast.message}</p>\r\n          </div>\r\n          <div className=\"ml-4 flex-shrink-0 flex\">\r\n            <button\r\n              onClick={() => onClose(toast.id)}\r\n              className={`inline-flex rounded-md ${config.bgClass} ${config.textColor} opacity-80 hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-${toast.type}-600 focus:ring-white`}\r\n            >\r\n              <span className=\"sr-only\">Fermer</span>\r\n              <FontAwesomeIcon icon={faTimes} className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Optional progress bar */}\r\n      {/* <div className={`h-1 ${config.progressClass} w-full`}></div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\n// \u2705 Toast Container\r\nconst ToastContainerComponent: React.FC = () => {\r\n  const { toasts, removeToast } = useAppToast();\r\n\r\n  if (!toasts.length) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 flex flex-col items-end px-4 py-6 pointer-events-none sm:p-6 sm:items-end z-50 space-y-3\">\r\n      {toasts.map((toast) => (\r\n        <Toast key={toast.id} toast={toast} onClose={removeToast} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n// \u2705 Exportation\r\nexport { ToastContainerComponent as ToastContainer };\r\nexport default ToastContainerComponent;\r\n", "import { Authenticator } from \"remix-auth\";\r\nimport { GoogleStrategy } from \"remix-auth-google\";\r\nimport { sessionStorage, type UserSession } from \"./session.server\"; // Import session storage and type\r\nimport { getUserProfileSdk, createUserProfileSdk } from \"./firestore.service.server\"; // Import Firestore functions\r\n\r\n// Create an instance of the authenticator, pass a generic with what\r\n// strategies will return and will be stored in the session\r\nexport const authenticator = new Authenticator<UserSession>(sessionStorage, {\r\n  // Throw errors instead of redirecting to `/login` on failure\r\n  throwOnError: true,\r\n});\r\n\r\n// Ensure environment variables are set\r\nconst googleClientId = process.env.GOOGLE_CLIENT_ID;\r\nconst googleClientSecret = process.env.GOOGLE_CLIENT_SECRET;\r\nconst appBaseUrl = process.env.APP_BASE_URL;\r\n\r\nif (!googleClientId || !googleClientSecret || !appBaseUrl) {\r\n  throw new Error(\r\n    \"GOOGLE_CLIENT_ID, GOOGLE_CLIENT_SECRET, and APP_BASE_URL must be set in .env\"\r\n  );\r\n}\r\n\r\nconst googleCallbackUrl = `${appBaseUrl}/auth/google/callback`;\r\n\r\n// Define the Google Strategy\r\nauthenticator.use(\r\n  new GoogleStrategy(\r\n    {\r\n      clientID: googleClientId,\r\n      clientSecret: googleClientSecret,\r\n      callbackURL: googleCallbackUrl,\r\n      // Define the scopes needed for Google APIs\r\n      // Ensure these scopes are enabled in your Google Cloud Console project\r\n      scope: [\r\n        \"openid\", // Required for OpenID Connect\r\n        \"email\", // Get user's email address\r\n        \"profile\", // Get user's basic profile info (name, picture)\r\n        \"https://www.googleapis.com/auth/drive\", // Full access to Drive (adjust if needed)\r\n        \"https://www.googleapis.com/auth/calendar\", // Full access to Calendar (adjust if needed)\r\n        \"https://www.googleapis.com/auth/gmail.modify\", // Read/write access to Gmail (adjust if needed)\r\n      ].join(\" \"),\r\n      // Request offline access to get a refresh token\r\n      accessType: \"offline\",\r\n      // Prompt for consent every time to ensure refresh token is always sent (useful during development)\r\n      // In production, you might remove this or set to 'auto' after the first consent\r\n      prompt: \"consent\",\r\n    },\r\n    async ({\r\n      accessToken,\r\n      refreshToken,\r\n      extraParams, // Contains token expiry (expires_in)\r\n      profile, // User profile from Google\r\n    }) => {\r\n      // This function is called after successful authentication with Google.\r\n      // profile contains: id, displayName, emails, photos, provider, _json, _raw\r\n      console.log(\"[Auth Server] Google Strategy Callback triggered\");\r\n      console.log(\"[Auth Server] Profile ID:\", profile.id); // Google's unique ID for the user\r\n      console.log(\"[Auth Server] Profile Email:\", profile.emails?.[0]?.value);\r\n      console.log(\"[Auth Server] Access Token received:\", !!accessToken);\r\n      console.log(\"[Auth Server] Refresh Token received:\", !!refreshToken); // Should be true with accessType: 'offline' and prompt: 'consent'\r\n\r\n      const email = profile.emails?.[0]?.value;\r\n      const displayName = profile.displayName || \"Utilisateur Google\";\r\n      const googleId = profile.id; // Use Google's unique ID\r\n\r\n      if (!email) {\r\n        throw new Error(\"Email not found in Google profile.\");\r\n      }\r\n\r\n      // V\u00E9rification du domaine de l'email\r\n      if (!email.endsWith(\"@jdc.fr\")) {\r\n        throw new Error(\"Seuls les emails @jdc.fr sont autoris\u00E9s.\");\r\n      }\r\n\r\n      // Here, you might want to find or create a user in your own database (Firestore).\r\n      // We'll use the Google ID as the primary link, but also store email/name.\r\n      // IMPORTANT: Decide how to handle user IDs. Using Firebase Auth UID or Google ID?\r\n      // For simplicity here, let's assume we use the Google ID as the primary key\r\n      // in Firestore for users authenticated via Google OAuth for API access.\r\n      // This might differ from users signed up via email/password using Firebase Auth.\r\n      // You might need a strategy to link accounts if a user uses both methods.\r\n\r\n      let userProfile: UserSession;\r\n\r\n      try {\r\n        // Attempt to find user by Google ID (or email, depending on your model)\r\n        // NOTE: getUserProfileSdk likely expects Firebase UID. We need to adapt.\r\n        // Let's assume for now we store Google users separately or adapt Firestore service.\r\n        // For this example, we'll simulate finding/creating based on email for simplicity,\r\n        // but using Google ID is more robust.\r\n\r\n       // --- Firestore Interaction (Attempt, but don't fail auth if it errors) ---\r\n       try {\r\n         // Attempt to find user by Google ID (or adapt your logic)\r\n         // IMPORTANT: getUserProfileSdk likely expects Firebase UID. This needs adaptation.\r\n         console.log(`[Auth Server] Attempting to find Firestore profile for Google ID: ${googleId}`);\r\n         await getUserProfileSdk(googleId); // This will likely fail if it expects Firebase UID\r\n         console.log(`[Auth Server] Firestore profile found for Google ID: ${googleId}`);\r\n       } catch (profileError: any) {\r\n         // Check if the error means \"not found\" (adapt check as needed)\r\n         if (profileError.message?.includes(\"not found\") || profileError.code === 'not-found' || profileError.message?.includes(\"simulation\")) {\r\n           console.log(`[Auth Server] Firestore profile for Google ID ${googleId} not found. Attempting creation...`);\r\n           try {\r\n             // Attempt to create profile (this is where PERMISSION_DENIED happens currently)\r\n             // IMPORTANT: createUserProfileSdk also likely expects Firebase UID as first arg. Needs adaptation.\r\n             await createUserProfileSdk(\r\n               googleId, // Using Google ID as the user ID here - NEEDS REVIEW/ADAPTATION\r\n               email,\r\n               displayName,\r\n               'Technician' // Or determine role based on logic\r\n               // Add googleId field if modifying existing structure\r\n             );\r\n             console.log(`[Auth Server] Firestore profile created successfully for Google ID: ${googleId}`);\r\n           } catch (creationError: any) {\r\n             // Log the creation error but DO NOT throw. Allow login to proceed.\r\n             console.error(`[Auth Server] FAILED to create Firestore profile for Google ID ${googleId} (Email: ${email}). Error:`, creationError);\r\n             // The PERMISSION_DENIED error will be logged here.\r\n             // TODO: Fix Firestore server-side permissions separately.\r\n           }\r\n         } else {\r\n           // Log other unexpected errors during profile lookup, but don't fail auth\r\n           console.error(`[Auth Server] Unexpected error looking up Firestore profile for Google ID ${googleId}:`, profileError);\r\n         }\r\n       }\r\n       // --- End Firestore Interaction ---\r\n\r\n       // Regardless of Firestore success/failure, return the session data with Google info and tokens\r\n       // This ensures the user is logged in via Remix Auth session.\r\n       userProfile = {\r\n          userId: googleId, // Using Google ID\r\n          email: email,\r\n          displayName: displayName,\r\n          googleAccessToken: accessToken,\r\n          googleRefreshToken: refreshToken,\r\n          // Calculate expiry time (extraParams.expires_in is in seconds)\r\n          tokenExpiry: Date.now() + extraParams.expires_in * 1000,\r\n        };\r\n\r\n      } catch (error) {\r\n        console.error(\"[Auth Server] Error finding/creating user profile:\", error);\r\n        throw new Error(\"Failed to process user profile.\");\r\n      }\r\n\r\n       // Return the user data to be stored in the session\r\n       console.log(\"[Auth Server] Returning userProfile to authenticator:\", userProfile); // Log before returning\r\n       return userProfile;\r\n     }\r\n  )\r\n);\r\n", "import { createCookieSessionStorage } from \"@remix-run/node\"; // or cloudflare/deno\r\n\r\n// Define the structure of your session data, including Google tokens\r\nexport interface UserSession {\r\n  userId: string; // Or your user ID from Firestore/Firebase Auth\r\n  email: string | null;\r\n  displayName: string | null;\r\n  googleAccessToken?: string;\r\n  googleRefreshToken?: string;\r\n  tokenExpiry?: number; // Timestamp when the access token expires\r\n  // Add other user profile data as needed\r\n}\r\n\r\n// Ensure SESSION_SECRET is set in your environment variables\r\n// You can generate a secret using: openssl rand -hex 32\r\nconst sessionSecret = process.env.SESSION_SECRET;\r\nif (!sessionSecret) {\r\n  throw new Error(\"SESSION_SECRET must be set as an environment variable\");\r\n}\r\n\r\n// Export the session storage instance\r\nexport const sessionStorage = createCookieSessionStorage<UserSession>({\r\n  cookie: {\r\n    name: \"__session\", // use any name you want\r\n    httpOnly: true,\r\n    path: \"/\",\r\n    sameSite: \"lax\",\r\n    secrets: [sessionSecret],\r\n    secure: process.env.NODE_ENV === \"production\", // enable this in prod\r\n    maxAge: 60 * 60 * 24 * 30, // 30 days\r\n  },\r\n});\r\n\r\n// You can also export the methods individually for convenience\r\nexport const { getSession, commitSession, destroySession } = sessionStorage;\r\n", "import type { LoaderFunctionArgs } from \"@remix-run/node\";\r\nimport { authenticator } from \"~/services/auth.server\";\r\n\r\nexport async function loader({ request }: LoaderFunctionArgs) {\r\n  // This is the route Google redirects back to after authentication.\r\n  // The authenticator handles the callback verification, token exchange,\r\n  // and calls the verify function we defined in the GoogleStrategy.\r\n  return authenticator.authenticate(\"google\", request, {\r\n    // Redirect to the dashboard upon successful authentication\r\n    successRedirect: \"/dashboard\",\r\n     // Redirect to a login or error page upon failure\r\n     // You might want a more specific error page later\r\n     failureRedirect: \"/?error=google-auth-failed\", // Redirect to homepage on failure\r\n   });\r\n }\r\n", "import type { LoaderFunctionArgs } from \"@remix-run/node\";\r\nimport { json, redirect } from \"@remix-run/node\";\r\nimport { useLoaderData, Link } from \"@remix-run/react\";\r\nimport { authenticator } from \"~/services/auth.server\";\r\nimport { getGoogleAuthClient, readSheetData } from \"~/services/google.server\"; // Import Google helpers (removed .ts)\r\nimport { useState } from \"react\"; // For handling input changes\r\n\r\n// --- Configuration for Kezia Sheet ---\r\nconst KEZIA_SPREADSHEET_ID = \"1uzzHN8tzc53mOOpH8WuXJHIUsk9f17eYc0qsod-Yryk\";\r\nconst KEZIA_SHEET_NAME = \"EN COURS\"; // From user input\r\nconst KEZIA_DATA_RANGE = `${KEZIA_SHEET_NAME}!A:P`; // From user input (Columns A to P)\r\nconst EDITABLE_COLUMNS = ['N', 'O', 'P']; // From user input (0-based index: 13, 14, 15)\r\nconst EDITABLE_COL_INDICES = [13, 14, 15]; // N=13, O=14, P=15 (0-based)\r\n// --- End Configuration ---\r\n\r\ninterface SheetLoaderData {\r\n  headers: string[];\r\n  rows: any[][];\r\n  error?: string;\r\n  warning?: string; // To display the unique ID warning\r\n}\r\n\r\nexport const loader = async ({ request }: LoaderFunctionArgs) => {\r\n  const session = await authenticator.isAuthenticated(request);\r\n  if (!session) {\r\n    return redirect(\"/?error=unauthenticated\");\r\n  }\r\n\r\n  try {\r\n    const authClient = await getGoogleAuthClient(session);\r\n    const sheetValues = await readSheetData(authClient, KEZIA_SPREADSHEET_ID, KEZIA_DATA_RANGE);\r\n\r\n    if (!sheetValues || sheetValues.length === 0) {\r\n      return json<SheetLoaderData>({ headers: [], rows: [], error: \"Aucune donn\u00E9e trouv\u00E9e dans la feuille.\" });\r\n    }\r\n\r\n    // Assume first row is headers\r\n    const headers = sheetValues[0];\r\n    const rows = sheetValues.slice(1);\r\n\r\n    return json<SheetLoaderData>({\r\n        headers,\r\n        rows,\r\n        warning: \"Modification d\u00E9sactiv\u00E9e : Aucune colonne d'identification unique n'a \u00E9t\u00E9 sp\u00E9cifi\u00E9e pour cette feuille.\"\r\n    });\r\n\r\n  } catch (error: any) {\r\n    console.error(\"[installations.kezia Loader] Error:\", error);\r\n     // Handle potential token errors from getGoogleAuthClient\r\n     if (error.message.includes(\"token\") || error.message.includes(\"authenticate\")) {\r\n        // Consider destroying session: await authenticator.logout(request, { redirectTo: \"/auth/google?error=token_error\" });\r\n        return redirect(\"/auth/google?error=token_error\");\r\n     }\r\n    return json<SheetLoaderData>({ headers: [], rows: [], error: error.message || \"Erreur lors du chargement des donn\u00E9es Kezia.\" }, { status: 500 });\r\n  }\r\n};\r\n\r\n// --- Component ---\r\nexport default function KeziaInstallations() {\r\n  const { headers, rows, error, warning } = useLoaderData<typeof loader>();\r\n  // Local state to manage edits (though saving is disabled)\r\n  const [editedData, setEditedData] = useState<Record<number, Record<number, any>>>({});\r\n\r\n  const handleInputChange = (rowIndex: number, colIndex: number, value: any) => {\r\n    setEditedData(prev => ({\r\n      ...prev,\r\n      [rowIndex]: {\r\n        ...prev[rowIndex],\r\n        [colIndex]: value,\r\n      }\r\n    }));\r\n  };\r\n\r\n  // Placeholder for future save function\r\n  const handleSave = (rowIndex: number) => {\r\n      alert(`Sauvegarde d\u00E9sactiv\u00E9e. Donn\u00E9es modifi\u00E9es pour la ligne ${rowIndex + 1}: ${JSON.stringify(editedData[rowIndex])}`);\r\n      // In future: call an action function with row identifier and editedData[rowIndex]\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <h1 className=\"text-2xl font-semibold text-white\">Installations Kezia (Feuille: {KEZIA_SHEET_NAME})</h1>\r\n\r\n      <Link to=\"/dashboard\" className=\"text-jdc-blue hover:underline\">\r\n        &larr; Retour au Tableau de Bord\r\n      </Link>\r\n\r\n      {error && (\r\n        <div className=\"bg-red-900 bg-opacity-50 text-red-300 p-4 rounded-md\">\r\n          <p className=\"font-semibold\">Erreur :</p>\r\n          <p>{error}</p>\r\n        </div>\r\n      )}\r\n\r\n       {warning && (\r\n        <div className=\"bg-yellow-900 bg-opacity-70 text-yellow-300 p-4 rounded-md\">\r\n          <p className=\"font-semibold\">Attention :</p>\r\n          <p>{warning}</p>\r\n        </div>\r\n      )}\r\n\r\n      {!error && rows.length > 0 && (\r\n        <div className=\"overflow-x-auto bg-jdc-card rounded-lg shadow\">\r\n          <table className=\"min-w-full divide-y divide-jdc-gray-700\">\r\n            <thead className=\"bg-jdc-gray-800\">\r\n              <tr>\r\n                {/* Add row number header */}\r\n                <th scope=\"col\" className=\"px-3 py-3 text-left text-xs font-medium text-jdc-gray-300 uppercase tracking-wider sticky left-0 bg-jdc-gray-800 z-10\">\r\n                  #\r\n                </th>\r\n                {headers.map((header, index) => (\r\n                  <th\r\n                    key={index}\r\n                    scope=\"col\"\r\n                    className={`px-3 py-3 text-left text-xs font-medium text-jdc-gray-300 uppercase tracking-wider ${index < 1 ? 'sticky left-10 bg-jdc-gray-800 z-10' : ''}`} // Make first data column sticky too\r\n                  >\r\n                    {header || `Colonne ${String.fromCharCode(65 + index)}`} {/* Display letter if header empty */}\r\n                  </th>\r\n                ))}\r\n                 {/* Add Save button header if needed */}\r\n                 {/* <th scope=\"col\" className=\"relative px-3 py-3\">\r\n                   <span className=\"sr-only\">Sauvegarder</span>\r\n                 </th> */}\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-jdc-card divide-y divide-jdc-gray-700\">\r\n              {rows.map((row, rowIndex) => (\r\n                <tr key={rowIndex} className=\"hover:bg-jdc-gray-800/50\">\r\n                   {/* Row number cell */}\r\n                   <td className=\"px-3 py-2 whitespace-nowrap text-sm text-jdc-gray-400 sticky left-0 bg-inherit z-10\">\r\n                     {rowIndex + 2} {/* +2 because header is row 1, data starts row 2 */}\r\n                   </td>\r\n                  {row.map((cell, colIndex) => (\r\n                    <td\r\n                      key={colIndex}\r\n                      className={`px-3 py-2 whitespace-nowrap text-sm ${colIndex < 1 ? 'sticky left-10 bg-inherit z-10' : ''}`} // Corrected: Use colIndex for sticky check\r\n                    >\r\n                      {EDITABLE_COL_INDICES.includes(colIndex) ? (\r\n                        <input\r\n                          type={colIndex === 14 ? \"date\" : \"text\"} // Use date type for column O (index 14)\r\n                          value={editedData[rowIndex]?.[colIndex] ?? cell ?? ''}\r\n                          onChange={(e) => handleInputChange(rowIndex, colIndex, e.target.value)}\r\n                          className=\"bg-jdc-gray-700 text-white rounded px-2 py-1 w-full focus:ring-jdc-blue focus:border-jdc-blue\"\r\n                          // disabled={!!warning} // Disable if saving is impossible\r\n                          placeholder={`Modifier ${headers[colIndex] || `Col ${String.fromCharCode(65 + colIndex)}`}`}\r\n                        />\r\n                      ) : (\r\n                        <span className=\"text-jdc-gray-300\">{cell}</span>\r\n                      )}\r\n                    </td>\r\n                  ))}\r\n                   {/* Save button cell - disabled */}\r\n                   {/* <td className=\"px-3 py-2 whitespace-nowrap text-right text-sm font-medium\">\r\n                     <Button size=\"sm\" onClick={() => handleSave(rowIndex)} disabled={!!warning}>\r\n                       Save (Disabled)\r\n                     </Button>\r\n                   </td> */}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n\r\n       {!error && rows.length === 0 && !warning && (\r\n         <p className=\"text-jdc-gray-400\">Aucune donn\u00E9e \u00E0 afficher.</p>\r\n       )}\r\n    </div>\r\n  );\r\n}\r\n", "import { google } from 'googleapis';\r\nimport type { UserSession } from './session.server'; // Assuming UserSession has google tokens\r\nimport type { Credentials } from 'google-auth-library';\r\n\r\n// Ensure Google credentials from .env are loaded (needed for OAuth client)\r\nconst GOOGLE_CLIENT_ID = process.env.GOOGLE_CLIENT_ID;\r\nconst GOOGLE_CLIENT_SECRET = process.env.GOOGLE_CLIENT_SECRET;\r\nconst APP_BASE_URL = process.env.APP_BASE_URL; // Needed for redirect URI\r\n\r\nif (!GOOGLE_CLIENT_ID || !GOOGLE_CLIENT_SECRET || !APP_BASE_URL) {\r\n  console.error(\"Missing GOOGLE_CLIENT_ID, GOOGLE_CLIENT_SECRET, or APP_BASE_URL in environment variables.\");\r\n  // Depending on your app's needs, you might throw an error or handle this differently\r\n  // For now, log the error. Functions using this might fail later.\r\n}\r\n\r\nconst REDIRECT_URI = `${APP_BASE_URL}/auth/google/callback`;\r\n\r\n/**\r\n * Creates an OAuth2 client authenticated with the user's tokens.\r\n * Handles token refresh if necessary.\r\n * @param session - The user session containing Google tokens.\r\n * @returns An authenticated OAuth2 client instance.\r\n * @throws Error if session or tokens are missing, or refresh fails.\r\n */\r\nexport async function getGoogleAuthClient(session: UserSession | null) {\r\n  if (!session?.googleAccessToken || !session.googleRefreshToken) {\r\n    throw new Error(\"User session or Google tokens are missing.\");\r\n  }\r\n  if (!GOOGLE_CLIENT_ID || !GOOGLE_CLIENT_SECRET) {\r\n      throw new Error(\"Server Google credentials (ID or Secret) are not configured.\");\r\n  }\r\n\r\n  const oauth2Client = new google.auth.OAuth2(\r\n    GOOGLE_CLIENT_ID,\r\n    GOOGLE_CLIENT_SECRET,\r\n    REDIRECT_URI\r\n  );\r\n\r\n  const tokens: Credentials = {\r\n    access_token: session.googleAccessToken,\r\n    refresh_token: session.googleRefreshToken,\r\n    // scope: session.scopes, // Include scopes if stored in session\r\n    token_type: 'Bearer',\r\n    expiry_date: session.tokenExpiry,\r\n  };\r\n\r\n  oauth2Client.setCredentials(tokens);\r\n\r\n  // Optional: Check if the token is expired and refresh if needed.\r\n  // googleapis library might handle this automatically in some cases,\r\n  // but explicit check can be more robust.\r\n  if (session.tokenExpiry && session.tokenExpiry < Date.now() + 60000) { // Refresh if expires in next 60s\r\n    console.log(\"[GoogleAuthClient] Access token expired or expiring soon. Refreshing...\");\r\n    try {\r\n      const { credentials } = await oauth2Client.refreshAccessToken();\r\n      console.log(\"[GoogleAuthClient] Token refreshed successfully.\");\r\n      oauth2Client.setCredentials(credentials);\r\n\r\n      // IMPORTANT: Update the session with the new tokens!\r\n      // This requires committing the session back. This function currently\r\n      // doesn't have access to commitSession. The calling loader/action\r\n      // will need to handle session updates after calling this function\r\n      // if a refresh occurred. We can return the new tokens for this purpose.\r\n      // For now, we just update the client instance.\r\n      // TODO: Implement session update logic in the caller based on returned new tokens.\r\n\r\n    } catch (error) {\r\n      console.error(\"[GoogleAuthClient] Error refreshing access token:\", error);\r\n      // Handle refresh error (e.g., user revoked access)\r\n      // Maybe throw a specific error to trigger re-authentication?\r\n      throw new Error(\"Failed to refresh Google access token. Please re-authenticate.\");\r\n    }\r\n  }\r\n\r\n  return oauth2Client;\r\n}\r\n\r\n/**\r\n * Reads data from a Google Sheet range.\r\n * @param authClient - Authenticated OAuth2 client.\r\n * @param spreadsheetId - The ID of the spreadsheet.\r\n * @param range - The A1 notation of the range to retrieve (e.g., 'Sheet1!A1:B2').\r\n * @returns A promise resolving to the sheet data (array of arrays).\r\n */\r\nexport async function readSheetData(\r\n    authClient: any, // Type should be OAuth2Client, but use 'any' for simplicity if type issues arise\r\n    spreadsheetId: string,\r\n    range: string\r\n): Promise<any[][] | null> {\r\n    const sheets = google.sheets({ version: 'v4', auth: authClient });\r\n    console.log(`[GoogleSheets] Reading data from spreadsheetId: ${spreadsheetId}, range: ${range}`);\r\n    try {\r\n        const response = await sheets.spreadsheets.values.get({\r\n            spreadsheetId,\r\n            range,\r\n        });\r\n        console.log(`[GoogleSheets] Successfully read data for range: ${range}`);\r\n        return response.data.values ?? []; // Return empty array if no values\r\n    } catch (error: any) {\r\n        console.error(`[GoogleSheets] Error reading sheet data (ID: ${spreadsheetId}, Range: ${range}):`, error.response?.data || error.message);\r\n        // Handle specific errors like 403 (permission denied), 404 (not found)\r\n        if (error.response?.status === 403) {\r\n             throw new Error(`Permission denied for spreadsheet ${spreadsheetId}. Ensure the user granted 'drive' or 'spreadsheets' scope and has access to the sheet.`);\r\n        }\r\n         if (error.response?.status === 404) {\r\n             throw new Error(`Spreadsheet or sheet/range not found (ID: ${spreadsheetId}, Range: ${range}).`);\r\n        }\r\n        throw new Error(`Failed to read Google Sheet data: ${error.message}`);\r\n    }\r\n}\r\n\r\n// TODO: Add function writeSheetData(authClient, spreadsheetId, range, values)\r\n// This will be needed later for editing, but requires unique row identifier logic.\r\n\r\n\r\n// --- Google Calendar Functions ---\r\n\r\n/**\r\n * Fetches calendar events for the primary calendar within a given time range.\r\n * @param authClient Authenticated OAuth2 client.\r\n * @param timeMin Start time (ISO string).\r\n * @param timeMax End time (ISO string).\r\n * @returns A promise resolving to an array of calendar events.\r\n */\r\nexport async function getCalendarEvents(\r\n    authClient: any, // Type should be OAuth2Client\r\n    timeMin: string,\r\n    timeMax: string\r\n): Promise<any[]> { // Consider defining a stricter type for CalendarEvent\r\n    const calendar = google.calendar({ version: 'v3', auth: authClient });\r\n    console.log(`[GoogleCalendar] Fetching events from primary calendar between ${timeMin} and ${timeMax}`);\r\n    try {\r\n        const response = await calendar.events.list({\r\n            calendarId: 'primary', // Use the primary calendar of the authenticated user\r\n            timeMin: timeMin,\r\n            timeMax: timeMax,\r\n            singleEvents: true, // Expand recurring events into single instances\r\n            orderBy: 'startTime', // Order events by start time\r\n            maxResults: 50, // Limit the number of events fetched (adjust as needed)\r\n        });\r\n        const events = response.data.items ?? [];\r\n        console.log(`[GoogleCalendar] Successfully fetched ${events.length} events.`);\r\n        return events;\r\n    } catch (error: any) {\r\n        console.error(`[GoogleCalendar] Error fetching calendar events:`, error.response?.data || error.message);\r\n        if (error.response?.status === 403) {\r\n             throw new Error(`Permission denied for Google Calendar. Ensure the user granted 'calendar' or 'calendar.readonly' scope.`);\r\n        }\r\n         if (error.response?.status === 404) {\r\n             throw new Error(`Primary calendar not found.`);\r\n        }\r\n        throw new Error(`Failed to fetch Google Calendar events: ${error.message}`);\r\n    }\r\n}\r\n", "import type { LoaderFunctionArgs } from \"@remix-run/node\";\r\nimport { json, redirect } from \"@remix-run/node\";\r\nimport { useLoaderData, Link } from \"@remix-run/react\";\r\nimport { authenticator } from \"~/services/auth.server\";\r\nimport type { UserSession } from \"~/services/session.server\";\r\n\r\n// Define the expected structure of the Google Drive API response (simplified)\r\ninterface GoogleDriveFile {\r\n  id: string;\r\n  name: string;\r\n  mimeType: string;\r\n  webViewLink?: string;\r\n}\r\n\r\n// Define the possible structure of the data returned by the loader\r\ninterface LoaderData {\r\n  files: GoogleDriveFile[];\r\n  error?: string; // Error message is optional\r\n}\r\n\r\ninterface GoogleDriveFilesListResponse {\r\n  files: GoogleDriveFile[];\r\n  nextPageToken?: string;\r\n}\r\n\r\n// Loader function to fetch files from Google Drive\r\nexport const loader = async ({ request }: LoaderFunctionArgs) => {\r\n  // Ensure the user is authenticated\r\n  const userSession = await authenticator.isAuthenticated(request);\r\n  if (!userSession) {\r\n    // Redirect to login or homepage if not authenticated\r\n    // Maybe add a message indicating why they were redirected\r\n    return redirect(\"/?error=unauthenticated\");\r\n  }\r\n\r\n  const accessToken = userSession.googleAccessToken;\r\n\r\n  if (!accessToken) {\r\n    // This might happen if the token expired and we haven't implemented refresh logic yet,\r\n    // or if it wasn't obtained correctly during login.\r\n    console.error(\"[google-drive-files Loader] No access token found in session.\");\r\n    // For now, redirect to re-authenticate. Later, implement refresh token logic.\r\n    // You might want a specific error page or message.\r\n    // Consider destroying the session here? authenticator.logout(request, { redirectTo: \"/auth/google\" });\r\n    return redirect(\"/auth/google?error=token_missing\"); // Force re-auth\r\n  }\r\n\r\n  console.log(\"[google-drive-files Loader] Access token found. Fetching Drive files...\");\r\n\r\n  try {\r\n    // Call the Google Drive API (Files: list)\r\n    // We'll fetch a small number of files for this test\r\n    const driveApiUrl = `https://www.googleapis.com/drive/v3/files?pageSize=10&fields=files(id,name,mimeType,webViewLink)`;\r\n\r\n    const response = await fetch(driveApiUrl, {\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      // Handle API errors (e.g., token expired, insufficient permissions)\r\n      const errorBody = await response.json();\r\n      console.error(\"[google-drive-files Loader] Google Drive API error:\", response.status, errorBody);\r\n      // Specific check for invalid credentials (token expired/revoked)\r\n      if (response.status === 401) {\r\n         // Token is likely invalid/expired. Redirect to re-authenticate.\r\n         // Consider destroying the session here? authenticator.logout(request, { redirectTo: \"/auth/google\" });\r\n         return redirect(\"/auth/google?error=token_invalid\");\r\n      }\r\n      // Throw a generic error for other API issues\r\n      throw new Error(`Google Drive API request failed: ${response.statusText}`);\r\n    }\r\n\r\n    const data: GoogleDriveFilesListResponse = await response.json();\r\n    console.log(`[google-drive-files Loader] Successfully fetched ${data.files?.length ?? 0} files.`);\r\n\r\n    // Return the list of files\r\n    return json({ files: data.files ?? [] });\r\n\r\n  } catch (error: any) {\r\n    console.error(\"[google-drive-files Loader] Error fetching Google Drive files:\", error);\r\n    // Return an error state to the component\r\n    return json({ files: [], error: error.message || \"Failed to fetch files\" }, { status: 500 });\r\n  }\r\n};\r\n\r\n// Component to display the files\r\nexport default function GoogleDriveFiles() {\r\n  // Use the explicit LoaderData interface\r\n  const { files, error } = useLoaderData<LoaderData>();\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <h1 className=\"text-2xl font-semibold text-white\">Fichiers Google Drive (Test API)</h1>\r\n\r\n      <Link to=\"/dashboard\" className=\"text-jdc-blue hover:underline\">\r\n        &larr; Retour au Tableau de Bord\r\n      </Link>\r\n\r\n      {error && (\r\n        <div className=\"bg-red-900 bg-opacity-50 text-red-300 p-4 rounded-md\">\r\n          <p className=\"font-semibold\">Erreur lors de la r\u00E9cup\u00E9ration des fichiers :</p>\r\n          <p>{error}</p>\r\n          <p className=\"mt-2 text-sm\">Cela peut \u00EAtre d\u00FB \u00E0 un jeton expir\u00E9 ou \u00E0 des permissions insuffisantes. Essayez de vous reconnecter via Google.</p>\r\n           <Link to=\"/auth/google\" className=\"text-jdc-yellow hover:underline font-semibold mt-1 block\">\r\n             Se reconnecter avec Google\r\n           </Link>\r\n        </div>\r\n      )}\r\n\r\n      {!error && files && files.length > 0 && (\r\n        <ul className=\"bg-jdc-card rounded-lg shadow p-4 space-y-2\">\r\n          {files.map((file) => (\r\n            <li key={file.id} className=\"border-b border-jdc-gray-700 pb-2 last:border-b-0\">\r\n              <p className=\"font-medium text-white\">{file.name}</p>\r\n              <p className=\"text-sm text-jdc-gray-400\">{file.mimeType}</p>\r\n              {file.webViewLink && (\r\n                <a\r\n                  href={file.webViewLink}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"text-xs text-jdc-blue hover:underline\"\r\n                >\r\n                  Ouvrir dans Drive\r\n                </a>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n\r\n      {!error && files && files.length === 0 && (\r\n        <p className=\"text-jdc-gray-400\">Aucun fichier trouv\u00E9 (ou acc\u00E8s non autoris\u00E9).</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n", "import type { ActionFunctionArgs, LoaderFunctionArgs } from \"@remix-run/node\";\r\nimport { redirect } from \"@remix-run/node\";\r\nimport { authenticator } from \"~/services/auth.server\"; // Import the authenticator\r\n\r\n// Loader function: Redirects GET requests to the authenticator\r\nexport async function loader({ request }: LoaderFunctionArgs) {\r\n  // If the user is already authenticated, redirect them to the dashboard or another appropriate page\r\n  // This prevents users from hitting the login initiation route if they are already logged in.\r\n  await authenticator.isAuthenticated(request, {\r\n    successRedirect: \"/dashboard\", // Or wherever you want authenticated users to go\r\n  });\r\n\r\n  // If not authenticated, proceed with initiating the Google authentication flow\r\n  return authenticator.authenticate(\"google\", request);\r\n}\r\n\r\n// Action function: Handles POST requests (e.g., from a login button)\r\nexport async function action({ request }: ActionFunctionArgs) {\r\n   // If the user is already authenticated, redirect them away\r\n   await authenticator.isAuthenticated(request, {\r\n    successRedirect: \"/dashboard\",\r\n  });\r\n  // Initiate the Google authentication flow\r\n  return authenticator.authenticate(\"google\", request);\r\n}\r\n", "import type { MetaFunction } from \"@remix-run/node\";\r\nimport { useState, useEffect, useMemo, useRef, useCallback } from \"react\";\r\nimport { useOutletContext } from \"@remix-run/react\";\r\n// Import getAllTicketsForSectorsSdk instead of the listener\r\nimport { getUserProfileSdk, getAllTicketsForSectorsSdk } from \"~/services/firestore.service.server\";\r\n// Import UserSession from session.server instead of AppUser\r\nimport type { SapTicket, UserProfile } from \"~/types/firestore.types\";\r\nimport type { UserSession } from \"~/services/session.server\"; // Import UserSession\r\nimport { Timestamp } from 'firebase/firestore'; // Keep for type checking if needed\r\nimport { Input } from \"~/components/ui/Input\";\r\nimport { Button } from \"~/components/ui/Button\";\r\nimport TicketSAPDetails from \"~/components/TicketSAPDetails\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTicket, faFilter, faSearch, faUserTag, faChevronDown, faChevronRight, faSpinner,\r\n  faExclamationTriangle, faCircleNodes, faPhone, faMapMarkerAlt, faUserTie, faInfoCircle,\r\n  faCalendarAlt, faChevronUp\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { getTicketStatusStyle } from \"~/utils/styleUtils\";\r\nimport { parseFrenchDate, formatDateForDisplay } from \"~/utils/dateUtils\";\r\n\r\nexport const meta: MetaFunction = () => {\r\n  return [{ title: \"Tickets SAP | JDC Dashboard\" }];\r\n};\r\n\r\n// Update Outlet context type to use UserSession\r\ntype OutletContextType = {\r\n  user: UserSession | null;\r\n  profile: UserProfile | null; // Profile now comes from root loader context\r\n};\r\n\r\nconst groupTicketsByRaisonSociale = (tickets: SapTicket[]): Map<string, SapTicket[]> => {\r\n  const grouped = new Map<string, SapTicket[]>();\r\n   if (!Array.isArray(tickets)) {\r\n     return grouped;\r\n   }\r\n  tickets.forEach(ticket => {\r\n    const raisonSociale = ticket.raisonSociale; // Use raisonSociale directly\r\n    if (raisonSociale) { // Only group if raisonSociale exists\r\n        const existing = grouped.get(raisonSociale);\r\n        if (existing) {\r\n          existing.push(ticket);\r\n        } else {\r\n          grouped.set(raisonSociale, [ticket]);\r\n        }\r\n    }\r\n  });\r\n  return grouped;\r\n};\r\n\r\nexport default function TicketsSap() {\r\n  // Get user and profile directly from context\r\n  const { user, profile: initialProfile } = useOutletContext<OutletContextType>();\r\n  // No need for separate userProfile state if it comes from context\r\n  // const [userProfile, setUserProfile] = useState<UserProfile | null>(initialProfile);\r\n  const userProfile = initialProfile; // Use profile from context directly\r\n\r\n  const [allTickets, setAllTickets] = useState<SapTicket[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  // Remove isListening state as we are not using a listener anymore\r\n  // const [isListening, setIsListening] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [selectedSector, setSelectedSector] = useState<string>('');\r\n  const [searchTerm, setSearchTerm] = useState<string>('');\r\n  const [showNumberOptions, setShowNumberOptions] = useState<Record<string, boolean>>({});\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [selectedTicket, setSelectedTicket] = useState<SapTicket | null>(null);\r\n\r\n  // Remove unsubscribeRef as there's no listener\r\n  // const unsubscribeRef = useRef<() => void>(() => {});\r\n\r\n  // useEffect to fetch tickets once when user/profile changes\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    const fetchTickets = async () => {\r\n      // Use user from context directly\r\n      if (!user || !userProfile) {\r\n        console.log(\"Tickets SAP: No user or profile, clearing state.\");\r\n        setIsLoading(false);\r\n        setAllTickets([]);\r\n        setError(null);\r\n        return;\r\n      }\r\n\r\n      setIsLoading(true);\r\n      setError(null);\r\n      setAllTickets([]);\r\n\r\n      try {\r\n        // Profile is already available from context, no need to fetch again unless needed for refresh\r\n        // const profile = await getUserProfileSdk(user.userId); // Use userId from UserSession\r\n        // if (!isMounted) return;\r\n        // setUserProfile(profile); // Update state if fetched again\r\n        // console.log(\"Tickets SAP: User profile fetched:\", profile);\r\n\r\n        const sectorsToQuery = userProfile.secteurs ?? [];\r\n        if (sectorsToQuery.length === 0) {\r\n            console.warn(`Tickets SAP: User ${user.userId} (Role: ${userProfile.role}) has no sectors assigned.`);\r\n            setAllTickets([]);\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n\r\n        console.log(`Tickets SAP: Fetching tickets for sectors: ${sectorsToQuery.join(', ')}`);\r\n\r\n        // Fetch tickets once using getAllTicketsForSectorsSdk\r\n        const fetchedTickets = await getAllTicketsForSectorsSdk(sectorsToQuery);\r\n\r\n        if (isMounted) {\r\n          console.log(`Tickets SAP: Fetched ${fetchedTickets.length} tickets.`);\r\n          // Filter out tickets without raisonSociale immediately upon receiving updates\r\n          const ticketsWithRaisonSociale = fetchedTickets.filter(t => t.raisonSociale);\r\n          setAllTickets(ticketsWithRaisonSociale);\r\n          setIsLoading(false); // Set loading false after fetch completes\r\n          setError(null);\r\n        }\r\n\r\n      } catch (err: any) {\r\n        if (isMounted) {\r\n          console.error(\"Error fetching Tickets SAP:\", err);\r\n          setError(`Erreur de chargement initial: ${err.message}`);\r\n          setAllTickets([]); // Clear tickets on error\r\n          setIsLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchTickets();\r\n\r\n    return () => {\r\n      isMounted = false;\r\n      console.log(\"Tickets SAP: Unmounting or user changed.\");\r\n      // No listener to unsubscribe from\r\n    };\r\n  // Depend on user and userProfile from context\r\n  }, [user, userProfile]);\r\n\r\n  const availableSectors = useMemo(() => {\r\n     // Use profile from context\r\n     return userProfile?.secteurs?.slice().sort() ?? [];\r\n  }, [userProfile]);\r\n\r\n  const filteredAndGroupedTickets = useMemo(() => {\r\n    let filtered = allTickets;\r\n\r\n    if (selectedSector && selectedSector !== '') {\r\n      filtered = filtered.filter(t => t.secteur === selectedSector);\r\n    }\r\n\r\n    if (searchTerm.trim() !== '') {\r\n      const lowerSearchTerm = searchTerm.trim().toLowerCase();\r\n      filtered = filtered.filter(t =>\r\n        (t.raisonSociale && t.raisonSociale.toLowerCase().includes(lowerSearchTerm)) ||\r\n        (t.client && t.client.toLowerCase().includes(lowerSearchTerm)) ||\r\n        (t.id && t.id.toLowerCase().includes(lowerSearchTerm)) ||\r\n        (t.description && t.description.toLowerCase().includes(lowerSearchTerm)) ||\r\n        (t.statut && t.statut.toLowerCase().includes(lowerSearchTerm)) ||\r\n        (t.numeroSAP && t.numeroSAP.toLowerCase().includes(lowerSearchTerm)) ||\r\n        (t.deducedSalesperson && t.deducedSalesperson.toLowerCase().includes(lowerSearchTerm)) ||\r\n        (t.adresse && t.adresse.toLowerCase().includes(lowerSearchTerm)) ||\r\n        (t.telephone && t.telephone.toLowerCase().includes(lowerSearchTerm))\r\n      );\r\n    }\r\n    return groupTicketsByRaisonSociale(filtered);\r\n  }, [allTickets, selectedSector, searchTerm]);\r\n\r\n  const clientGroups = useMemo(() => {\r\n    const findMostRecentDate = (tickets: SapTicket[]): Date | null => {\r\n      let mostRecent: Date | null = null;\r\n      for (const ticket of tickets) {\r\n        // Ensure ticket.date is treated as Date | Timestamp | null\r\n        const parsedDate = parseFrenchDate(ticket.date as Date | Timestamp | null);\r\n        if (parsedDate) {\r\n          if (!mostRecent || parsedDate.getTime() > mostRecent.getTime()) {\r\n            mostRecent = parsedDate;\r\n          }\r\n        }\r\n      }\r\n      return mostRecent;\r\n    };\r\n\r\n    const groupsWithDates = Array.from(filteredAndGroupedTickets.entries()).map(\r\n      ([raisonSociale, tickets]) => ({\r\n        raisonSociale,\r\n        tickets,\r\n        mostRecentDate: findMostRecentDate(tickets),\r\n      })\r\n    );\r\n\r\n    groupsWithDates.sort((a, b) => {\r\n      if (!b.mostRecentDate) return -1;\r\n      if (!a.mostRecentDate) return 1;\r\n      return b.mostRecentDate.getTime() - a.mostRecentDate.getTime();\r\n    });\r\n\r\n    return groupsWithDates.map(group => [group.raisonSociale, group.tickets] as [string, SapTicket[]]);\r\n\r\n  }, [filteredAndGroupedTickets]);\r\n\r\n  const handleWebexCall = useCallback((ticketId: string, phoneNumbers: string[]) => {\r\n    if (phoneNumbers.length === 1) {\r\n      window.location.href = `webexphone://call?uri=tel:${phoneNumbers[0]}`;\r\n      setShowNumberOptions(prevState => ({ ...prevState, [ticketId]: false }));\r\n    } else if (phoneNumbers.length > 1) {\r\n      setShowNumberOptions(prevState => ({ ...prevState, [ticketId]: !prevState[ticketId] }));\r\n    }\r\n  }, []);\r\n\r\n  const handleNumberSelection = useCallback((number: string) => {\r\n     window.location.href = `webexphone://call?uri=tel:${number}`;\r\n   }, []);\r\n\r\n   const handleTicketClick = (ticket: SapTicket) => {\r\n     console.log(\"Ticket clicked:\", ticket);\r\n     setSelectedTicket(ticket);\r\n     setIsModalOpen(true);\r\n   };\r\n\r\n   const handleCloseModal = () => {\r\n     setIsModalOpen(false);\r\n     setSelectedTicket(null);\r\n   };\r\n\r\n   // Function to manually refresh tickets after an update in the modal\r\n   const refreshTickets = useCallback(async () => {\r\n       if (!user || !userProfile) return; // Need user and profile to fetch\r\n       console.log(\"Tickets SAP: Refreshing tickets manually...\");\r\n       setIsLoading(true); // Show loading indicator during refresh\r\n       try {\r\n           const sectorsToQuery = userProfile.secteurs ?? [];\r\n           if (sectorsToQuery.length > 0) {\r\n               const fetchedTickets = await getAllTicketsForSectorsSdk(sectorsToQuery);\r\n               const ticketsWithRaisonSociale = fetchedTickets.filter(t => t.raisonSociale);\r\n               setAllTickets(ticketsWithRaisonSociale); // Update the state\r\n           } else {\r\n               setAllTickets([]); // Clear if no sectors\r\n           }\r\n           setError(null);\r\n       } catch (err: any) {\r\n           console.error(\"Error refreshing tickets:\", err);\r\n           setError(`Erreur lors du rafra\u00EEchissement: ${err.message}`);\r\n       } finally {\r\n           setIsLoading(false); // Hide loading indicator\r\n       }\r\n   }, [user, userProfile]); // Depend on user and profile\r\n\r\n   // Update handleTicketUpdated to call refreshTickets\r\n   const handleTicketUpdated = () => {\r\n     console.log(\"Ticket update detected from modal, manually refreshing list.\");\r\n     refreshTickets(); // Call the refresh function\r\n     // Optionally close modal after update:\r\n     // handleCloseModal();\r\n   };\r\n\r\n\r\n  // Update initial check to use profile from context\r\n  if (!user && !isLoading) {\r\n     return (\r\n        <div className=\"text-center text-jdc-gray-400 py-10\">\r\n            Veuillez vous connecter pour voir les tickets SAP.\r\n        </div>\r\n     )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-2xl font-semibold text-white mb-4 flex items-center\">\r\n        <FontAwesomeIcon icon={faTicket} className=\"mr-3 text-jdc-blue\" />\r\n        Gestion des Tickets SAP\r\n        {/* Remove real-time indicator */}\r\n        {/* {isListening && <FontAwesomeIcon icon={faCircleNodes} className=\"ml-3 text-green-500 text-sm animate-pulse\" title=\"Connexion temps r\u00E9el active\" />} */}\r\n      </h1>\r\n\r\n      {/* Filter and Search Controls */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6 p-4 bg-jdc-card rounded-lg shadow\">\r\n        {/* Sector Filter */}\r\n        <div className=\"col-span-1\">\r\n          <label htmlFor=\"sector-filter\" className=\"block text-sm font-medium text-jdc-gray-300 mb-1\">\r\n            <FontAwesomeIcon icon={faFilter} className=\"mr-1\" /> Filtrer par Secteur\r\n          </label>\r\n          <select\r\n            id=\"sector-filter\"\r\n            name=\"sector-filter\"\r\n            value={selectedSector}\r\n            onChange={(e) => setSelectedSector(e.target.value)}\r\n            className=\"block w-full rounded-md bg-jdc-gray-800 border-transparent focus:border-jdc-blue focus:ring focus:ring-jdc-blue focus:ring-opacity-50 text-white py-2 pl-3 pr-10\"\r\n            disabled={isLoading || availableSectors.length === 0}\r\n          >\r\n            <option value=\"\">Tous les secteurs ({userProfile?.secteurs?.length ?? 0})</option>\r\n            {availableSectors.map(sector => (\r\n              <option key={sector} value={sector}>{sector}</option>\r\n            ))}\r\n          </select>\r\n           {availableSectors.length === 0 && !isLoading && !error && (\r\n             <p className=\"text-xs text-jdc-gray-500 mt-1\">Aucun secteur assign\u00E9 \u00E0 votre profil.</p>\r\n           )}\r\n        </div>\r\n\r\n        {/* Search Input */}\r\n        <div className=\"col-span-1 md:col-span-2\">\r\n           <Input\r\n             label=\"Rechercher (Raison Sociale, Client, ID, SAP, Adresse, Vendeur...)\"\r\n             id=\"search-client\"\r\n             name=\"search-client\"\r\n             placeholder=\"Entrez un nom, ID, mot-cl\u00E9...\"\r\n             value={searchTerm}\r\n             onChange={(e) => setSearchTerm(e.target.value)}\r\n             icon={<FontAwesomeIcon icon={faSearch} />}\r\n             wrapperClassName=\"mb-0\"\r\n             disabled={isLoading}\r\n           />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Loading State */}\r\n      {isLoading && (\r\n        <div className=\"text-center text-jdc-gray-400 py-10\">\r\n          <FontAwesomeIcon icon={faSpinner} spin className=\"text-2xl mr-2\" />\r\n          Chargement des tickets... {/* Updated loading text */}\r\n        </div>\r\n      )}\r\n\r\n      {/* Error State */}\r\n      {error && !isLoading && (\r\n        <div className=\"text-center text-red-400 bg-red-900 bg-opacity-50 p-4 rounded-lg flex items-center justify-center\">\r\n           <FontAwesomeIcon icon={faExclamationTriangle} className=\"mr-2\" />\r\n           {error}\r\n        </div>\r\n      )}\r\n\r\n      {/* No Results State (after filtering/searching) */}\r\n      {!isLoading && !error && clientGroups.length === 0 && allTickets.length > 0 && (\r\n        <div className=\"text-center text-jdc-gray-400 py-10\">\r\n          Aucun ticket trouv\u00E9 correspondant \u00E0 votre recherche ou filtre (ou sans raison sociale).\r\n        </div>\r\n      )}\r\n      {/* No Results State (initial load, no tickets found at all with raison sociale) */}\r\n       {!isLoading && !error && allTickets.length === 0 && (\r\n         <div className=\"text-center text-jdc-gray-400 py-10\">\r\n           {userProfile?.secteurs && userProfile.secteurs.length > 0\r\n             ? \"Aucun ticket SAP avec une raison sociale trouv\u00E9e pour les secteurs assign\u00E9s.\"\r\n             : \"Aucun ticket SAP trouv\u00E9. V\u00E9rifiez vos secteurs assign\u00E9s ou contactez un administrateur.\"}\r\n         </div>\r\n       )}\r\n\r\n\r\n      {/* Tickets List */}\r\n      {!isLoading && !error && clientGroups.length > 0 && (\r\n        <div className=\"space-y-3\">\r\n          {clientGroups.map(([raisonSociale, clientTickets]) => (\r\n            <div key={raisonSociale} className=\"bg-jdc-card rounded-lg shadow overflow-hidden\">\r\n              <details className=\"group\" open={clientGroups.length < 5}>\r\n                <summary className=\"flex items-center justify-between p-4 cursor-pointer hover:bg-jdc-gray-800 list-none transition-colors\">\r\n                  <div className=\"flex items-center min-w-0 mr-2\">\r\n                    <FontAwesomeIcon icon={faUserTag} className=\"mr-3 text-jdc-gray-300 text-lg flex-shrink-0\" />\r\n                    <div className=\"min-w-0\">\r\n                        <span className=\"font-semibold text-white text-lg block truncate\" title={raisonSociale}>{raisonSociale}</span>\r\n                        <span className=\"ml-0 md:ml-3 text-sm text-jdc-gray-400\">\r\n                            ({clientTickets.length} ticket{clientTickets.length > 1 ? 's' : ''})\r\n                        </span>\r\n                    </div>\r\n                  </div>\r\n                  <FontAwesomeIcon\r\n                    icon={faChevronRight}\r\n                    className=\"text-jdc-gray-400 transition-transform duration-200 group-open:rotate-90 text-xl flex-shrink-0\"\r\n                  />\r\n                </summary>\r\n                <div className=\"border-t border-jdc-gray-700 bg-jdc-gray-900 p-4 space-y-3\">\r\n                  {clientTickets.sort((a, b) => {\r\n                      // Ensure date is treated as Date | Timestamp | null\r\n                      const dateA = parseFrenchDate(a.date as Date | Timestamp | null);\r\n                      const dateB = parseFrenchDate(b.date as Date | Timestamp | null);\r\n                      if (!dateB) return -1;\r\n                      if (!dateA) return 1;\r\n                      return dateB.getTime() - dateA.getTime();\r\n                    }).map((ticket) => {\r\n                    const statusStyle = getTicketStatusStyle(ticket.statut);\r\n                    const parsedDate = parseFrenchDate(ticket.date as Date | Timestamp | null);\r\n                    const displayDate = formatDateForDisplay(parsedDate);\r\n                    const phoneNumbersArray = ticket.telephone?.split(',').map((num: string) => num.trim()).filter(num => num) || [];\r\n\r\n                    return (\r\n                      <div\r\n                        key={ticket.id}\r\n                        className=\"border-b border-jdc-gray-700 pb-3 last:border-b-0 text-sm cursor-pointer hover:bg-jdc-gray-800 transition-colors duration-150 p-3 rounded\"\r\n                        onClick={() => handleTicketClick(ticket)}\r\n                        role=\"button\"\r\n                        tabIndex={0}\r\n                        onKeyDown={(e) => { if (e.key === 'Enter' || e.key === ' ') handleTicketClick(ticket); }}\r\n                      >\r\n                        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center mb-2\">\r\n                           <div className=\"flex-1 min-w-0 mb-2 md:mb-0 md:mr-4\">\r\n                              <div className=\"flex items-center mb-1\">\r\n                                <FontAwesomeIcon icon={faInfoCircle} className=\"mr-2 text-jdc-blue w-4 text-center\" />\r\n                                <span className=\"text-jdc-gray-100 font-semibold\" title={`SAP: ${ticket.numeroSAP || 'N/A'}`}>\r\n                                  {ticket.numeroSAP || 'N/A'}\r\n                                </span>\r\n                                <span className={`ml-3 inline-block px-2.5 py-0.5 rounded-full text-xs font-bold ${statusStyle.bgColor} ${statusStyle.textColor}`}>\r\n                                  {ticket.statut || 'Inconnu'}\r\n                                </span>\r\n                              </div>\r\n                              <div className=\"flex items-center text-xs text-jdc-gray-400\">\r\n                                <FontAwesomeIcon icon={faCalendarAlt} className=\"mr-2 text-jdc-gray-500 w-4 text-center\" />\r\n                                <span>{displayDate}</span>\r\n                                <span className=\"mx-2\">|</span>\r\n                                <span className=\"text-jdc-gray-500\" title={`ID: ${ticket.id}`}>\r\n                                  ID: {ticket.id.substring(0, 8)}...\r\n                                </span>\r\n                                <span className=\"mx-2\">|</span>\r\n                                <span className=\"text-jdc-gray-500\">\r\n                                  Secteur: {ticket.secteur || 'N/A'}\r\n                                </span>\r\n                              </div>\r\n                           </div>\r\n                           <div className=\"flex-shrink-0 relative\">\r\n                              {phoneNumbersArray.length > 0 && (\r\n                                <>\r\n                                  <Button\r\n                                    variant=\"secondary\"\r\n                                    size=\"sm\"\r\n                                    onClick={(e) => {\r\n                                      e.stopPropagation();\r\n                                      handleWebexCall(ticket.id, phoneNumbersArray);\r\n                                    }}\r\n                                    className=\"text-jdc-blue border-jdc-blue hover:bg-jdc-blue hover:text-white\"\r\n                                    title={phoneNumbersArray.length === 1 ? `Appeler ${phoneNumbersArray[0]}` : \"Appeler...\"}\r\n                                  >\r\n                                    <FontAwesomeIcon icon={faPhone} className=\"mr-2\" />\r\n                                    <span>Appeler</span>\r\n                                    {phoneNumbersArray.length > 1 && (\r\n                                      <FontAwesomeIcon icon={showNumberOptions[ticket.id] ? faChevronUp : faChevronDown} className=\"ml-2\" />\r\n                                    )}\r\n                                  </Button>\r\n                                  {showNumberOptions[ticket.id] && phoneNumbersArray.length > 1 && (\r\n                                    <div className=\"absolute right-0 mt-2 w-48 bg-jdc-gray-800 rounded-md shadow-lg z-10 border border-jdc-gray-700\">\r\n                                      <ul className=\"py-1\">\r\n                                        {phoneNumbersArray.map((number, index) => (\r\n                                          <li key={index}>\r\n                                            <a\r\n                                              href={`webexphone://call?uri=tel:${number}`}\r\n                                              onClick={(e) => {\r\n                                                e.stopPropagation();\r\n                                                e.preventDefault();\r\n                                                handleNumberSelection(number);\r\n                                                setShowNumberOptions(prevState => ({ ...prevState, [ticket.id]: false }));\r\n                                              }}\r\n                                              className=\"block px-4 py-2 text-sm text-jdc-gray-200 hover:bg-jdc-blue hover:text-white\"\r\n                                            >\r\n                                              {number}\r\n                                            </a>\r\n                                          </li>\r\n                                        ))}\r\n                                      </ul>\r\n                                    </div>\r\n                                  )}\r\n                                </>\r\n                              )}\r\n                           </div>\r\n                        </div>\r\n                        <div className=\"space-y-1 text-xs\">\r\n                           {ticket.deducedSalesperson && (\r\n                             <div className=\"flex items-center text-jdc-gray-400\">\r\n                               <FontAwesomeIcon icon={faUserTie} className=\"mr-2 text-jdc-gray-500 w-4 text-center\" />\r\n                               <span>{ticket.deducedSalesperson}</span>\r\n                             </div>\r\n                           )}\r\n                           {ticket.adresse && (\r\n                             <div className=\"flex items-center text-jdc-gray-400\">\r\n                               <FontAwesomeIcon icon={faMapMarkerAlt} className=\"mr-2 text-jdc-gray-500 w-4 text-center\" />\r\n                               <span className=\"truncate\" title={ticket.adresse}>{ticket.adresse}</span>\r\n                             </div>\r\n                           )}\r\n                           {ticket.description && (\r\n                             <div className=\"text-jdc-gray-300 pt-1\">\r\n                               <p className=\"line-clamp-2\" title={ticket.description}>{ticket.description}</p>\r\n                             </div>\r\n                           )}\r\n                           {ticket.demandeSAP && (\r\n                             <div className=\"text-jdc-gray-500 italic pt-1\">\r\n                                Demande SAP: ({ticket.demandeSAP.length > 40 ? ticket.demandeSAP.substring(0, 37) + '...' : ticket.demandeSAP})\r\n                             </div>\r\n                           )}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </details>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {isModalOpen && selectedTicket && (\r\n        <TicketSAPDetails\r\n          ticket={selectedTicket}\r\n          sectorId={selectedTicket.secteur}\r\n          onClose={handleCloseModal}\r\n          onTicketUpdated={handleTicketUpdated} // Keep this to trigger refresh\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n", "import React, { forwardRef } from 'react';\r\n\r\ninterface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {\r\n  label?: string;\r\n  error?: string;\r\n  icon?: React.ReactElement;\r\n  wrapperClassName?: string;\r\n}\r\n\r\nexport const Input = forwardRef<HTMLInputElement, InputProps>(\r\n  ({ label, id, name, type = 'text', error, icon, className = '', wrapperClassName = '', ...props }, ref) => {\r\n    const inputId = id || name; // Use name as fallback for id if not provided\r\n    const hasIcon = !!icon;\r\n\r\n    const baseInputStyle = \"block w-full rounded-md bg-jdc-gray-800 border-transparent focus:border-jdc-yellow focus:ring focus:ring-jdc-yellow focus:ring-opacity-50 placeholder-jdc-gray-400 text-white disabled:opacity-50 disabled:cursor-not-allowed\"; // Added disabled styles\r\n    const iconPadding = hasIcon ? \"pl-10\" : \"pl-3\"; // Adjust padding based on icon presence\r\n    const errorStyle = error ? \"border-red-500 focus:border-red-500 focus:ring-red-500\" : \"border-transparent\";\r\n\r\n    return (\r\n      <div className={`mb-4 ${wrapperClassName}`}>\r\n        {label && (\r\n          <label htmlFor={inputId} className=\"block text-sm font-medium text-jdc-gray-300 mb-1\">\r\n            {label}\r\n          </label>\r\n        )}\r\n        <div className=\"relative rounded-md shadow-sm\">\r\n          {hasIcon && (\r\n            <div className=\"pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3\">\r\n              {/* Ensure icon color changes when input is disabled */}\r\n              {React.cloneElement(icon, { className: `h-5 w-5 ${props.disabled ? 'text-jdc-gray-500' : 'text-jdc-gray-400'}` })}\r\n            </div>\r\n          )}\r\n          <input\r\n            ref={ref}\r\n            type={type}\r\n            id={inputId}\r\n            name={name}\r\n            className={`${baseInputStyle} ${iconPadding} pr-3 py-2 ${errorStyle} ${className}`}\r\n            aria-invalid={error ? 'true' : 'false'}\r\n            aria-describedby={error ? `${inputId}-error` : undefined}\r\n            {...props} // Pass disabled prop here\r\n          />\r\n        </div>\r\n        {/* Don't show validation error message if input is disabled */}\r\n        {error && !props.disabled && (\r\n          <p className=\"mt-1 text-sm text-red-500\" id={`${inputId}-error`}>\r\n            {error}\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nInput.displayName = 'Input'; // Add display name for DevTools\r\n", "import React, { useState, useEffect, useMemo, useCallback } from 'react'; // Added useCallback\r\nimport ReactDOM from 'react-dom'; // Import ReactDOM for createPortal\r\n// Use ~ alias for imports relative to the app root\r\nimport useGeminiSummary from '~/hooks/useGeminiSummary';\r\nimport { updateSAPTICKET } from '~/services/firestore.service.server'; // Already imported\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { FaSpinner } from 'react-icons/fa';\r\nimport type { SapTicket } from '~/types/firestore.types'; // Import the central type\r\nimport { Timestamp } from 'firebase/firestore'; // Import Timestamp\r\n// Import the date utility functions\r\nimport { parseFrenchDate, formatDateForDisplay } from '~/utils/dateUtils';\r\n\r\ninterface TicketSAPDetailsProps {\r\n    ticket: SapTicket | null;\r\n    onClose: () => void;\r\n    sectorId: string; // Sector ID is crucial for updating the correct document\r\n    onTicketUpdated: () => void; // Callback to refresh list after update\r\n}\r\n\r\n// Function to determine the initial status for SAP tickets\r\n// Adapt this based on actual SAP statuses\r\nconst getInitialSAPStatus = (ticket: SapTicket | null): string => {\r\n    // Use the statutSAP field from the central type\r\n    if (!ticket?.statutSAP) {\r\n        return 'Nouveau'; // Default status\r\n    }\r\n    return ticket.statutSAP;\r\n};\r\n\r\n// Define badge classes based on SAP status (adjust as needed)\r\nconst getSAPStatusBadgeClass = (status: string): string => {\r\n    switch (status?.toLowerCase()) {\r\n        case 'nouveau': return 'badge-info';\r\n        case 'en cours': return 'badge-primary';\r\n        case 'termin\u00E9': return 'badge-success'; // Corrected typo\r\n        case 'annul\u00E9': return 'badge-error';\r\n        // Add other SAP-specific statuses and their corresponding badge styles\r\n        default: return 'badge-ghost';\r\n    }\r\n};\r\n\r\n// Gemini API Key provided by the user\r\nconst GEMINI_API_KEY = \"AIzaSyAZqeCNWSWu1D4iFthrCW7sx9Ky2jlqoUg\";\r\n\r\nconst TicketSAPDetails: React.FC<TicketSAPDetailsProps> = ({ ticket, onClose, sectorId, onTicketUpdated }) => {\r\n    const [newComment, setNewComment] = useState<string>('');\r\n    const [currentStatus, setCurrentStatus] = useState<string>('');\r\n    const [isUpdatingStatus, setIsUpdatingStatus] = useState<boolean>(false);\r\n    const [statusUpdateError, setStatusUpdateError] = useState<string | null>(null);\r\n    const [commentError, setCommentError] = useState<string | null>(null);\r\n    const [updateError, setUpdateError] = useState<string | null>(null);\r\n    const [isAddingComment, setIsAddingComment] = useState<boolean>(false);\r\n\r\n    // --- AI Summary ---\r\n    // Use demandeSAP as the primary source for the AI prompt, fallback if needed (though demandeSAP seems most relevant based on structure)\r\n    const problemDescriptionForAI = ticket?.demandeSAP || ticket?.descriptionProbleme || ticket?.description || '';\r\n    const summaryPrompt = useMemo(() => {\r\n        // RESTORED CACHE CHECK: Generate prompt only if we have a description AND no cached summary exists.\r\n        // Diagnostic logs removed.\r\n        if (!problemDescriptionForAI || ticket?.summary) {\r\n             return '';\r\n        }\r\n        // Ensure the prompt is concise enough for the AI model's input limits if necessary, but demandeSAP seems okay for now.\r\n        const prompt = `R\u00E9sume ce probl\u00E8me SAP en 1 ou 2 phrases maximum, en fran\u00E7ais: ${problemDescriptionForAI}`;\r\n        return prompt;\r\n    }, [ticket?.id, problemDescriptionForAI, ticket?.summary]); // Restore ticket?.summary dependency\r\n\r\n    const {\r\n        summary: generatedSummary,\r\n        isLoading: isSummaryLoading,\r\n        error: summaryError,\r\n        generateSummary: triggerSummaryGeneration,\r\n        isCached: isSummaryCached, // Get isCached state\r\n        resetSummaryState: resetSummaryHookState // Get reset function\r\n    } = useGeminiSummary(GEMINI_API_KEY);\r\n\r\n    // --- AI Solution ---\r\n    // Use a separate instance of the hook for the solution, also using demandeSAP primarily\r\n    const solutionPrompt = useMemo(() => {\r\n        // RESTORED CACHE CHECK: Generate prompt only if we have a description AND no cached solution exists.\r\n        // Diagnostic logs removed.\r\n        if (!problemDescriptionForAI || ticket?.solution) {\r\n            return '';\r\n        }\r\n         const prompt = `Propose une solution concise (1-2 phrases), en fran\u00E7ais, pour ce probl\u00E8me SAP: ${problemDescriptionForAI}`;\r\n         return prompt;\r\n    }, [ticket?.id, problemDescriptionForAI, ticket?.solution]); // Restore ticket?.solution dependency\r\n\r\n    const {\r\n        summary: generatedSolution,\r\n        isLoading: isSolutionLoading,\r\n        error: solutionError,\r\n        generateSummary: triggerSolutionGeneration,\r\n        isCached: isSolutionCached, // Get isCached state\r\n        resetSummaryState: resetSolutionHookState // Get reset function\r\n    } = useGeminiSummary(GEMINI_API_KEY);\r\n\r\n    // --- Callbacks for Saving ---\r\n    const handleSaveSummary = useCallback(async (summaryToSave: string) => {\r\n        if (!ticket || !sectorId) return;\r\n        console.log(`[TicketSAPDetails] Calling updateSAPTICKET to save SUMMARY for ticket ${ticket.id}`);\r\n        setUpdateError(null); // Clear previous update errors\r\n        try {\r\n            await updateSAPTICKET(sectorId, ticket.id, { summary: summaryToSave });\r\n            onTicketUpdated(); // Refresh list after successful save\r\n        } catch (error: any) {\r\n            console.error(\"Error saving SAP summary via callback:\", error);\r\n            // Set specific error for summary saving failure\r\n            setUpdateError(`Erreur sauvegarde r\u00E9sum\u00E9: ${error.message}`);\r\n            // Re-throw the error so the hook knows saving failed\r\n            throw error;\r\n        }\r\n    }, [ticket, sectorId, onTicketUpdated]);\r\n\r\n    const handleSaveSolution = useCallback(async (solutionToSave: string) => {\r\n        if (!ticket || !sectorId) return;\r\n        console.log(`[TicketSAPDetails] Calling updateSAPTICKET to save SOLUTION for ticket ${ticket.id}`);\r\n        setUpdateError(null); // Clear previous update errors\r\n        try {\r\n            await updateSAPTICKET(sectorId, ticket.id, { solution: solutionToSave });\r\n            onTicketUpdated(); // Refresh list after successful save\r\n        } catch (error: any) {\r\n            console.error(\"Error saving SAP solution via callback:\", error);\r\n            // Set specific error for solution saving failure\r\n            setUpdateError(`Erreur sauvegarde solution: ${error.message}`);\r\n            // Re-throw the error so the hook knows saving failed\r\n            throw error;\r\n        }\r\n    }, [ticket, sectorId, onTicketUpdated]);\r\n\r\n\r\n    // --- Effects ---\r\n\r\n    // Initialize/Update status, reset AI hooks, and trigger AI generation\r\n    useEffect(() => {\r\n        console.log(\"[TicketSAPDetails Effect] Running for ticket:\", ticket?.id);\r\n        // Reset AI hook states when ticket changes\r\n        resetSummaryHookState();\r\n        resetSolutionHookState();\r\n\r\n        if (ticket) {\r\n            setCurrentStatus(getInitialSAPStatus(ticket));\r\n\r\n            // Trigger AI generation ONLY if the prompt is not empty\r\n            // The hook will handle the cache check internally if called.\r\n            if (summaryPrompt) {\r\n                console.log(\"[TicketSAPDetails Effect] Triggering SUMMARY generation for ticket:\", ticket.id);\r\n                triggerSummaryGeneration(ticket, summaryPrompt, handleSaveSummary);\r\n            } else {\r\n                console.log(\"[TicketSAPDetails Effect] Skipping SUMMARY generation (prompt is empty - likely cached or no description).\");\r\n                // If prompt is empty because it's cached, the hook reset should clear any previous state.\r\n                // If prompt is empty because description is empty, we don't want to generate.\r\n            }\r\n\r\n            if (solutionPrompt) {\r\n                console.log(\"[TicketSAPDetails Effect] Triggering SOLUTION generation for ticket:\", ticket.id);\r\n                triggerSolutionGeneration(ticket, solutionPrompt, handleSaveSolution);\r\n            } else {\r\n                 console.log(\"[TicketSAPDetails Effect] Skipping SOLUTION generation (prompt is empty - likely cached or no description).\");\r\n            }\r\n\r\n        } else {\r\n            console.log(\"[TicketSAPDetails Effect] No ticket, resetting status.\");\r\n            setCurrentStatus('');\r\n            // Hooks already reset above\r\n        }\r\n\r\n        // Clear local component errors when ticket changes\r\n        setStatusUpdateError(null);\r\n        setCommentError(null);\r\n        setUpdateError(null); // Clear general update errors too\r\n        setNewComment('');\r\n\r\n    // Dependencies: ticket object itself, prompts, and the generation triggers + save callbacks\r\n    // Note: Callbacks (handleSaveSummary, handleSaveSolution) have their own dependencies defined via useCallback\r\n    }, [\r\n        ticket,\r\n        summaryPrompt,\r\n        solutionPrompt,\r\n        triggerSummaryGeneration,\r\n        triggerSolutionGeneration,\r\n        handleSaveSummary,\r\n        handleSaveSolution,\r\n        resetSummaryHookState,\r\n        resetSolutionHookState\r\n    ]);\r\n\r\n\r\n    // REMOVED the separate useEffect hooks for saving summary/solution.\r\n    // This is now handled by the callbacks passed to the useGeminiSummary hook.\r\n\r\n\r\n    // --- Handlers ---\r\n\r\n    // Add a handler for the main close action to also reset AI states\r\n    const handleClose = () => {\r\n        resetSummaryHookState();\r\n        resetSolutionHookState();\r\n        onClose(); // Call the original onClose handler\r\n    };\r\n\r\n    const handleAddComment = async () => {\r\n        if (newComment.trim() && sectorId && ticket?.id) {\r\n            setIsAddingComment(true);\r\n            setCommentError(null);\r\n            const updatedComments = [newComment, ...(ticket.commentaires || [])];\r\n            try {\r\n                // Use the specific update function for SAP tickets\r\n                await updateSAPTICKET(sectorId, ticket.id, { commentaires: updatedComments });\r\n                setNewComment('');\r\n                onTicketUpdated();\r\n            } catch (error: any) {\r\n                setCommentError(`Erreur ajout commentaire SAP: ${error.message}`);\r\n            } finally {\r\n                setIsAddingComment(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleStatusChange = async () => {\r\n        // Only update if status changed and ticket exists\r\n        if (sectorId && ticket?.id && currentStatus && currentStatus !== ticket?.statutSAP) {\r\n            setIsUpdatingStatus(true);\r\n            setStatusUpdateError(null);\r\n            try {\r\n                 // Use the specific update function for SAP tickets\r\n                await updateSAPTICKET(sectorId, ticket.id, { statutSAP: currentStatus });\r\n                onTicketUpdated();\r\n            } catch (error: any) {\r\n                setStatusUpdateError(`Erreur M\u00E0J statut SAP: ${error.message}`);\r\n                // Revert optimistic update on error\r\n                setCurrentStatus(getInitialSAPStatus(ticket));\r\n            } finally {\r\n                setIsUpdatingStatus(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    if (!ticket) {\r\n        return null;\r\n    }\r\n\r\n    // Determine what to display: Prioritize direct cache from ticket prop, fallback to hook state\r\n    const displaySummary = ticket?.summary || generatedSummary;\r\n    const displaySolution = ticket?.solution || generatedSolution;\r\n\r\n    // --- Diagnostic Log ---\r\n    console.log(\"[TicketSAPDetails Render] Received Ticket Prop:\", JSON.stringify(ticket, null, 2)); // Log the whole ticket object received\r\n    console.log(\"[TicketSAPDetails Render] Calculated displaySummary:\", displaySummary);\r\n    console.log(\"[TicketSAPDetails Render] Calculated displaySolution:\", displaySolution);\r\n    // --- End Diagnostic Log ---\r\n\r\n    // --- Portal Logic ---\r\n    // Need to ensure this only runs client-side where document is available\r\n    const [isClient, setIsClient] = useState(false);\r\n    useEffect(() => {\r\n        setIsClient(true);\r\n    }, []);\r\n\r\n    // The actual modal JSX\r\n    const modalContent = (\r\n        // Outer container: Fixed position, full screen, z-index, flex center\r\n        // Add onClick={handleClose} to the outer div for click-outside-to-close behavior\r\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black bg-opacity-70\" onClick={handleClose}>\r\n            {/* Modal Content Box: Max width, relative positioning, background, text color, rounded */}\r\n            {/* Add onClick={(e) => e.stopPropagation()} to prevent closing when clicking inside */}\r\n            <div className=\"w-11/12 max-w-3xl relative bg-jdc-card text-jdc-white rounded-lg shadow-xl max-h-[90vh] overflow-y-auto p-6\" onClick={(e) => e.stopPropagation()}>\r\n                {/* Close Button: Absolute positioning top-right */}\r\n                <button\r\n                    onClick={handleClose} // Use the new close handler\r\n                    className=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2 z-10\"\r\n                    aria-label=\"Fermer\"\r\n                >\r\n                    \u2715\r\n                </button>\r\n\r\n                {/* Header */}\r\n                <h3 className=\"font-bold text-xl mb-1\">{ticket.raisonSociale || 'Client Inconnu'}</h3>\r\n                <p className=\"text-sm text-gray-400 mb-4\">Ticket SAP: {ticket.numeroSAP || 'N/A'}</p>\r\n\r\n                {/* Ticket Info Grid - Adjust fields based on SAPTicket interface */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-x-4 gap-y-2 py-4 text-sm border-t border-b border-gray-700\">\r\n                    <p><b>Code Client:</b> {ticket.codeClient || 'N/A'}</p>\r\n                    <p><b>T\u00E9l\u00E9phone:</b> {ticket.telephone || 'N/A'}</p>\r\n                    <p className=\"md:col-span-2\"><b>Adresse:</b> {ticket.adresse || 'N/A'}</p>\r\n                    {/* Use the utility functions to parse and format the date */}\r\n                    <p><b>Date Cr\u00E9ation:</b> {formatDateForDisplay(parseFrenchDate(ticket.date))}</p>\r\n                    <p><b>Secteur:</b> <span className=\"badge badge-neutral\">{ticket.secteur || 'N/A'}</span></p>\r\n                    {/* Use the 'deducedSalesperson' field */}\r\n                    {ticket.deducedSalesperson && (\r\n                        <p><b>Commercial:</b> {ticket.deducedSalesperson}</p>\r\n                    )}\r\n                </div>\r\n\r\n                {/* Status Update Section - Adapt options based on SAP statuses */}\r\n                <div className=\"my-4\">\r\n                    <label htmlFor=\"sap-ticket-status-select\" className=\"block text-sm font-medium text-gray-300 mb-1\">Statut SAP</label>\r\n                    <div className=\"flex items-center gap-2\">\r\n                        <select\r\n                            id=\"sap-ticket-status-select\"\r\n                            // Ensure dark background and light text, overriding potential defaults\r\n                            className=\"select select-bordered select-sm w-full max-w-xs bg-jdc-gray text-jdc-white\"\r\n                            value={currentStatus}\r\n                            onChange={(e) => setCurrentStatus(e.target.value)}\r\n                            disabled={isUpdatingStatus}\r\n                        >\r\n                            {/* Add text color class directly to options for better contrast in dropdown */}\r\n                            <option className=\"text-black\" value=\"Nouveau\">Nouveau</option>\r\n                            <option className=\"text-black\" value=\"En cours\">En cours</option>\r\n                            <option className=\"text-black\" value=\"En attente client\">En attente client</option>\r\n                            <option className=\"text-black\" value=\"R\u00E9solu\">R\u00E9solu</option>\r\n                            <option className=\"text-black\" value=\"Termin\u00E9\">Termin\u00E9</option>\r\n                            <option className=\"text-black\" value=\"Annul\u00E9\">Annul\u00E9</option>\r\n                        </select>\r\n                        <button\r\n                            className=\"btn btn-primary btn-sm\"\r\n                            onClick={handleStatusChange}\r\n                            disabled={isUpdatingStatus || currentStatus === ticket?.statutSAP}\r\n                        >\r\n                            {isUpdatingStatus ? <FaSpinner className=\"animate-spin\" /> : 'Mettre \u00E0 jour'}\r\n                        </button>\r\n                        <span className={`badge ${getSAPStatusBadgeClass(currentStatus)} ml-auto`}>{currentStatus}</span>\r\n                    </div>\r\n                    {statusUpdateError && <p className=\"text-error text-xs mt-1\">{statusUpdateError}</p>}\r\n                </div>\r\n                <hr className=\"my-3 border-gray-700\"/>\r\n\r\n                {/* AI Sections */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n                    {/* AI Summary */}\r\n                    <div>\r\n                        <h4 className=\"text-md font-semibold mb-1 text-blue-300\">\r\n                            R\u00E9sum\u00E9 IA {isSummaryCached && <span className=\"text-xs font-normal text-gray-400\">(cache)</span>}\r\n                        </h4>\r\n                        {isSummaryLoading && <span className=\"loading loading-dots loading-sm\"></span>}\r\n                        {/* Display error from hook OR the specific update error */}\r\n                        {(summaryError || (updateError && updateError.includes(\"r\u00E9sum\u00E9\"))) && !displaySummary && (\r\n                            <p className=\"text-error text-xs\">Erreur: {summaryError || updateError}</p>\r\n                        )}\r\n                        {displaySummary ? (\r\n                            <div className=\"prose prose-sm max-w-none text-gray-300\"><ReactMarkdown>{displaySummary}</ReactMarkdown></div>\r\n                        ) : !isSummaryLoading && !summaryError && !(updateError && updateError.includes(\"r\u00E9sum\u00E9\")) ? (\r\n                            <p className=\"text-xs text-gray-500 italic\">Aucun r\u00E9sum\u00E9.</p> // Simplified empty state\r\n                        ) : null}\r\n                        {/* Removed redundant updateError display here, handled above */}\r\n                    </div>\r\n\r\n                    {/* AI Solution */}\r\n                    <div>\r\n                         <h4 className=\"text-md font-semibold mb-1 text-green-300\">\r\n                            Solution Propos\u00E9e IA {isSolutionCached && <span className=\"text-xs font-normal text-gray-400\">(cache)</span>}\r\n                        </h4>\r\n                        {isSolutionLoading && <span className=\"loading loading-dots loading-sm\"></span>}\r\n                         {/* Display error from hook OR the specific update error */}\r\n                        {(solutionError || (updateError && updateError.includes(\"solution\"))) && !displaySolution && (\r\n                            <p className=\"text-error text-xs\">Erreur: {solutionError || updateError}</p>\r\n                        )}\r\n                        {displaySolution ? (\r\n                            <div className=\"prose prose-sm max-w-none text-gray-300\"><ReactMarkdown>{displaySolution}</ReactMarkdown></div>\r\n                        ) : !isSolutionLoading && !solutionError && !(updateError && updateError.includes(\"solution\")) ? (\r\n                             <p className=\"text-xs text-gray-500 italic\">Aucune solution.</p> // Simplified empty state\r\n                        ) : null}\r\n                         {/* Removed redundant updateError display here, handled above */}\r\n                    </div>\r\n                </div>\r\n                <hr className=\"my-3 border-gray-700\"/>\r\n\r\n                {/* Original SAP Problem Description */}\r\n                <details className=\"mb-3 text-sm\">\r\n                    <summary className=\"cursor-pointer font-medium text-gray-400 hover:text-jdc-white\">Voir la description du probl\u00E8me SAP</summary>\r\n                    <div className=\"mt-2 p-3 border border-gray-600 rounded bg-jdc-gray text-xs max-h-32 overflow-y-auto\">\r\n                        {/* Displaying demandeSAP primarily, then fallbacks */}\r\n                        <pre className=\"whitespace-pre-wrap break-words font-mono\">{ticket.demandeSAP || ticket.descriptionProbleme || ticket.description || 'N/A'}</pre>\r\n                    </div>\r\n                </details>\r\n                <hr className=\"my-3 border-gray-700\"/>\r\n\r\n                {/* Comments Section */}\r\n                <div>\r\n                    <h4 className=\"text-md font-semibold mb-2\">Commentaires</h4>\r\n                    <div className=\"max-h-40 overflow-y-auto mb-3 border border-gray-600 rounded p-3 bg-jdc-gray text-sm space-y-2\">\r\n                        {ticket.commentaires && ticket.commentaires.length > 0 ? (\r\n                            ticket.commentaires.map((commentaire: string, index: number) => (\r\n                                <p key={index} className=\"border-b border-gray-700 pb-1 mb-1\">{commentaire}</p>\r\n                            ))\r\n                        ) : (\r\n                            <p className=\"text-sm text-gray-500 italic\">Aucun commentaire.</p>\r\n                        )}\r\n                    </div>\r\n                    <textarea\r\n                        placeholder=\"Ajouter un commentaire...\"\r\n                        className=\"textarea textarea-bordered w-full text-sm bg-jdc-gray\"\r\n                        rows={2}\r\n                        value={newComment}\r\n                        onChange={(e) => setNewComment(e.target.value)}\r\n                        disabled={isAddingComment}\r\n                    ></textarea>\r\n                    <button\r\n                        className=\"btn btn-secondary btn-sm mt-2\"\r\n                        onClick={handleAddComment}\r\n                        disabled={isAddingComment || !newComment.trim()}\r\n                    >\r\n                        {isAddingComment ? <FaSpinner className=\"animate-spin\" /> : 'Ajouter Commentaire'}\r\n                    </button>\r\n                    {commentError && <p className=\"text-error text-xs mt-1\">{commentError}</p>}\r\n                </div>\r\n                {/* Removed modal-box specific padding/margins if any, handled by the container */}\r\n            </div>\r\n            {/* Click outside to close is now handled by the outer div's onClick={handleClose} */}\r\n            {/* Clicking inside the modal content box is prevented by its onClick={(e) => e.stopPropagation()} */}\r\n        </div>\r\n    );\r\n\r\n    // Render into the portal target only on the client-side\r\n    if (!isClient) {\r\n        return null; // Render nothing server-side or before hydration\r\n    }\r\n\r\n    const portalRoot = document.getElementById('modal-root');\r\n    if (!portalRoot) {\r\n        console.error(\"Modal root element #modal-root not found in the DOM.\");\r\n        return null; // Don't render if target doesn't exist\r\n    }\r\n\r\n    return ReactDOM.createPortal(modalContent, portalRoot);\r\n};\r\n\r\nexport default TicketSAPDetails;\r\n", "import { useState, useCallback, useMemo, useEffect } from 'react'; // Added useEffect\r\nimport { GoogleGenerativeAI, HarmCategory, HarmBlockThreshold } from \"@google/generative-ai\";\r\nimport type { SapTicket } from '~/types/firestore.types'; // Import SapTicket type\r\n\r\n// Define the type for the save callback function\r\ntype SaveSummaryCallback = (summary: string) => Promise<void>;\r\n\r\nconst useGeminiSummary = (apiKey: string) => {\r\n    const [summary, setSummary] = useState<string>('');\r\n    const [isLoading, setIsLoading] = useState<boolean>(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [isCached, setIsCached] = useState<boolean>(false); // Track if summary came from cache\r\n\r\n    // Initialize the Generative AI client\r\n    const genAI = useMemo(() => {\r\n        console.log(\"[useGeminiSummary] Initializing with API Key:\", apiKey ? 'Provided' : 'Missing');\r\n        if (!apiKey) {\r\n            // No need to set error here, initialization check happens before generation\r\n            return null;\r\n        }\r\n        try {\r\n            return new GoogleGenerativeAI(apiKey);\r\n        } catch (err: any) {\r\n            console.error(\"[useGeminiSummary] Error initializing GoogleGenerativeAI:\", err);\r\n            // Set error state here if initialization itself fails critically\r\n            setError(\"Erreur d'initialisation de l'API Gemini. V\u00E9rifiez la cl\u00E9 API.\");\r\n            return null; // Return null if initialization failed\r\n        }\r\n    }, [apiKey]);\r\n\r\n    // Reset state when hook is potentially reused with different context\r\n    const resetSummaryState = useCallback(() => {\r\n        setSummary('');\r\n        setIsLoading(false);\r\n        setError(null);\r\n        setIsCached(false);\r\n    }, []);\r\n\r\n\r\n    const generateSummary = useCallback(async (\r\n        ticket: SapTicket | null,\r\n        prompt: string,\r\n        saveSummaryCallback: SaveSummaryCallback\r\n    ) => {\r\n        console.log(\"[useGeminiSummary] generateSummary called for ticket:\", ticket?.id);\r\n        setIsLoading(true); // Set loading true initially\r\n        setError(null);\r\n        // DO NOT clear summary here yet. Clear it only if cache check fails.\r\n        setIsCached(false); // Reset cache flag initially\r\n\r\n        if (!ticket) {\r\n            console.warn(\"[useGeminiSummary] No ticket provided.\");\r\n            setError(\"Ticket non fourni.\");\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n\r\n        // --- Cache Check ---\r\n        if (ticket.summary && typeof ticket.summary === 'string' && ticket.summary.trim() !== '') {\r\n            console.log(`[useGeminiSummary] Cache hit for ticket ${ticket.id}. Using existing summary.`);\r\n            setSummary(ticket.summary);\r\n            setIsCached(true);\r\n            setIsLoading(false);\r\n            setError(null);\r\n            console.log(`[useGeminiSummary] Cache check successful for ticket ${ticket.id}. State set from cache.`);\r\n            return; // Stop here, use cached summary\r\n        }\r\n        // --- End Cache Check ---\r\n\r\n        // If we reach here, cache check failed (or summary was empty/invalid)\r\n        console.log(\"[useGeminiSummary] Cache miss or summary empty. Proceeding towards API call.\");\r\n        setSummary(''); // NOW clear the summary state before potential generation\r\n\r\n        if (!prompt) {\r\n            console.log(\"[useGeminiSummary] No prompt provided, skipping generation.\");\r\n            // setSummary(''); // Already cleared\r\n            setError(\"Prompt vide fourni pour la g\u00E9n\u00E9ration.\"); // Set specific error\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n\r\n        if (!apiKey) {\r\n             console.error(\"[useGeminiSummary] Missing API Key.\");\r\n             setError(\"Cl\u00E9 API Gemini manquante.\");\r\n             setIsLoading(false);\r\n             return;\r\n        }\r\n\r\n        if (!genAI) {\r\n            console.error(\"[useGeminiSummary] genAI client not initialized. Cannot generate.\");\r\n            setError(\"Client API Gemini non initialis\u00E9. V\u00E9rifiez la cl\u00E9 API.\");\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n\r\n        console.log(\"[useGeminiSummary] Generating with prompt:\", prompt);\r\n\r\n        try {\r\n            // Use the specified experimental model\r\n            const model = genAI.getGenerativeModel({ model: \"gemini-2.0-flash-thinking-exp-01-21\" });\r\n\r\n            // Configuration remains the same\r\n             const generationConfig = {\r\n                 temperature: 0.9,\r\n                 topK: 1,\r\n                 topP: 1,\r\n                 maxOutputTokens: 2048,\r\n             };\r\n             const safetySettings = [\r\n                 { category: HarmCategory.HARM_CATEGORY_HARASSMENT, threshold: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE },\r\n                 { category: HarmCategory.HARM_CATEGORY_HATE_SPEECH, threshold: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE },\r\n                 { category: HarmCategory.HARM_CATEGORY_SEXUALLY_EXPLICIT, threshold: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE },\r\n                 { category: HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT, threshold: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE },\r\n             ];\r\n\r\n            const result = await model.generateContent({\r\n                contents: [{ role: \"user\", parts: [{ text: prompt }] }],\r\n                generationConfig,\r\n                safetySettings,\r\n            });\r\n\r\n            const response = result.response;\r\n            console.log(\"[useGeminiSummary] Raw API Response:\", response);\r\n\r\n            if (response?.candidates?.[0]?.content?.parts?.[0]?.text) {\r\n                 const generatedText = response.candidates[0].content.parts[0].text;\r\n                 console.log(\"[useGeminiSummary] Generated text:\", generatedText);\r\n                 setSummary(generatedText);\r\n                 setIsCached(false); // Explicitly mark as not cached\r\n\r\n                 // --- Save the generated summary ---\r\n                 try {\r\n                     console.log(`[useGeminiSummary] Attempting to save generated summary for ticket ${ticket.id}...`);\r\n                     await saveSummaryCallback(generatedText);\r\n                     console.log(`[useGeminiSummary] Successfully saved summary for ticket ${ticket.id}.`);\r\n                 } catch (saveError: any) {\r\n                     console.error(`[useGeminiSummary] Failed to save summary for ticket ${ticket.id}:`, saveError);\r\n                     // Set a specific error related to saving, but keep the generated summary displayed\r\n                     setError(`R\u00E9sum\u00E9 g\u00E9n\u00E9r\u00E9 mais \u00E9chec de la sauvegarde: ${saveError.message || 'Erreur inconnue'}`);\r\n                 }\r\n                 // --- End Save ---\r\n\r\n            } else {\r\n                 const blockReason = response?.promptFeedback?.blockReason;\r\n                 const finishReason = response?.candidates?.[0]?.finishReason;\r\n                 console.warn(`[useGeminiSummary] Gemini response issue. Block Reason: ${blockReason}, Finish Reason: ${finishReason}`);\r\n                 setError(blockReason ? `G\u00E9n\u00E9ration bloqu\u00E9e: ${blockReason}` : (finishReason ? `G\u00E9n\u00E9ration termin\u00E9e avec raison: ${finishReason}` : \"Aucune r\u00E9ponse textuelle re\u00E7ue de l'IA.\"));\r\n                 setSummary(''); // Clear summary on generation failure\r\n            }\r\n\r\n        } catch (err: any) {\r\n            console.error(\"[useGeminiSummary] Error generating summary with Gemini:\", err);\r\n             if (err.message?.includes('API key not valid')) {\r\n                 setError(\"Cl\u00E9 API Gemini invalide ou expir\u00E9e.\");\r\n             } else if (err.message?.includes('SAFETY')) {\r\n                 setError(\"La g\u00E9n\u00E9ration a \u00E9t\u00E9 bloqu\u00E9e pour des raisons de s\u00E9curit\u00E9.\");\r\n             } else if (err.message?.includes('quota')) {\r\n                 setError(\"Quota d'API Gemini d\u00E9pass\u00E9.\");\r\n             } else {\r\n                setError(`Erreur de g\u00E9n\u00E9ration: ${err.message || \"Une erreur inconnue est survenue.\"}`);\r\n            }\r\n            setSummary(''); // Ensure summary is cleared on error\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    // Removed saveSummaryCallback from the dependency array as it's a parameter, not a dependency from the outer scope.\r\n    // The stability of the callback is the responsibility of the calling component.\r\n    }, [genAI, apiKey]);\r\n\r\n        // Let's stick with the original dependency array for generateSummary for now.\r\n        // The parent component needs to ensure the callback is stable if needed.\r\n        // The extra closing brace and dependency array below were removed.\r\n\r\n\r\n        return { summary, isLoading, error, generateSummary, isCached, resetSummaryState };\r\n};\r\n\r\nexport default useGeminiSummary;\r\n", "// Existing styles for shipment status\r\nconst shipmentStatusStyles = {\r\n  OUI: { bgColor: 'bg-green-700', textColor: 'text-green-100' },\r\n  NON: { bgColor: 'bg-red-700', textColor: 'text-red-100' },\r\n  DEFAULT: { bgColor: 'bg-jdc-gray-700', textColor: 'text-jdc-gray-200' },\r\n};\r\n\r\nexport function getShipmentStatusStyle(status: string | undefined | null): { bgColor: string; textColor: string } {\r\n  const upperStatus = status?.toUpperCase();\r\n  if (upperStatus === 'OUI') {\r\n    return shipmentStatusStyles.OUI;\r\n  }\r\n  if (upperStatus === 'NON') {\r\n    return shipmentStatusStyles.NON;\r\n  }\r\n  return shipmentStatusStyles.DEFAULT;\r\n}\r\n\r\n// --- Add styles for ticket status ---\r\n// Define styles based on potential ticket status values. Adjust these as needed.\r\nconst ticketStatusStyles = {\r\n  NOUVEAU: { bgColor: 'bg-blue-600', textColor: 'text-blue-100' },\r\n  EN_COURS: { bgColor: 'bg-yellow-600', textColor: 'text-yellow-100' },\r\n  RESOLU: { bgColor: 'bg-green-600', textColor: 'text-green-100' },\r\n  FERME: { bgColor: 'bg-gray-600', textColor: 'text-gray-100' },\r\n  ANNULE: { bgColor: 'bg-red-600', textColor: 'text-red-100' },\r\n  EN_ATTENTE: { bgColor: 'bg-purple-600', textColor: 'text-purple-100' },\r\n  DEMANDE_DE_RMA: { bgColor: 'bg-purple-700', textColor: 'text-purple-100' }, // Added style for RMA\r\n  A_CLOTUREE: { bgColor: 'bg-teal-600', textColor: 'text-teal-100' }, // Added style for A Cloturee\r\n  DEFAULT: { bgColor: 'bg-jdc-gray-700', textColor: 'text-jdc-gray-200' },\r\n};\r\n\r\n/**\r\n * Returns Tailwind CSS classes for styling a ticket status badge.\r\n * @param status The status string of the ticket.\r\n * @returns Object containing bgColor and textColor classes.\r\n */\r\nexport function getTicketStatusStyle(status: string | undefined | null): { bgColor: string; textColor: string } {\r\n  const upperStatus = status?.toUpperCase().replace(/\\s+/g, '_'); // Normalize status (e.g., \"En Cours\" -> \"EN_COURS\")\r\n\r\n  switch (upperStatus) {\r\n    case 'NOUVEAU':\r\n    case 'OUVERT': // Add synonyms if needed\r\n      return ticketStatusStyles.NOUVEAU;\r\n    case 'EN_COURS':\r\n    case 'EN_TRAITEMENT':\r\n      return ticketStatusStyles.EN_COURS;\r\n    case 'RESOLU':\r\n    case 'TERMINE':\r\n      return ticketStatusStyles.RESOLU;\r\n    case 'FERME':\r\n    case 'CLOTURE':\r\n      return ticketStatusStyles.FERME;\r\n    case 'ANNULE':\r\n      return ticketStatusStyles.ANNULE;\r\n    case 'EN_ATTENTE':\r\n    case 'ATTENTE_CLIENT':\r\n      return ticketStatusStyles.EN_ATTENTE;\r\n    case 'DEMANDE_DE_RMA': // Added case\r\n      return ticketStatusStyles.DEMANDE_DE_RMA;\r\n    case 'A_CLOTUREE': // Added case\r\n      return ticketStatusStyles.A_CLOTUREE;\r\n    default:\r\n      // Log unknown statuses for potential addition\r\n      if (status) {\r\n        console.warn(`Unknown ticket status encountered: \"${status}\". Using default style.`);\r\n      }\r\n      return ticketStatusStyles.DEFAULT;\r\n  }\r\n}\r\n", "import { json, type LoaderFunctionArgs } from \"@remix-run/node\";\r\n\r\n// Simple health check endpoint\r\nexport const loader = async ({ request }: LoaderFunctionArgs) => {\r\n  console.log(`API Health Check Request: ${request.url}`);\r\n  return json({ status: \"ok\" }, 200);\r\n};\r\n\r\n// Optional: Handle POST or other methods if needed, otherwise they'll 405\r\n// export const action = async ({ request }: ActionFunctionArgs) => {\r\n//   return json({ message: \"Method Not Allowed\" }, 405);\r\n// };\r\n", "import type { MetaFunction } from \"@remix-run/node\";\r\nimport { useState, useEffect, useMemo, useCallback } from \"react\";\r\nimport { useOutletContext, useSearchParams } from \"@remix-run/react\"; // Import useSearchParams\r\nimport { getAllShipments, getUserProfileSdk, deleteShipmentSdk } from \"~/services/firestore.service.server\";\r\nimport type { Shipment, UserProfile, AppUser } from \"~/types/firestore.types\";\r\nimport { Input } from \"~/components/ui/Input\";\r\nimport { Button } from \"~/components/ui/Button\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTruckFast, faFilter, faSearch, faBuilding, faChevronDown, faChevronRight, faExternalLinkAlt, faSpinner, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { getShipmentStatusStyle } from \"~/utils/styleUtils\";\r\nimport { useToast } from \"~/context/ToastContext\";\r\n\r\nexport const meta: MetaFunction = () => {\r\n  return [{ title: \"Envois CTN | JDC Dashboard\" }];\r\n};\r\n\r\ntype OutletContextType = {\r\n  user: AppUser | null;\r\n};\r\n\r\nconst groupShipmentsByClient = (shipments: Shipment[]): Map<string, Shipment[]> => {\r\n  const grouped = new Map<string, Shipment[]>();\r\n   if (!Array.isArray(shipments)) {\r\n     return grouped;\r\n   }\r\n  shipments.forEach(shipment => {\r\n    const clientName = shipment.nomClient || 'Client Inconnu';\r\n    const existing = grouped.get(clientName);\r\n    if (existing) {\r\n      existing.push(shipment);\r\n    } else {\r\n      grouped.set(clientName, [shipment]);\r\n    }\r\n  });\r\n  return grouped;\r\n};\r\n\r\nexport default function EnvoisCtn() {\r\n  const { user } = useOutletContext<OutletContextType>();\r\n  const { addToast } = useToast();\r\n  const [userProfile, setUserProfile] = useState<UserProfile | null>(null);\r\n  const [allShipments, setAllShipments] = useState<Shipment[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [deletingGroup, setDeletingGroup] = useState<string | null>(null);\r\n\r\n  const [selectedSector, setSelectedSector] = useState<string>('');\r\n  // Initialize searchTerm from URL parameter if present\r\n  const [searchParams] = useSearchParams();\r\n  const initialSearchTerm = searchParams.get('client') || '';\r\n  const [searchTerm, setSearchTerm] = useState<string>(initialSearchTerm);\r\n\r\n  useEffect(() => {\r\n    // Update searchTerm if the URL parameter changes after initial load\r\n    const clientParam = searchParams.get('client');\r\n    if (clientParam && clientParam !== searchTerm) {\r\n      setSearchTerm(clientParam);\r\n    }\r\n    // We don't necessarily want to re-trigger data fetching on param change,\r\n    // just update the filter state. So, searchParams is not in the dependency array below.\r\n  }, [searchParams, searchTerm]); // Add searchTerm to dependencies to avoid infinite loop if param exists\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (!user) {\r\n        setIsLoading(false);\r\n        setAllShipments([]); // Clear shipments if user logs out\r\n        setUserProfile(null); // Clear profile\r\n        return;\r\n      }\r\n      setIsLoading(true);\r\n      setError(null);\r\n      try {\r\n        const profile = await getUserProfileSdk(user.uid);\r\n        setUserProfile(profile);\r\n\r\n        if (!profile) {\r\n           setAllShipments([]);\r\n           throw new Error(\"Profil utilisateur introuvable.\");\r\n        }\r\n\r\n        const shipments = await getAllShipments(profile);\r\n        setAllShipments(shipments);\r\n\r\n      } catch (err: any) {\r\n        console.error(\"Error fetching data for Envois CTN:\", err);\r\n        const errorMessage = err instanceof Error ? err.message : String(err);\r\n        setError(`Erreur de chargement des donn\u00E9es: ${errorMessage}`);\r\n        setAllShipments([]);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [user]); // Re-fetch when user changes\r\n\r\n  const filteredAndGroupedShipments = useMemo(() => {\r\n    let filtered = allShipments;\r\n    const isAdmin = userProfile?.role === 'Admin';\r\n\r\n    // Filter by Sector (Admins see all unless a sector is explicitly selected)\r\n    if (selectedSector && selectedSector !== '') {\r\n       filtered = filtered.filter(s => s.secteur === selectedSector);\r\n    }\r\n\r\n    // Filter by Search Term\r\n    if (searchTerm.trim() !== '') {\r\n      const lowerSearchTerm = searchTerm.trim().toLowerCase();\r\n      filtered = filtered.filter(s =>\r\n        (s.nomClient && s.nomClient.toLowerCase().includes(lowerSearchTerm)) ||\r\n        (s.codeClient && s.codeClient.toLowerCase().includes(lowerSearchTerm)) ||\r\n        (s.id && s.id.toLowerCase().includes(lowerSearchTerm)) ||\r\n        (s.articleNom && s.articleNom.toLowerCase().includes(lowerSearchTerm))\r\n      );\r\n    }\r\n\r\n    return groupShipmentsByClient(filtered);\r\n  }, [allShipments, selectedSector, searchTerm, userProfile]);\r\n\r\n  const clientGroups = useMemo(() => {\r\n      const sortedEntries = Array.from(filteredAndGroupedShipments.entries())\r\n                                .sort((a, b) => a[0].localeCompare(b[0]));\r\n      return sortedEntries;\r\n  }, [filteredAndGroupedShipments]);\r\n\r\n  const availableSectors = useMemo(() => {\r\n     const uniqueSectors = new Set(allShipments.map(s => s.secteur).filter(Boolean));\r\n     return Array.from(uniqueSectors).sort();\r\n  }, [allShipments]);\r\n\r\n  // --- Delete Group Handler ---\r\n  const handleDeleteGroup = useCallback(async (clientName: string, shipmentsToDelete: Shipment[]) => {\r\n    if (!shipmentsToDelete || shipmentsToDelete.length === 0) return;\r\n\r\n    const shipmentCount = shipmentsToDelete.length;\r\n    const confirmation = window.confirm(`\u00CAtes-vous s\u00FBr de vouloir supprimer les ${shipmentCount} envoi${shipmentCount > 1 ? 's' : ''} pour le client \"${clientName}\" ? Cette action est irr\u00E9versible.`);\r\n\r\n    if (confirmation) {\r\n      setDeletingGroup(clientName);\r\n      const shipmentIdsToDelete = shipmentsToDelete.map(s => s.id);\r\n      const deletePromises = shipmentIdsToDelete.map(id => deleteShipmentSdk(id));\r\n\r\n      try {\r\n        const results = await Promise.allSettled(deletePromises);\r\n\r\n        const successfulDeletes = results.filter(r => r.status === 'fulfilled').length;\r\n        const failedDeletes = results.filter(r => r.status === 'rejected').length;\r\n\r\n        if (failedDeletes > 0) {\r\n          console.error(`Failed to delete ${failedDeletes} shipments for client ${clientName}.`);\r\n          // Extract specific error messages if needed\r\n          const errorMessages = results\r\n            .filter((r): r is PromiseRejectedResult => r.status === 'rejected')\r\n            .map(r => r.reason instanceof Error ? r.reason.message : String(r.reason))\r\n            .join(', ');\r\n          addToast({ type: 'error', message: `Erreur lors de la suppression de ${failedDeletes} envoi${failedDeletes > 1 ? 's' : ''} pour ${clientName}. D\u00E9tails: ${errorMessages}` });\r\n        }\r\n\r\n        if (successfulDeletes > 0) {\r\n           setAllShipments(prevShipments => prevShipments.filter(s => !shipmentIdsToDelete.includes(s.id)));\r\n           addToast({ type: 'success', message: `${successfulDeletes} envoi${successfulDeletes > 1 ? 's' : ''} pour ${clientName} supprim\u00E9${successfulDeletes > 1 ? 's' : ''} avec succ\u00E8s.` });\r\n        }\r\n\r\n      } catch (error: any) {\r\n        // This catch is less likely with allSettled, but good for safety\r\n        console.error(\"Unexpected error during group deletion:\", error);\r\n        // Ensure a valid message is passed here\r\n        const errorMessage = error instanceof Error ? error.message : String(error);\r\n        addToast({ type: 'error', message: `Erreur inattendue lors de la suppression du groupe: ${errorMessage}` });\r\n      } finally {\r\n        setDeletingGroup(null);\r\n      }\r\n    }\r\n  }, [addToast]);\r\n\r\n  const isAdmin = userProfile?.role === 'Admin';\r\n\r\n  if (!user && !isLoading) {\r\n     return (\r\n        <div className=\"text-center text-jdc-gray-400 py-10\">\r\n            Veuillez vous connecter pour voir les envois.\r\n        </div>\r\n     )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-2xl font-semibold text-white mb-4 flex items-center\">\r\n        <FontAwesomeIcon icon={faTruckFast} className=\"mr-3 text-jdc-yellow\" />\r\n        Suivi des Envois CTN\r\n      </h1>\r\n\r\n      {/* Filter and Search Controls */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6 p-4 bg-jdc-card rounded-lg shadow\">\r\n        {/* Sector Filter */}\r\n        <div className=\"col-span-1\">\r\n          <label htmlFor=\"sector-filter\" className=\"block text-sm font-medium text-jdc-gray-300 mb-1\">\r\n            <FontAwesomeIcon icon={faFilter} className=\"mr-1\" /> Filtrer par Secteur\r\n          </label>\r\n          <select\r\n            id=\"sector-filter\"\r\n            name=\"sector-filter\"\r\n            value={selectedSector}\r\n            onChange={(e) => setSelectedSector(e.target.value)}\r\n            className=\"block w-full rounded-md bg-jdc-gray-800 border-transparent focus:border-jdc-yellow focus:ring focus:ring-jdc-yellow focus:ring-opacity-50 text-white py-2 pl-3 pr-10\"\r\n            disabled={isLoading || availableSectors.length === 0}\r\n          >\r\n            <option value=\"\">Tous les secteurs</option>\r\n            {availableSectors.map(sector => (\r\n              <option key={sector} value={sector}>{sector}</option>\r\n            ))}\r\n          </select>\r\n           {availableSectors.length === 0 && !isLoading && allShipments.length > 0 && (\r\n             <p className=\"text-xs text-jdc-gray-500 mt-1\">Aucun secteur trouv\u00E9 dans les envois affich\u00E9s.</p>\r\n           )}\r\n           {availableSectors.length === 0 && !isLoading && allShipments.length === 0 && !error && (\r\n             <p className=\"text-xs text-jdc-gray-500 mt-1\">Aucun envoi accessible trouv\u00E9.</p>\r\n           )}\r\n        </div>\r\n\r\n        {/* Search Input */}\r\n        <div className=\"col-span-1 md:col-span-2\">\r\n           <Input\r\n             label=\"Rechercher (Client, ID, Article...)\"\r\n             id=\"search-client\"\r\n             name=\"search-client\"\r\n             placeholder=\"Entrez un nom, code, ID, article...\"\r\n             value={searchTerm}\r\n             onChange={(e) => setSearchTerm(e.target.value)}\r\n             icon={<FontAwesomeIcon icon={faSearch} />}\r\n             wrapperClassName=\"mb-0\"\r\n             disabled={isLoading}\r\n           />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Loading State */}\r\n      {isLoading && (\r\n        <div className=\"text-center text-jdc-gray-400 py-10\">\r\n          <FontAwesomeIcon icon={faSpinner} spin className=\"text-2xl mr-2\" />\r\n          Chargement des envois...\r\n        </div>\r\n      )}\r\n\r\n      {/* Error State */}\r\n      {error && !isLoading && (\r\n        <div className=\"text-center text-red-400 bg-red-900 bg-opacity-50 p-4 rounded-lg\">{error}</div>\r\n      )}\r\n\r\n      {/* No Results State */}\r\n      {!isLoading && !error && clientGroups.length === 0 && (\r\n        <div className=\"text-center text-jdc-gray-400 py-10\">\r\n          {allShipments.length > 0\r\n            ? \"Aucun envoi trouv\u00E9 correspondant \u00E0 votre recherche ou filtre.\"\r\n            : \"Aucun envoi accessible trouv\u00E9 pour votre compte. V\u00E9rifiez vos secteurs assign\u00E9s si vous n'\u00EAtes pas Admin.\"}\r\n        </div>\r\n      )}\r\n\r\n\r\n      {/* Shipments List */}\r\n      {!isLoading && !error && clientGroups.length > 0 && (\r\n        <div className=\"space-y-3\">\r\n          {clientGroups.map(([clientName, clientShipments]) => (\r\n            <div key={clientName} className=\"bg-jdc-card rounded-lg shadow overflow-hidden\">\r\n              <details className=\"group\">\r\n                <summary className=\"flex items-center justify-between p-4 cursor-pointer hover:bg-jdc-gray-800 list-none transition-colors gap-4\">\r\n                  <div className=\"flex items-center min-w-0 mr-2 flex-grow\">\r\n                    <FontAwesomeIcon icon={faBuilding} className=\"mr-3 text-jdc-gray-300 text-lg flex-shrink-0\" />\r\n                    <div className=\"min-w-0\">\r\n                        <span className=\"font-semibold text-white text-lg block truncate\" title={clientName}>{clientName}</span>\r\n                        <span className=\"ml-0 md:ml-3 text-sm text-jdc-gray-400\">\r\n                            ({clientShipments.length} envoi{clientShipments.length > 1 ? 's' : ''})\r\n                        </span>\r\n                         {clientShipments[0]?.codeClient && clientShipments[0].codeClient !== clientName && (\r\n                            <span className=\"block text-xs text-jdc-gray-500 truncate\" title={`Code: ${clientShipments[0].codeClient}`}>Code: {clientShipments[0].codeClient}</span>\r\n                         )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center flex-shrink-0 space-x-3\">\r\n                    {isAdmin && (\r\n                        <Button\r\n                            variant=\"danger\"\r\n                            size=\"sm\"\r\n                            title={`Supprimer tous les envois pour ${clientName}`}\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                                handleDeleteGroup(clientName, clientShipments);\r\n                            }}\r\n                            isLoading={deletingGroup === clientName}\r\n                            disabled={deletingGroup !== null && deletingGroup !== clientName}\r\n                            leftIcon={<FontAwesomeIcon icon={faTrash} />}\r\n                            className=\"flex-shrink-0\"\r\n                        >\r\n                            Suppr. Groupe\r\n                        </Button>\r\n                    )}\r\n                    <FontAwesomeIcon\r\n                      icon={faChevronRight}\r\n                      className=\"text-jdc-gray-400 transition-transform duration-200 group-open:rotate-90 text-xl flex-shrink-0\"\r\n                    />\r\n                  </div>\r\n                </summary>\r\n\r\n                <div className=\"border-t border-jdc-gray-700 bg-jdc-gray-900 p-4 space-y-3\">\r\n                  {clientShipments.map((shipment) => {\r\n                    const statusStyle = getShipmentStatusStyle(shipment.statutExpedition);\r\n                    const truncatedArticle = shipment.articleNom && shipment.articleNom.length > 50\r\n                      ? `${shipment.articleNom.substring(0, 47)}...`\r\n                      : shipment.articleNom;\r\n\r\n                    return (\r\n                      <div key={shipment.id} className=\"flex items-center justify-between text-sm border-b border-jdc-gray-700 pb-2 last:border-b-0 gap-2\">\r\n                        <div className=\"flex-1 min-w-0 mr-1\">\r\n                          <span className=\"text-jdc-gray-200 block font-medium truncate\" title={shipment.articleNom}>\r\n                            {truncatedArticle || 'Article non sp\u00E9cifi\u00E9'}\r\n                          </span>\r\n                          <div className=\"flex items-center flex-wrap mt-1 space-x-2\">\r\n                              <span className={`inline-block px-2.5 py-0.5 rounded-full text-xs font-bold ${statusStyle.bgColor} ${statusStyle.textColor}`}>\r\n                                {shipment.statutExpedition || 'Inconnu'}\r\n                              </span>\r\n                              <span className=\"text-jdc-gray-500 text-xs whitespace-nowrap\" title={`ID: ${shipment.id}`}>\r\n                                ID: {shipment.id.substring(0, 8)}...\r\n                              </span>\r\n                               <span className=\"text-jdc-gray-500 text-xs whitespace-nowrap\">\r\n                                 Secteur: {shipment.secteur || 'N/A'}\r\n                               </span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"flex items-center flex-shrink-0 space-x-2\">\r\n                            {shipment.trackingLink && (\r\n                              <Button\r\n                                as=\"link\"\r\n                                to={shipment.trackingLink}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                                variant=\"secondary\"\r\n                                size=\"sm\"\r\n                                title=\"Suivre le colis\"\r\n                                leftIcon={<FontAwesomeIcon icon={faExternalLinkAlt} />}\r\n                              >\r\n                                Suivi\r\n                              </Button>\r\n                            )}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </details>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n", "import type { MetaFunction, LoaderFunctionArgs } from \"@remix-run/node\"; // Import LoaderFunctionArgs\r\nimport { json, redirect } from \"@remix-run/node\"; // Import redirect\r\nimport { useOutletContext, useLoaderData } from \"@remix-run/react\"; // Import useLoaderData\r\nimport React, { useState, useEffect, lazy, Suspense } from \"react\";\r\nimport { authenticator } from \"~/services/auth.server\"; // Import authenticator\r\nimport { getGoogleAuthClient, getCalendarEvents } from \"~/services/google.server\"; // Import Google helpers\r\nimport { getWeekDateRangeForAgenda } from \"~/utils/dateUtils\"; // Import date helper\r\n\r\nimport { StatsCard } from \"~/components/StatsCard\";\r\nconst InteractiveMap = lazy(() => import(\"~/components/InteractiveMap\"));\r\nimport { RecentTickets } from \"~/components/RecentTickets\";\r\nimport { RecentShipments } from \"~/components/RecentShipments\";\r\nimport { ClientOnly } from \"~/components/ClientOnly\"; // Import ClientOnly\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTicket, faUsers, faMapMarkedAlt, faSpinner, faExclamationTriangle, faMap, faCalendarDays } from \"@fortawesome/free-solid-svg-icons\"; // Added faCalendarDays\r\n\r\n// Import types\r\n// Removed DashboardLoaderData as we define loader return type inline\r\nimport type { SapTicket, Shipment, AppUser, StatsSnapshot, UserProfile } from \"~/types/firestore.types\";\r\nimport type { UserSession } from \"~/services/session.server\"; // Import UserSession\r\n\r\n// Import Firestore service functions (still used for client-side fetching)\r\nimport {\r\n  getUserProfileSdk, // Still needed for client-side fetching in useEffect\r\n  getRecentTicketsForSectors,\r\n  getRecentShipmentsForSectors,\r\n  getTotalTicketCountSdk,\r\n  getDistinctClientCountFromEnvoiSdk,\r\n  getLatestStatsSnapshotsSdk,\r\n} from \"~/services/firestore.service.server\";\r\n\r\n\r\nexport const meta: MetaFunction = () => {\r\n  return [{ title: \"Tableau de Bord | JDC Dashboard\" }];\r\n};\r\n\r\n// Define type for Calendar Event (simplified)\r\ninterface CalendarEvent {\r\n    id: string;\r\n    summary?: string | null;\r\n    start?: { dateTime?: string | null; date?: string | null } | null;\r\n    end?: { dateTime?: string | null; date?: string | null } | null;\r\n    htmlLink?: string | null;\r\n}\r\n\r\n// Define loader return type\r\ninterface DashboardLoaderData {\r\n    calendarEvents: CalendarEvent[];\r\n    calendarError: string | null;\r\n    // Add other server-loaded data here if needed in the future\r\n}\r\n\r\nexport const loader = async ({ request }: LoaderFunctionArgs) => {\r\n  console.log(\"Dashboard Loader: Executing...\");\r\n  const session = await authenticator.isAuthenticated(request);\r\n  let calendarEvents: CalendarEvent[] = [];\r\n  let calendarError: string | null = null;\r\n\r\n  if (session) {\r\n    console.log(\"Dashboard Loader: User authenticated, attempting to fetch calendar events.\");\r\n    try {\r\n      const authClient = await getGoogleAuthClient(session);\r\n      const { startOfWeek, endOfWeek } = getWeekDateRangeForAgenda();\r\n\r\n      const timeMin = startOfWeek.toISOString();\r\n      const timeMax = endOfWeek.toISOString();\r\n\r\n      // Fetch events from Google Calendar API\r\n      const rawEvents = await getCalendarEvents(authClient, timeMin, timeMax);\r\n      // Map to our simplified CalendarEvent type\r\n      calendarEvents = rawEvents.map((event: any) => ({\r\n          id: event.id,\r\n          summary: event.summary,\r\n          start: event.start,\r\n          end: event.end,\r\n          htmlLink: event.htmlLink,\r\n      }));\r\n      console.log(`Dashboard Loader: Fetched ${calendarEvents.length} calendar events.`);\r\n\r\n    } catch (error: any) {\r\n      console.error(\"Dashboard Loader: Error fetching calendar events:\", error);\r\n      calendarError = error.message || \"Erreur lors de la r\u00E9cup\u00E9ration de l'agenda.\";\r\n      if (error.message.includes(\"token\") || error.message.includes(\"authenticate\")) {\r\n         calendarError = \"Erreur d'authentification Google Calendar. Veuillez vous reconnecter.\";\r\n      }\r\n       if (error.message.includes(\"Permission denied\")) {\r\n         calendarError = \"Acc\u00E8s \u00E0 Google Calendar refus\u00E9. V\u00E9rifiez les autorisations.\";\r\n       }\r\n       // If quota exceeded, inform the user\r\n       if (error.message.includes(\"Quota exceeded\") || error.message.includes(\"RESOURCE_EXHAUSTED\")) {\r\n           calendarError = \"Quota Google Calendar d\u00E9pass\u00E9.\";\r\n       }\r\n    }\r\n  } else {\r\n      console.log(\"Dashboard Loader: User not authenticated.\");\r\n      // Optionally set an error if calendar requires auth\r\n      // calendarError = \"Veuillez vous connecter pour voir l'agenda.\";\r\n  }\r\n\r\n  return json<DashboardLoaderData>({ calendarEvents, calendarError });\r\n};\r\n\r\n// Update Outlet context type to use UserSession from root loader\r\ntype OutletContextType = {\r\n    user: UserSession | null;\r\n    profile: UserProfile | null; // Profile fetched client-side in root\r\n    profileLoading: boolean;\r\n};\r\n\r\ntype EvolutionData = {\r\n  ticketCount: number | null;\r\n  distinctClientCountFromEnvoi: number | null;\r\n};\r\n\r\n// --- Placeholder Components ---\r\nconst MapLoadingFallback = () => (\r\n  <div className=\"bg-jdc-card p-4 rounded-lg shadow-lg flex flex-col items-center justify-center min-h-[450px]\">\r\n    <FontAwesomeIcon icon={faSpinner} spin className=\"text-jdc-yellow text-3xl mb-4\" />\r\n    <p className=\"text-jdc-gray-400 text-center\">Chargement de la carte...</p>\r\n  </div>\r\n);\r\n\r\nconst MapLoginPrompt = () => (\r\n   <div className=\"bg-jdc-card p-4 rounded-lg shadow-lg flex flex-col items-center justify-center min-h-[450px]\">\r\n        <FontAwesomeIcon icon={faMapMarkedAlt} className=\"text-jdc-gray-500 text-4xl mb-4\" />\r\n        <p className=\"text-jdc-gray-400 text-center\">Connectez-vous pour voir la carte des tickets.</p>\r\n   </div>\r\n);\r\n\r\n// Placeholder for WeeklyAgenda component\r\nconst WeeklyAgenda: React.FC<{ events: CalendarEvent[], error: string | null, isLoading: boolean }> = ({ events, error, isLoading }) => {\r\n    if (isLoading) {\r\n        return (\r\n             <div className=\"bg-jdc-card p-4 rounded-lg shadow-lg min-h-[200px] flex items-center justify-center\">\r\n                 <FontAwesomeIcon icon={faSpinner} spin className=\"text-jdc-yellow text-xl mr-2\" />\r\n                 <span className=\"text-jdc-gray-400\">Chargement de l'agenda...</span>\r\n             </div>\r\n        );\r\n    }\r\n    if (error) {\r\n        return (\r\n             <div className=\"bg-jdc-card p-4 rounded-lg shadow-lg min-h-[200px]\">\r\n                 <h3 className=\"text-lg font-semibold text-white mb-2 flex items-center\">\r\n                     <FontAwesomeIcon icon={faCalendarDays} className=\"mr-2 text-jdc-blue\" />\r\n                     Agenda de la semaine\r\n                 </h3>\r\n                 <div className=\"text-red-400 bg-red-900 bg-opacity-50 p-3 rounded\">\r\n                     <FontAwesomeIcon icon={faExclamationTriangle} className=\"mr-1\" /> {error}\r\n                 </div>\r\n             </div>\r\n        );\r\n    }\r\n     if (events.length === 0) {\r\n        return (\r\n             <div className=\"bg-jdc-card p-4 rounded-lg shadow-lg min-h-[200px]\">\r\n                 <h3 className=\"text-lg font-semibold text-white mb-2 flex items-center\">\r\n                     <FontAwesomeIcon icon={faCalendarDays} className=\"mr-2 text-jdc-blue\" />\r\n                     Agenda de la semaine\r\n                 </h3>\r\n                 <p className=\"text-jdc-gray-400\">Aucun \u00E9v\u00E9nement trouv\u00E9 pour cette p\u00E9riode.</p>\r\n             </div>\r\n        );\r\n    }\r\n\r\n    // Basic rendering - needs refinement\r\n    return (\r\n        <div className=\"bg-jdc-card p-4 rounded-lg shadow-lg min-h-[200px]\">\r\n            <h3 className=\"text-lg font-semibold text-white mb-3 flex items-center\">\r\n                <FontAwesomeIcon icon={faCalendarDays} className=\"mr-2 text-jdc-blue\" />\r\n                Agenda de la semaine\r\n            </h3>\r\n            <ul className=\"space-y-2\">\r\n                {events.map(event => (\r\n                    <li key={event.id} className=\"text-sm border-b border-jdc-gray-700 pb-1 last:border-b-0\">\r\n                        <span className=\"font-medium text-jdc-gray-200\">{event.summary || '(Sans titre)'}</span>\r\n                        <span className=\"text-xs text-jdc-gray-400 ml-2\">\r\n                            ({formatEventTime(event.start)} - {formatEventTime(event.end)})\r\n                        </span>\r\n                         {event.htmlLink && <a href={event.htmlLink} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-xs text-jdc-blue hover:underline ml-2\">(Voir)</a>}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Helper to format event time/date\r\nconst formatEventTime = (eventDateTime?: { dateTime?: string | null; date?: string | null } | null): string => {\r\n    if (!eventDateTime) return 'N/A';\r\n    // If dateTime exists (specific time), format it\r\n    if (eventDateTime.dateTime) {\r\n        try {\r\n            return new Date(eventDateTime.dateTime).toLocaleTimeString('fr-FR', { hour: '2-digit', minute: '2-digit' });\r\n        } catch { return 'Heure invalide'; }\r\n    }\r\n    // If only date exists (all-day event), format the date\r\n    if (eventDateTime.date) {\r\n         try {\r\n            // Date string might be YYYY-MM-DD, need to parse correctly respecting timezone\r\n            const [year, month, day] = eventDateTime.date.split('-').map(Number);\r\n            // Create date assuming it's local timezone for display purposes of all-day events\r\n            const date = new Date(year, month - 1, day);\r\n            return date.toLocaleDateString('fr-FR', { weekday: 'short', day: 'numeric', month: 'short' });\r\n        } catch { return 'Date invalide'; }\r\n    }\r\n    return 'N/A';\r\n};\r\n// --- End Placeholder Components ---\r\n\r\n\r\nexport default function Dashboard() {\r\n  // Use context from root (contains user session)\r\n  const { user, profile, profileLoading } = useOutletContext<OutletContextType>();\r\n  // Get calendar data from this route's loader\r\n  const { calendarEvents, calendarError } = useLoaderData<typeof loader>();\r\n\r\n  // Client-side state for stats and recent items remains\r\n  const [liveTicketCount, setLiveTicketCount] = useState<number | null>(null);\r\n  const [liveDistinctClientCountFromEnvoi, setLiveDistinctClientCountFromEnvoi] = useState<number | null>(null);\r\n  const [evolution, setEvolution] = useState<EvolutionData>({\r\n    ticketCount: null,\r\n    distinctClientCountFromEnvoi: null,\r\n  });\r\n  const [recentTickets, setRecentTickets] = useState<SapTicket[]>([]);\r\n  const [recentShipments, setRecentShipments] = useState<Shipment[]>([]);\r\n  const [loadingStats, setLoadingStats] = useState<boolean>(true);\r\n  const [loadingTickets, setLoadingTickets] = useState<boolean>(true);\r\n  const [loadingShipments, setLoadingShipments] = useState<boolean>(true);\r\n  const [clientError, setClientError] = useState<string | null>(null); // Renamed from error to avoid conflict\r\n  const [fetchTrigger, setFetchTrigger] = useState(0);\r\n\r\n  // useEffect for client-side data fetching (stats, tickets, shipments)\r\n  useEffect(() => {\r\n    const loadDashboardData = async () => {\r\n      // Use profile from context, wait if it's loading\r\n      if (profileLoading) {\r\n          console.log(\"Dashboard Effect: Waiting for profile to load...\");\r\n          return; // Wait until profile is loaded or loading finishes\r\n      }\r\n      // If profile loading finished but profile is still null (and user exists), handle appropriately\r\n      if (user && !profile) {\r\n          console.warn(\"Dashboard Effect: User session exists but profile is null after loading.\");\r\n          // Decide how to handle this - maybe show limited data or an error?\r\n          // For now, proceed but Firestore calls might fail or return limited data\r\n      }\r\n\r\n      // Only proceed if user session exists\r\n      if (!user) {\r\n        setLoadingStats(false); setLoadingTickets(false); setLoadingShipments(false);\r\n        setLiveTicketCount(null); setLiveDistinctClientCountFromEnvoi(null);\r\n        setEvolution({ ticketCount: null, distinctClientCountFromEnvoi: null });\r\n        setRecentTickets([]); setRecentShipments([]); setClientError(null);\r\n        return;\r\n      }\r\n\r\n      setLoadingStats(true); setLoadingTickets(true); setLoadingShipments(true); setClientError(null);\r\n      console.log(\"Dashboard Effect: Fetching client-side data (stats, tickets, shipments)...\");\r\n      try {\r\n        // Use profile from context now\r\n        const userProfile = profile;\r\n        const userSectors = userProfile?.secteurs ?? [];\r\n        const sectorsForTickets = userSectors;\r\n        const sectorsForShipments = userProfile?.role === 'Admin' ? [] : userSectors;\r\n\r\n        console.log(`Dashboard Effect: Using sectors for tickets: ${JSON.stringify(sectorsForTickets)}`);\r\n        console.log(`Dashboard Effect: Using sectors for shipments: ${sectorsForShipments.length === 0 && userProfile?.role === 'Admin' ? '(Admin - All)' : JSON.stringify(sectorsForShipments)}`);\r\n\r\n        // Fetch data using Firestore SDK (client-side)\r\n        const results = await Promise.allSettled([\r\n          getLatestStatsSnapshotsSdk(1),\r\n          getTotalTicketCountSdk(sectorsForTickets),\r\n          getDistinctClientCountFromEnvoiSdk(userProfile), // Pass profile directly\r\n          getRecentTicketsForSectors(sectorsForTickets, 20),\r\n          getRecentShipmentsForSectors(sectorsForShipments, 20)\r\n        ]);\r\n\r\n        // Process results (same logic as before)\r\n        const snapshotResult = results[0];\r\n        const ticketCountResult = results[1];\r\n        const distinctClientCountResult = results[2];\r\n        const latestSnapshot = snapshotResult.status === 'fulfilled' && snapshotResult.value.length > 0 ? snapshotResult.value[0] : null;\r\n        const fetchedLiveTicketCount = ticketCountResult.status === 'fulfilled' ? ticketCountResult.value : null;\r\n        const fetchedLiveDistinctClientCountFromEnvoi = distinctClientCountResult.status === 'fulfilled' ? distinctClientCountResult.value : null;\r\n\r\n        results.forEach((result, index) => {\r\n            if (result.status === 'rejected') {\r\n                console.error(`Dashboard Effect: Error fetching client-side data at index ${index}:`, result.reason);\r\n                 if (!clientError) { // Show first error encountered\r\n                    if (index === 0) setClientError(\"Erreur chargement \u00E9volution.\");\r\n                    if (index === 1) setClientError(\"Erreur chargement total tickets.\");\r\n                    if (index === 2) setClientError(\"Erreur chargement clients distincts.\");\r\n                 }\r\n            }\r\n        });\r\n\r\n        setLiveTicketCount(fetchedLiveTicketCount);\r\n        setLiveDistinctClientCountFromEnvoi(fetchedLiveDistinctClientCountFromEnvoi);\r\n\r\n        const calculatedEvolution: EvolutionData = { ticketCount: null, distinctClientCountFromEnvoi: null };\r\n         if (latestSnapshot) {\r\n             if (fetchedLiveTicketCount !== null && latestSnapshot.totalTickets !== undefined) {\r\n                 calculatedEvolution.ticketCount = fetchedLiveTicketCount - latestSnapshot.totalTickets;\r\n             }\r\n             if (fetchedLiveDistinctClientCountFromEnvoi !== null && latestSnapshot.activeClients !== undefined) {\r\n                 calculatedEvolution.distinctClientCountFromEnvoi = fetchedLiveDistinctClientCountFromEnvoi - latestSnapshot.activeClients;\r\n             }\r\n         } else {\r\n             if (snapshotResult.status === 'rejected' && !clientError) {\r\n                  setClientError(\"Donn\u00E9es snapshot manquantes.\");\r\n             }\r\n         }\r\n        setEvolution(calculatedEvolution);\r\n\r\n        const recentTicketsResult = results[3];\r\n        const recentShipmentsResult = results[4];\r\n        setRecentTickets(recentTicketsResult.status === 'fulfilled' ? recentTicketsResult.value : []);\r\n        setRecentShipments(recentShipmentsResult.status === 'fulfilled' ? recentShipmentsResult.value : []);\r\n\r\n      } catch (err: any) {\r\n        setClientError(err.message || \"Erreur g\u00E9n\u00E9rale chargement donn\u00E9es client.\");\r\n        setLiveTicketCount(null); setLiveDistinctClientCountFromEnvoi(null);\r\n        setEvolution({ ticketCount: null, distinctClientCountFromEnvoi: null });\r\n        setRecentTickets([]); setRecentShipments([]);\r\n      } finally {\r\n        setLoadingStats(false); setLoadingTickets(false); setLoadingShipments(false);\r\n        console.log(\"Dashboard Effect: Client-side data fetching finished.\");\r\n      }\r\n    };\r\n    loadDashboardData();\r\n  // Depend on user session and profile fetched in root\r\n  }, [user, profile, profileLoading, fetchTrigger]);\r\n\r\n  // Removed trigger effect as profile fetch is now in root\r\n\r\n  const formatStatValue = (value: number | string | null, isLoading: boolean): string => {\r\n     if (isLoading) return \"...\";\r\n     if (value === null || value === undefined) return \"N/A\";\r\n     return value.toString();\r\n  };\r\n\r\n  const statsData = [\r\n    { title: \"Tickets SAP (Total)\", valueState: liveTicketCount, icon: faTicket, evolutionKey: 'ticketCount', loadingState: loadingStats },\r\n    { title: \"Clients CTN (Distincts)\", valueState: liveDistinctClientCountFromEnvoi, icon: faUsers, evolutionKey: 'distinctClientCountFromEnvoi', loadingState: loadingStats },\r\n  ];\r\n\r\n  const isOverallLoading = loadingStats || loadingTickets || loadingShipments || profileLoading; // Include profileLoading\r\n  const ticketsForList = recentTickets.slice(0, 5);\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <h1 className=\"text-3xl font-semibold text-white\">Tableau de Bord</h1>\r\n      {/* Display client-side errors */}\r\n      {clientError && (\r\n        <div className=\"flex items-center p-4 bg-red-800 text-white rounded-lg mb-4\">\r\n          <FontAwesomeIcon icon={faExclamationTriangle} className=\"mr-2\" />\r\n          {clientError}\r\n        </div>\r\n      )}\r\n       <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n         {statsData.map((stat) => {\r\n           const isLoading = stat.loadingState;\r\n           const mainValue = stat.valueState;\r\n           const evolutionDisplayValue = evolution[stat.evolutionKey as keyof EvolutionData];\r\n           return (\r\n             <StatsCard\r\n               key={stat.title}\r\n               title={stat.title}\r\n               value={formatStatValue(mainValue, isLoading)}\r\n               icon={stat.icon}\r\n               isLoading={isLoading}\r\n               evolutionValue={evolutionDisplayValue}\r\n             />\r\n           );\r\n         })}\r\n       </div>\r\n\r\n        {/* Calendar Section */}\r\n        <WeeklyAgenda\r\n            events={calendarEvents}\r\n            error={calendarError}\r\n            isLoading={!user && !calendarError} // Show loading if no user and no specific error yet\r\n        />\r\n\r\n      {/* Map Section */}\r\n      <div className=\"w-full mb-6\">\r\n        <ClientOnly fallback={<MapLoadingFallback />}>\r\n          {() => // Use profile from context\r\n            user ? (\r\n              <Suspense fallback={<MapLoadingFallback />}>\r\n                <InteractiveMap\r\n                  tickets={recentTickets}\r\n                  isLoadingTickets={loadingTickets}\r\n                />\r\n              </Suspense>\r\n            ) : (\r\n              <MapLoginPrompt />\r\n            )\r\n          }\r\n        </ClientOnly>\r\n      </div>\r\n\r\n      {/* Recent Activity Section */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n        <RecentTickets\r\n           tickets={ticketsForList}\r\n           isLoading={loadingTickets}\r\n        />\r\n        <RecentShipments\r\n           shipments={recentShipments}\r\n           isLoading={loadingShipments}\r\n        />\r\n      </div>\r\n\r\n      {!user && !isOverallLoading && !clientError && (\r\n         <div className=\"p-4 bg-jdc-card rounded-lg text-center text-jdc-gray-300 mt-6\">\r\n           Veuillez vous connecter pour voir le tableau de bord.\r\n         </div>\r\n       )}\r\n    </div>\r\n  );\r\n}\r\n", "import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport type { IconDefinition } from '@fortawesome/fontawesome-svg-core';\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\r\n\r\ninterface StatsCardProps {\r\n  title: string; // Title like \"Tickets SAP (Total)\"\r\n  value: string | number; // Main value (live count)\r\n  icon: IconDefinition;\r\n  isLoading?: boolean; // Optional loading prop\r\n  evolutionValue?: number | null; // Optional: Numeric change value (live - snapshot)\r\n}\r\n\r\n// Helper function to get the type of stat from the title for the evolution label\r\nconst getStatTypeFromTitle = (title: string): string => {\r\n  if (title.toLowerCase().includes('ticket')) return 'ticket SAP';\r\n  if (title.toLowerCase().includes('envois')) return 'envois CTN';\r\n  if (title.toLowerCase().includes('client')) return 'clients actifs';\r\n  return 'donn\u00E9es'; // Fallback\r\n};\r\n\r\nexport const StatsCard: React.FC<StatsCardProps> = ({ title, value, icon, isLoading = false, evolutionValue }) => {\r\n  // Determine if the evolution display should be shown\r\n  // It's shown only if evolutionValue is a non-zero number\r\n  const showEvolution = typeof evolutionValue === 'number' && evolutionValue !== 0;\r\n  const isPositive = evolutionValue && evolutionValue > 0;\r\n  const evolutionColor = isPositive ? 'text-green-500' : 'text-red-500';\r\n  const evolutionArrow = isPositive ? '\u2191' : '\u2193';\r\n  const statType = getStatTypeFromTitle(title); // Get the specific type for the label\r\n\r\n  return (\r\n    <div className=\"bg-jdc-card p-4 rounded-lg shadow-lg flex items-start space-x-4 transition-colors duration-200 hover:bg-jdc-gray-800\">\r\n      {/* Icon */}\r\n      <div className=\"p-3 rounded-full bg-jdc-yellow text-black flex-shrink-0 mt-1\">\r\n        <FontAwesomeIcon icon={icon} className=\"h-6 w-6\" />\r\n      </div>\r\n\r\n      {/* Title, Value, and Evolution */}\r\n      <div className=\"flex-grow\">\r\n        {/* Title */}\r\n        <p className=\"text-sm text-jdc-gray-400\">{title}</p>\r\n\r\n        {/* Main Value */}\r\n        <p className={`text-2xl font-semibold text-white mt-1 ${isLoading ? 'animate-pulse' : ''}`}>\r\n          {isLoading ? <FontAwesomeIcon icon={faSpinner} spin /> : value}\r\n        </p>\r\n\r\n        {/* Evolution Display (Text format, below value, smaller) */}\r\n        {!isLoading && showEvolution && (\r\n          <p className={`text-xs font-medium ${evolutionColor} mt-1`}>\r\n            \u00E9volution {statType} (24h) : {evolutionArrow} {isPositive ? '+' : ''}{evolutionValue}\r\n          </p>\r\n        )}\r\n         {/* Placeholder for alignment when evolution is not shown */}\r\n         {!isLoading && !showEvolution && (\r\n            <p className=\"text-xs font-medium text-transparent mt-1 h-[1em]\"> {/* Invisible placeholder */}\r\n                &nbsp; {/* Non-breaking space to maintain height */}\r\n            </p>\r\n         )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n", "import React from 'react';\r\nimport type { SapTicket } from '~/types/firestore.types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTicket, faSpinner, faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\r\n// Use the new date utility functions\r\nimport { parseFrenchDate, formatDateForDisplay } from '~/utils/dateUtils';\r\nimport tailwindConfig from '../../tailwind.config'; // Import Tailwind config\r\n\r\ninterface RecentTicketsProps {\r\n  tickets: SapTicket[];\r\n  isLoading?: boolean;\r\n  error?: string | null;\r\n}\r\n\r\n// Get the color value from the resolved config\r\nconst jdcYellowColor = tailwindConfig.theme.extend.colors['jdc-yellow'];\r\n\r\nexport const RecentTickets: React.FC<RecentTicketsProps> = ({ tickets, isLoading = false, error = null }) => {\r\n\r\n  const getClientDisplay = (ticket: SapTicket): string => {\r\n    return ticket.raisonSociale || ticket.codeClient || 'Client inconnu';\r\n  };\r\n\r\n  const getSummaryDisplay = (summary?: string): string => {\r\n    if (!summary) return 'Pas de r\u00E9sum\u00E9';\r\n    return summary.length > 40 ? summary.substring(0, 40) + '...' : summary;\r\n  };\r\n\r\n  // Function to determine status classes with updated colors\r\n  const getStatusClasses = (status?: string): string => {\r\n    switch (status) {\r\n      case 'Nouveau':\r\n        return 'bg-green-600 text-white'; // Vert pour Nouveau\r\n      case 'Demande de RMA': // Assuming this is the exact string\r\n        return 'bg-blue-600 text-white'; // Bleu pour Demande de RMA\r\n      case 'Ouvert':\r\n        return 'bg-red-600 text-white'; // Rouge pour Ouvert\r\n      case 'En cours':\r\n        return 'bg-yellow-500 text-black'; // Jaune pour En cours\r\n      case 'Ferm\u00E9':\r\n        return 'bg-gray-600 text-white'; // Gris pour Ferm\u00E9\r\n      default:\r\n        return 'bg-gray-500 text-white'; // Gris par d\u00E9faut\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-jdc-card p-4 rounded-lg shadow-lg\">\r\n      <h2 className=\"text-xl font-semibold text-white mb-3 flex items-center\">\r\n        {/* Use color prop for FontAwesomeIcon */}\r\n        <FontAwesomeIcon icon={faTicket} className=\"mr-2\" color={jdcYellowColor} />\r\n        Tickets SAP R\u00E9cents\r\n      </h2>\r\n      {isLoading && (\r\n        <div className=\"flex items-center justify-center text-jdc-gray-300 py-4\">\r\n          <FontAwesomeIcon icon={faSpinner} spin className=\"mr-2\" />\r\n          Chargement...\r\n        </div>\r\n      )}\r\n      {error && !isLoading && (\r\n         <div className=\"flex items-center text-red-400 py-4\">\r\n           <FontAwesomeIcon icon={faExclamationTriangle} className=\"mr-2\" />\r\n           Erreur: {error}\r\n         </div>\r\n      )}\r\n      {!isLoading && !error && tickets.length === 0 && (\r\n        <p className=\"text-jdc-gray-400 text-center py-4\">Aucun ticket r\u00E9cent \u00E0 afficher.</p>\r\n      )}\r\n      {!isLoading && !error && tickets.length > 0 && (\r\n        <ul className=\"space-y-2 max-h-60 overflow-y-auto pr-2\">\r\n          {tickets.map((ticket) => (\r\n            <li key={ticket.id} className=\"flex justify-between items-start text-sm p-2 bg-jdc-gray-800 rounded hover:bg-jdc-gray-700\">\r\n              <div className=\"flex-grow mr-2\">\r\n                <span className=\"font-medium text-white block\">{getClientDisplay(ticket)}</span>\r\n                <span className=\"text-jdc-gray-400 block text-xs\">\r\n                  {getSummaryDisplay(ticket.summary)} - {ticket.secteur || 'Secteur N/A'}\r\n                 </span>\r\n                 <span className=\"text-jdc-gray-500 block text-xs italic\">\r\n                  {/* Parse and format the date using the new functions */}\r\n                  {formatDateForDisplay(parseFrenchDate(ticket.date))}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex-shrink-0 text-right\">\r\n                {/* Apply status classes using the updated helper function */}\r\n                <span className={`px-2 py-0.5 rounded text-xs font-semibold whitespace-nowrap ${getStatusClasses(ticket.statut)}`}>\r\n                  {ticket.statut || 'N/A'}\r\n                </span>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n", "import type { Config } from \"tailwindcss\";\r\n\r\nexport default {\r\n  content: [\"./app/**/{**,.client,.server}/**/*.{js,jsx,ts,tsx}\"],\r\n  theme: {\r\n    extend: {\r\n      colors: {\r\n        'jdc-yellow': '#FFD700', // Jaune JDC\r\n        'jdc-black': '#000000', // Noir JDC\r\n        'jdc-card': '#1F1F1F',   // Fond de carte sombre\r\n        'jdc-gray': {\r\n          300: '#CCCCCC', // Gris clair pour texte/bordures\r\n          400: '#A0A0A0', // Gris moyen\r\n          800: '#333333', // Gris fonc\u00E9 pour fond alternatif/texte\r\n        },\r\n        'jdc-blue-dark': '#0a0f1f', // Tr\u00E8s fonc\u00E9, pour le fond principal\r\n        'jdc-white': '#FFFFFF', // Blanc standard pour texte sur fond sombre\r\n      },\r\n      fontFamily: {\r\n        sans: [\r\n          '\"Roboto\"', // Nouvelle police principale\r\n          \"ui-sans-serif\",\r\n          \"system-ui\",\r\n          \"sans-serif\",\r\n          '\"Apple Color Emoji\"',\r\n          '\"Segoe UI Emoji\"',\r\n          '\"Segoe UI Symbol\"',\r\n          '\"Noto Color Emoji\"',\r\n        ],\r\n      },\r\n    },\r\n  },\r\n  plugins: [], // Remove DaisyUI plugin\r\n} satisfies Config;\r\n", "import React, { useMemo } from 'react';\r\nimport { Link } from '@remix-run/react'; // Import Link from Remix\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTruckFast, faBuilding } from '@fortawesome/free-solid-svg-icons';\r\nimport type { Shipment } from '~/types/firestore.types';\r\n// Removed unused imports: faExternalLinkAlt, faChevronDown, faChevronRight, getShipmentStatusStyle, Button\r\n\r\ninterface RecentShipmentsProps {\r\n  shipments: Shipment[];\r\n  isLoading: boolean;\r\n}\r\n\r\n// Helper function to get unique client names from shipments\r\nconst getUniqueClientNames = (shipments: Shipment[]): string[] => {\r\n  if (!Array.isArray(shipments)) {\r\n    return []; // Return empty array if shipments is not an array\r\n  }\r\n  const names = new Set<string>();\r\n  shipments.forEach(shipment => {\r\n    if (shipment.nomClient) {\r\n      names.add(shipment.nomClient);\r\n    }\r\n  });\r\n  // Sort names alphabetically for consistent display\r\n  return Array.from(names).sort((a, b) => a.localeCompare(b));\r\n};\r\n\r\nexport const RecentShipments: React.FC<RecentShipmentsProps> = ({ shipments, isLoading }) => {\r\n\r\n  // Get unique client names using useMemo for performance\r\n  const uniqueClientNames = useMemo(() => getUniqueClientNames(shipments), [shipments]);\r\n\r\n  return (\r\n    <div className=\"bg-jdc-card p-4 rounded-lg shadow-lg\">\r\n      <h2 className=\"text-xl font-semibold text-white mb-3 flex items-center\">\r\n        <FontAwesomeIcon icon={faTruckFast} className=\"mr-2 text-jdc-yellow\" />\r\n        Clients CTN R\u00E9cents (via Envois)\r\n      </h2>\r\n      {isLoading ? (\r\n        <div className=\"flex items-center justify-center text-jdc-gray-300 py-4\">\r\n          {/* Consistent loading indicator */}\r\n          <FontAwesomeIcon icon={faTruckFast} spin className=\"mr-2\" />\r\n          Chargement...\r\n        </div>\r\n      ) : uniqueClientNames.length === 0 ? (\r\n        <p className=\"text-jdc-gray-400 text-center py-4\">Aucun client trouv\u00E9 dans les envois r\u00E9cents.</p> // Use <p> like RecentTickets\r\n      ) : (\r\n        // Use similar list styling as RecentTickets\r\n        <ul className=\"space-y-2 max-h-60 overflow-y-auto pr-2\">\r\n          {uniqueClientNames.map((clientName) => (\r\n            // Apply tile styling to the list item itself\r\n            <li key={clientName} className=\"text-sm p-2 bg-jdc-gray-800 rounded hover:bg-jdc-gray-700 transition-colors duration-150\">\r\n              <Link\r\n                to={`/envois-ctn?client=${encodeURIComponent(clientName)}`}\r\n                className=\"flex items-center w-full\" // Link fills the li, flex aligns icon and text\r\n              >\r\n                <FontAwesomeIcon icon={faBuilding} className=\"mr-2 text-jdc-gray-300 flex-shrink-0\" /> {/* Adjusted margin */}\r\n                {/* Apply similar text styling */}\r\n                <span className=\"font-medium text-white truncate\" title={clientName}>{clientName}</span>\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n", "import { useState, useEffect, type ReactNode } from \"react\";\r\n\r\n/**\r\n * Props for the ClientOnly component.\r\n * Uses a function as children to defer rendering until mounted on the client.\r\n */\r\ninterface ClientOnlyProps {\r\n  children: () => ReactNode;\r\n  fallback?: ReactNode;\r\n}\r\n\r\n/**\r\n * Renders children only on the client side after component has mounted.\r\n * Useful for wrapping components that depend heavily on browser APIs (like Leaflet).\r\n */\r\nexport function ClientOnly({ children, fallback = null }: ClientOnlyProps): ReactNode {\r\n  const [isMounted, setIsMounted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // This effect runs only on the client after the initial render\r\n    setIsMounted(true);\r\n  }, []);\r\n\r\n  // If not mounted yet (i.e., on the server or during initial client render before effect), render fallback\r\n  if (!isMounted) {\r\n    return fallback;\r\n  }\r\n\r\n  // Once mounted, render the actual children by calling the function\r\n  return children();\r\n}\r\n\r\n// Optional: Export as default if preferred\r\n// export default ClientOnly;\r\n", "import type { LoaderFunctionArgs } from \"@remix-run/node\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { Form, useLoaderData, useSearchParams, useRevalidator } from \"@remix-run/react\"; // Importer useRevalidator\r\nimport { useState, useEffect } from \"react\";\r\n// Importer searchArticles, addArticleImageUrl, et deleteArticleImageUrl\r\nimport { searchArticles, addArticleImageUrl, deleteArticleImageUrl } from \"~/services/firestore.service.server\";\r\nimport type { Article, AppUser, UserProfile } from \"~/types/firestore.types\";\r\nimport { useOutletContext } from \"@remix-run/react\";\r\nimport { useRef } from \"react\"; // Importer useRef pour l'input fichier cach\u00E9\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; // Importer pour ic\u00F4nes\r\nimport { faPlus, faSpinner, faTimes, faTrashAlt } from '@fortawesome/free-solid-svg-icons'; // Importer ic\u00F4nes + faTrashAlt\r\n\r\n// Loader: Ne r\u00E9cup\u00E8re plus les articles, renvoie juste les searchParams\r\nexport async function loader({ request }: LoaderFunctionArgs) {\r\n  const url = new URL(request.url);\r\n  const code = url.searchParams.get(\"code\")?.trim() || \"\";\r\n  const nom = url.searchParams.get(\"nom\")?.trim() || \"\";\r\n  console.log(\"Articles Loader: Returning search params\", { code, nom });\r\n  // Ne renvoie plus articles ni error depuis le loader\r\n  return json({ searchParams: { code, nom } });\r\n}\r\n\r\n// Interface pour le contexte de l'outlet\r\ninterface OutletContextType {\r\n  user: AppUser | null;\r\n  profile: UserProfile | null;\r\n  loadingAuth: boolean;\r\n}\r\n\r\n// Composant pour la page de recherche\r\nexport default function ArticlesSearch() {\r\n  const { searchParams: loaderSearchParams } = useLoaderData<typeof loader>();\r\n  const [searchParams] = useSearchParams();\r\n  const { user, loadingAuth } = useOutletContext<OutletContextType>(); // R\u00E9cup\u00E9rer user et loadingAuth\r\n\r\n  // \u00C9tats locaux pour les articles, le chargement et les erreurs c\u00F4t\u00E9 client\r\n  const [localArticles, setLocalArticles] = useState<Article[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [fetchError, setFetchError] = useState<string | null>(null);\r\n\r\n  // Initialiser l'\u00E9tat local du formulaire avec les param\u00E8tres du loader (qui viennent de l'URL)\r\n  const [codeSearch, setCodeSearch] = useState(loaderSearchParams.code);\r\n  const [nomSearch, setNomSearch] = useState(loaderSearchParams.nom);\r\n\r\n  // \u00C9tats pour g\u00E9rer l'upload d'image (par article)\r\n  const [uploadingImageId, setUploadingImageId] = useState<string | null>(null);\r\n  const [uploadError, setUploadError] = useState<string | null>(null);\r\n\r\n  // R\u00E9f\u00E9rence pour l'input fichier cach\u00E9\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  // \u00C9tats pour la modale d'image\r\n  const [selectedImageUrl, setSelectedImageUrl] = useState<string | null>(null);\r\n  const [isImageModalOpen, setIsImageModalOpen] = useState(false);\r\n\r\n  // \u00C9tat pour g\u00E9rer la suppression d'image\r\n  const [deletingImageUrl, setDeletingImageUrl] = useState<string | null>(null); // Stocke l'URL en cours de suppression\r\n  const [deleteError, setDeleteError] = useState<string | null>(null); // Erreur sp\u00E9cifique \u00E0 la suppression\r\n\r\n  // Effet pour lancer la recherche c\u00F4t\u00E9 client lorsque les param\u00E8tres ou l'\u00E9tat d'auth changent\r\n  useEffect(() => {\r\n    // R\u00E9cup\u00E9rer les param\u00E8tres actuels de l'URL pour la recherche\r\n    const currentCode = searchParams.get(\"code\")?.trim() || \"\";\r\n    const currentNom = searchParams.get(\"nom\")?.trim() || \"\";\r\n\r\n    // Mettre \u00E0 jour les champs du formulaire si l'URL change (ex: bouton retour)\r\n    setCodeSearch(currentCode);\r\n    setNomSearch(currentNom);\r\n\r\n    // Ne lancer la recherche que si l'authentification est termin\u00E9e,\r\n    // l'utilisateur est connect\u00E9, et au moins un crit\u00E8re est fourni\r\n    if (!loadingAuth && user && (currentCode || currentNom)) {\r\n      const performSearch = async () => {\r\n        setIsLoading(true);\r\n        setFetchError(null);\r\n        setLocalArticles([]); // Vider les anciens r\u00E9sultats\r\n        console.log(\"Client Search: Performing search for\", { code: currentCode, nom: currentNom });\r\n        try {\r\n          const results = await searchArticles({ code: currentCode, nom: currentNom });\r\n          setLocalArticles(results);\r\n          console.log(\"Client Search: Found results\", results);\r\n        } catch (err: any) {\r\n          console.error(\"Client Search: Error fetching articles\", err);\r\n          setFetchError(err.message || \"Erreur lors de la recherche c\u00F4t\u00E9 client.\");\r\n        } finally {\r\n          setIsLoading(false);\r\n        }\r\n      };\r\n      performSearch();\r\n    } else {\r\n      // Si pas de recherche \u00E0 lancer (pas connect\u00E9, pas de crit\u00E8res), vider les r\u00E9sultats\r\n      setLocalArticles([]);\r\n      setIsLoading(false);\r\n      setFetchError(null);\r\n    }\r\n    // D\u00E9pendances : searchParams (pour r\u00E9agir aux changements d'URL), loadingAuth, user\r\n  }, [searchParams, loadingAuth, user]);\r\n\r\n  // --- Fonctions pour g\u00E9rer l'upload ---\r\n  const handleAddPhotoClick = (articleId: string) => {\r\n    setUploadError(null);\r\n    setUploadingImageId(null);\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.setAttribute('data-article-id', articleId);\r\n      fileInputRef.current.click();\r\n    }\r\n  };\r\n\r\n  const handleFileSelected = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    const targetArticleId = event.target.getAttribute('data-article-id');\r\n\r\n    if (file && targetArticleId) {\r\n      console.log(`Fichier s\u00E9lectionn\u00E9: ${file.name} pour l'article ID: ${targetArticleId}`);\r\n      setUploadingImageId(targetArticleId);\r\n      setUploadError(null);\r\n      setDeleteError(null); // Clear delete error on new upload attempt\r\n\r\n      const CLOUDINARY_CLOUD_NAME = \"dkeqzl54y\";\r\n      const CLOUDINARY_UPLOAD_PRESET = \"jdc-img\";\r\n      const CLOUDINARY_API_URL = `https://api.cloudinary.com/v1_1/${CLOUDINARY_CLOUD_NAME}/image/upload`;\r\n\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n      formData.append('upload_preset', CLOUDINARY_UPLOAD_PRESET);\r\n\r\n      try {\r\n        console.log(`Upload vers Cloudinary pour l'article ${targetArticleId}...`);\r\n        const response = await fetch(CLOUDINARY_API_URL, {\r\n          method: 'POST',\r\n          body: formData,\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const errorData = await response.json();\r\n          console.error(\"Erreur API Cloudinary:\", errorData);\r\n          throw new Error(errorData.error?.message || `\u00C9chec de l'upload Cloudinary (HTTP ${response.status})`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        const imageUrl = data.secure_url;\r\n        console.log(\"Upload Cloudinary r\u00E9ussi. URL:\", imageUrl);\r\n\r\n        await addArticleImageUrl(targetArticleId, imageUrl);\r\n        console.log(\"Mise \u00E0 jour Firestore termin\u00E9e pour\", targetArticleId);\r\n\r\n        setLocalArticles(prevArticles =>\r\n          prevArticles.map(art => {\r\n            if (art.id === targetArticleId) {\r\n              const updatedUrls = [...(art.imageUrls || []), imageUrl];\r\n              return { ...art, imageUrls: updatedUrls };\r\n            }\r\n            return art;\r\n          })\r\n        );\r\n\r\n      } catch (error: any) {\r\n        console.error(\"Erreur pendant l'upload ou la mise \u00E0 jour Firestore:\", error);\r\n        setUploadError(error.message || \"\u00C9chec de l'upload de l'image.\");\r\n      } finally {\r\n        setUploadingImageId(null);\r\n        if (fileInputRef.current) {\r\n          fileInputRef.current.value = \"\";\r\n          fileInputRef.current.removeAttribute('data-article-id');\r\n        }\r\n      }\r\n    } else {\r\n       if (fileInputRef.current) {\r\n           fileInputRef.current.removeAttribute('data-article-id');\r\n       }\r\n    }\r\n  };\r\n\r\n  // --- Fonctions pour la modale image ---\r\n  const openImageModal = (imageUrl: string) => {\r\n    setSelectedImageUrl(imageUrl);\r\n    setIsImageModalOpen(true);\r\n  };\r\n\r\n  const closeImageModal = () => {\r\n    setIsImageModalOpen(false);\r\n    setSelectedImageUrl(null);\r\n  };\r\n\r\n  // --- Fonction pour g\u00E9rer la suppression d'image ---\r\n  const handleDeleteImage = async (articleId: string, imageUrl: string) => {\r\n    // Confirmation avant suppression\r\n    if (!window.confirm(\"\u00CAtes-vous s\u00FBr de vouloir supprimer cette image ? Cette action est irr\u00E9versible.\")) {\r\n      return;\r\n    }\r\n\r\n    console.log(`Tentative de suppression de l'image: ${imageUrl} pour l'article: ${articleId}`);\r\n    setDeletingImageUrl(imageUrl); // Marquer cette URL comme en cours de suppression\r\n    setDeleteError(null); // R\u00E9initialiser l'erreur de suppression\r\n    setUploadError(null); // Clear upload error as well\r\n\r\n    try {\r\n      // Appeler la fonction de service pour supprimer l'URL de Firestore\r\n      await deleteArticleImageUrl(articleId, imageUrl);\r\n      console.log(\"Suppression de l'URL dans Firestore r\u00E9ussie.\");\r\n\r\n      // Mettre \u00E0 jour l'\u00E9tat local pour retirer l'image imm\u00E9diatement\r\n      setLocalArticles(prevArticles =>\r\n        prevArticles.map(art => {\r\n          if (art.id === articleId) {\r\n            // Filtrer l'URL supprim\u00E9e du tableau\r\n            const updatedUrls = (art.imageUrls || []).filter(url => url !== imageUrl);\r\n            return { ...art, imageUrls: updatedUrls };\r\n          }\r\n          return art;\r\n        })\r\n      );\r\n\r\n      // Note: La suppression du fichier sur Cloudinary n'est pas g\u00E9r\u00E9e ici\r\n      // car elle n\u00E9cessiterait une API backend s\u00E9curis\u00E9e avec vos cl\u00E9s Cloudinary.\r\n      // L'approche actuelle supprime juste la r\u00E9f\u00E9rence.\r\n\r\n    } catch (error: any) {\r\n      console.error(\"Erreur pendant la suppression de l'URL de l'image:\", error);\r\n      setDeleteError(error.message || \"\u00C9chec de la suppression de l'image.\");\r\n    } finally {\r\n      setDeletingImageUrl(null); // Fin de la tentative de suppression\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <h1 className=\"text-2xl font-bold mb-4 text-gray-100\">Recherche d'Articles</h1>\r\n\r\n      {/* Formulaire de recherche */}\r\n      <Form method=\"get\" className=\"mb-6 p-4 border border-gray-700 rounded-lg shadow-sm bg-jdc-blue-darker\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4 items-end\">\r\n          <div>\r\n            <label htmlFor=\"code\" className=\"block text-sm font-medium text-gray-300 mb-1\">\r\n              Code Article\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"code\"\r\n              id=\"code\"\r\n              value={codeSearch}\r\n              onChange={(e) => setCodeSearch(e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 bg-jdc-gray-800 text-gray-100 placeholder-gray-400\"\r\n              placeholder=\"Code exact\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"nom\" className=\"block text-sm font-medium text-gray-300 mb-1\">\r\n              Nom Article\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"nom\"\r\n              id=\"nom\"\r\n              value={nomSearch}\r\n              onChange={(e) => setNomSearch(e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 bg-jdc-gray-800 text-gray-100 placeholder-gray-400\"\r\n              placeholder=\"Nom partiel ou complet\"\r\n            />\r\n          </div>\r\n          <div className=\"md:pt-6\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-md focus:outline-none focus:shadow-outline transition duration-150 ease-in-out\"\r\n            >\r\n              Rechercher\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n\r\n      {/* Section des r\u00E9sultats */}\r\n      <div className=\"bg-jdc-blue-darker p-4 border border-gray-700 rounded-lg shadow-sm\">\r\n        <h2 className=\"text-xl font-semibold mb-3 text-gray-200\">R\u00E9sultats</h2>\r\n\r\n        {isLoading && <p className=\"text-gray-400 italic\">Chargement des articles...</p>}\r\n        {fetchError && !isLoading && <p className=\"text-red-500 text-sm\">{fetchError}</p>}\r\n        {deleteError && <p className=\"text-red-500 text-sm mt-2\">{deleteError}</p>} {/* Afficher l'erreur de suppression */}\r\n\r\n\r\n        {!isLoading && !fetchError && (\r\n          <>\r\n            {localArticles.length > 0 ? (\r\n              <ul className=\"divide-y divide-gray-700\">\r\n                {localArticles.map((article) => {\r\n                  const isUploadingCurrent = uploadingImageId === article.id;\r\n                  return (\r\n                    <li key={article.id} className=\"py-4 px-1 hover:bg-jdc-gray-800\">\r\n                      <div className=\"flex justify-between items-start\">\r\n                        <div>\r\n                          <p className=\"font-medium text-gray-100\">Code: {article.Code}</p>\r\n                          <p className=\"text-sm text-gray-300\">D\u00E9signation: {article.D\u00E9signation}</p>\r\n                          {article.imageUrls && article.imageUrls.length > 0 && (\r\n                            <div className=\"mt-2 flex flex-wrap gap-2\">\r\n                              {article.imageUrls.map((url, index) => {\r\n                                const isDeletingCurrent = deletingImageUrl === url;\r\n                                return (\r\n                                  <div key={index} className=\"relative group\"> {/* Conteneur relatif pour le bouton */}\r\n                                    <img\r\n                                      src={url}\r\n                                      alt={`Image ${index + 1} pour ${article.Code}`}\r\n                                      className={`h-16 w-16 object-cover rounded border border-gray-600 transition-opacity ${isDeletingCurrent ? 'opacity-50' : 'group-hover:opacity-70 cursor-pointer'}`}\r\n                                      loading=\"lazy\"\r\n                                      onClick={() => !isDeletingCurrent && openImageModal(url)} // Ouvrir seulement si pas en cours de suppression\r\n                                    />\r\n                                    {/* Bouton Supprimer */}\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      onClick={(e) => {\r\n                                        e.stopPropagation(); // Emp\u00EAcher d'ouvrir la modale\r\n                                        handleDeleteImage(article.id, url);\r\n                                      }}\r\n                                      disabled={isDeletingCurrent}\r\n                                      className={`absolute top-0 right-0 p-1 bg-red-600 bg-opacity-75 rounded-full text-white opacity-0 group-hover:opacity-100 focus:opacity-100 transition-opacity ${isDeletingCurrent ? 'cursor-not-allowed opacity-50' : 'hover:bg-red-700'}`}\r\n                                      aria-label=\"Supprimer l'image\"\r\n                                    >\r\n                                      {isDeletingCurrent ? (\r\n                                        <FontAwesomeIcon icon={faSpinner} spin className=\"h-3 w-3\" />\r\n                                      ) : (\r\n                                        <FontAwesomeIcon icon={faTrashAlt} className=\"h-3 w-3\" />\r\n                                      )}\r\n                                    </button>\r\n                                  </div>\r\n                                );\r\n                              })}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"ml-4 flex-shrink-0\">\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => handleAddPhotoClick(article.id)}\r\n                            disabled={isUploadingCurrent}\r\n                            className={`inline-flex items-center px-3 py-1 border border-transparent text-sm font-medium rounded shadow-sm text-white ${\r\n                              isUploadingCurrent\r\n                                ? 'bg-gray-500 cursor-not-allowed'\r\n                                : 'bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-jdc-blue-darker focus:ring-indigo-500'\r\n                            }`}\r\n                          >\r\n                            {isUploadingCurrent ? (\r\n                              <FontAwesomeIcon icon={faSpinner} spin className=\"mr-2\" />\r\n                            ) : (\r\n                              <FontAwesomeIcon icon={faPlus} className=\"-ml-1 mr-2 h-4 w-4\" aria-hidden=\"true\" />\r\n                            )}\r\n                            <span>{isUploadingCurrent ? 'Upload...' : 'Photo'}</span>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                      {uploadError && uploadingImageId === article.id && (\r\n                         <p className=\"text-red-500 text-xs mt-1\">{uploadError}</p>\r\n                       )}\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            ) : (\r\n              <p className=\"text-gray-400 italic\">\r\n                {searchParams.get(\"code\") || searchParams.get(\"nom\")\r\n                  ? \"Aucun article trouv\u00E9 pour ces crit\u00E8res.\"\r\n                  : \"Effectuez une recherche pour afficher les r\u00E9sultats.\"}\r\n                 {!user && !loadingAuth && \" Veuillez vous connecter pour effectuer une recherche.\"}\r\n              </p>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      {/* Input fichier cach\u00E9 */}\r\n      <input\r\n        type=\"file\"\r\n        ref={fileInputRef}\r\n        onChange={handleFileSelected}\r\n        accept=\"image/*\"\r\n        style={{ display: 'none' }}\r\n        data-article-id=\"\"\r\n      />\r\n\r\n      {/* Modale pour afficher l'image en grand */}\r\n      {isImageModalOpen && selectedImageUrl && (\r\n        <div\r\n          className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50 p-4\"\r\n          onClick={closeImageModal}\r\n        >\r\n          <div\r\n            className=\"relative bg-white p-2 rounded-lg max-w-3xl max-h-[80vh]\"\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            <img\r\n              src={selectedImageUrl}\r\n              alt=\"Image agrandie\"\r\n              className=\"block max-w-full max-h-[calc(80vh-40px)] object-contain\"\r\n            />\r\n            <button\r\n              onClick={closeImageModal}\r\n              className=\"absolute top-2 right-2 text-black bg-white bg-opacity-50 hover:bg-opacity-75 rounded-full p-1 focus:outline-none\"\r\n              aria-label=\"Fermer l'image\"\r\n            >\r\n              <FontAwesomeIcon icon={faTimes} size=\"lg\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n", "import { useState, useEffect } from 'react';\r\n\r\nexport default function BucketsRoute() {\r\n  const [buckets, setBuckets] = useState([]);\r\n  const [error, setError] = useState<Error | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchBuckets = async () => {\r\n      try {\r\n        const response = await fetch('/.netlify/functions/google-buckets');\r\n        if (!response.ok) {\r\n          throw new Error('HTTP error! status: ' + response.status);\r\n        }\r\n        const data = await response.json();\r\n        setBuckets(data.buckets || []);\r\n      } catch (e: any) { // Explicitly type e as any to avoid TS error\r\n        setError(e instanceof Error ? e : new Error('Unknown error'));\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchBuckets();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <p>Chargement des buckets...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>Erreur: {error.message}</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Liste des Buckets Google Storage</h1>\r\n      <ul>\r\n        {buckets.map((bucket, index) => (\r\n          <li key={index}>{bucket}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n", "import type { MetaFunction } from \"@remix-run/node\";\r\n\r\nexport const meta: MetaFunction = () => {\r\n  return [{ title: \"Clients | JDC Dashboard\" }];\r\n};\r\n\r\nexport default function Clients() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-2xl font-semibold text-white\">Gestion des Clients</h1>\r\n      <p className=\"text-jdc-gray-400 mt-2\">Page en construction.</p>\r\n      {/* Add client management table/components here */}\r\n    </div>\r\n  );\r\n}\r\n", "import type { ActionFunctionArgs } from \"@remix-run/node\";\r\nimport { redirect } from \"@remix-run/node\"; // Import redirect\r\nimport { authenticator } from \"~/services/auth.server\";\r\n\r\n// Action function: Handles POST requests to log the user out\r\nexport async function action({ request }: ActionFunctionArgs) {\r\n  // Use the authenticator to destroy the user's session\r\n  await authenticator.logout(request, { redirectTo: \"/\" }); // Redirect to homepage after logout\r\n}\r\n\r\n// Loader function: Redirect GET requests to the homepage or login page\r\n// Prevents users from accessing the logout route directly via GET\r\nexport async function loader() {\r\n  // You could also redirect to '/login' or another appropriate page\r\n  return redirect(\"/\");\r\n}\r\n", "import { redirect } from \"@remix-run/node\";\r\nimport type { LoaderFunctionArgs } from \"@remix-run/node\";\r\n\r\n// Redirect root path (\"/\") to the dashboard\r\nexport const loader = async ({ request }: LoaderFunctionArgs) => {\r\n  // In a real app, you might check authentication status here\r\n  // const session = await getSession(request.headers.get(\"Cookie\"));\r\n  // if (!session.has(\"userId\")) {\r\n  //   return redirect(\"/login\");\r\n  // }\r\n  return redirect(\"/dashboard\");\r\n};\r\n\r\n// This component should technically never render due to the redirect,\r\n// but it's good practice to have a fallback.\r\nexport default function Index() {\r\n  return (\r\n    <div className=\"p-6 text-center\">\r\n      <h1 className=\"text-xl text-jdc-gray-300\">Redirection vers le tableau de bord...</h1>\r\n      {/* You could add a loading spinner here */}\r\n    </div>\r\n  );\r\n}\r\n", "import React, { useEffect, useState, useCallback } from 'react';\r\nimport { useOutletContext, Link } from '@remix-run/react';\r\nimport type { AppUser, UserProfile } from '~/types/firestore.types';\r\nimport { Card, CardHeader, CardBody } from '~/components/ui/Card';\r\nimport { Button } from '~/components/ui/Button';\r\nimport { EditUserModal } from '~/components/EditUserModal';\r\n// Removed SignupForm import\r\nimport {\r\n  getAllUserProfilesSdk,\r\n  updateUserProfileSdk\r\n} from '~/services/firestore.service.server';\r\n// Removed signUpAndCreateProfile import from auth.service\r\nimport { useToast } from '~/context/ToastContext';\r\n\r\n// Define the context type expected from the outlet (matching root.tsx)\r\ninterface OutletContext {\r\n  user: AppUser | null;\r\n  profile: UserProfile | null;\r\n  loadingAuth: boolean;\r\n}\r\n\r\n// Define available sectors and roles here for consistency\r\nconst AVAILABLE_SECTORS = ['CHR', 'HACCP', 'Kezia', 'Tabac'];\r\nconst AVAILABLE_ROLES = ['Admin', 'Technician', 'Viewer'];\r\n\r\nexport default function AdminPanel() {\r\n  const { user, profile, loadingAuth } = useOutletContext<OutletContext>();\r\n  const { addToast } = useToast();\r\n\r\n  const [isAuthorized, setIsAuthorized] = useState<boolean | null>(null);\r\n  const [users, setUsers] = useState<UserProfile[]>([]);\r\n  const [loadingUsers, setLoadingUsers] = useState<boolean>(false);\r\n  const [errorUsers, setErrorUsers] = useState<string | null>(null);\r\n\r\n  // State for the Edit User Modal\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n  const [editingUser, setEditingUser] = useState<UserProfile | null>(null);\r\n\r\n  // Removed state related to SignupForm (isSigningUp, signupError)\r\n\r\n  // Determine authorization\r\n  useEffect(() => {\r\n    if (loadingAuth) {\r\n      setIsAuthorized(null);\r\n      return;\r\n    }\r\n    const isAdmin = user && profile?.role?.toLowerCase() === 'admin';\r\n    setIsAuthorized(isAdmin);\r\n  }, [user, profile, loadingAuth]);\r\n\r\n  // Fetch users function\r\n  const fetchUsers = useCallback(async () => {\r\n    console.log('[AdminPanel] Fetching user list...');\r\n    setLoadingUsers(true);\r\n    setErrorUsers(null);\r\n    try {\r\n      const fetchedUsers = await getAllUserProfilesSdk();\r\n      console.log('[AdminPanel] User list fetched successfully:', fetchedUsers);\r\n      setUsers(fetchedUsers);\r\n    } catch (error) {\r\n      console.error('[AdminPanel] Error fetching user list:', error);\r\n      const errorMessage = error instanceof Error ? error.message : \"Erreur inconnue\";\r\n      setErrorUsers(`Impossible de charger la liste des utilisateurs: ${errorMessage}. V\u00E9rifiez les permissions Firestore ou la console.`);\r\n      addToast({ type: \"error\", message: \"Erreur lors du chargement des utilisateurs.\" }); // Use object format\r\n    } finally {\r\n      setLoadingUsers(false);\r\n    }\r\n  }, [addToast]); // Keep addToast dependency\r\n\r\n  // Fetch users effect\r\n  useEffect(() => {\r\n    if (isAuthorized === true) {\r\n      fetchUsers();\r\n    } else if (isAuthorized === false) {\r\n      setUsers([]);\r\n    }\r\n  }, [isAuthorized, fetchUsers]);\r\n\r\n  // --- Modal Handlers ---\r\n  const handleOpenEditModal = (userToEdit: UserProfile) => {\r\n    console.log('[AdminPanel] Opening edit modal for user:', userToEdit.uid);\r\n    setEditingUser(userToEdit);\r\n    setIsEditModalOpen(true);\r\n  };\r\n\r\n  const handleCloseEditModal = () => {\r\n    console.log('[AdminPanel] Closing edit modal.');\r\n    setIsEditModalOpen(false);\r\n    setEditingUser(null);\r\n  };\r\n\r\n  // --- Save User Handler (Edit) ---\r\n  const handleSaveUser = async (updatedUser: UserProfile) => {\r\n    if (!editingUser) return;\r\n    console.log('[AdminPanel] Attempting to save user (client-side):', updatedUser.uid, updatedUser);\r\n\r\n    const dataToUpdate: Partial<UserProfile> = {};\r\n    if (updatedUser.displayName !== editingUser.displayName) {\r\n      dataToUpdate.displayName = updatedUser.displayName;\r\n    }\r\n    if (updatedUser.role !== editingUser.role) {\r\n      dataToUpdate.role = updatedUser.role;\r\n    }\r\n    const sortedCurrentSectors = [...(editingUser.secteurs || [])].sort();\r\n    const sortedUpdatedSectors = [...(updatedUser.secteurs || [])].sort();\r\n    if (JSON.stringify(sortedCurrentSectors) !== JSON.stringify(sortedUpdatedSectors)) {\r\n       dataToUpdate.secteurs = updatedUser.secteurs || [];\r\n    }\r\n\r\n     if (Object.keys(dataToUpdate).length === 0) {\r\n       addToast({ type: \"info\", message: \"Aucune modification d\u00E9tect\u00E9e.\" }); // Use object format\r\n       handleCloseEditModal();\r\n       return;\r\n     }\r\n\r\n    try {\r\n      await updateUserProfileSdk(editingUser.uid, dataToUpdate);\r\n      addToast({ type: \"success\", message: \"Utilisateur mis \u00E0 jour avec succ\u00E8s.\" }); // Use object format\r\n      handleCloseEditModal();\r\n      fetchUsers(); // Refetch user list after update\r\n    } catch (error: any) {\r\n      console.error(\"[AdminPanel] Error saving user (client-side SDK):\", error);\r\n      const errorMessage = error instanceof Error ? error.message : 'Erreur inconnue';\r\n      addToast({ type: \"error\", message: `Erreur lors de la mise \u00E0 jour : ${errorMessage}` }); // Use object format\r\n      throw error; // Re-throw for the modal to catch\r\n    }\r\n  };\r\n\r\n  // Removed handleSignup function\r\n\r\n  // --- Render Logic ---\r\n  if (loadingAuth || isAuthorized === null) {\r\n    return <div className=\"flex justify-center items-center h-64\"><p className=\"text-jdc-gray-400 animate-pulse\">V\u00E9rification de l'acc\u00E8s...</p></div>;\r\n  }\r\n\r\n  if (!isAuthorized) {\r\n    return (\r\n      <div className=\"text-center py-10\">\r\n        <h1 className=\"text-2xl font-bold text-red-500 mb-4\">Acc\u00E8s Refus\u00E9</h1>\r\n        <p className=\"text-jdc-gray-300\">Vous n'avez pas les permissions n\u00E9cessaires.</p>\r\n        <Link to=\"/dashboard\" className=\"text-jdc-yellow hover:underline mt-4 inline-block\">Retour au tableau de bord</Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      <h1 className=\"text-3xl font-bold text-white mb-6\">Panneau d'Administration</h1>\r\n\r\n      {/* Admin Info Card */}\r\n      <Card>\r\n        <CardHeader><h2 className=\"text-lg font-medium text-white\">Informations Administrateur</h2></CardHeader>\r\n        <CardBody>\r\n            <p className=\"text-jdc-gray-300\">Connect\u00E9 en tant que : <span className=\"font-medium text-white\">{profile?.email}</span></p>\r\n            <p className=\"text-jdc-gray-300\">R\u00F4le : <span className=\"font-medium text-white\">{profile?.role}</span></p>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      {/* REMOVED Create New User Section */}\r\n      {/* The SignupForm component and its card have been removed */}\r\n\r\n\r\n      {/* User Management Section */}\r\n      <Card>\r\n        <CardHeader>\r\n          <h2 className=\"text-lg font-medium text-white\">Gestion des Utilisateurs Existants</h2>\r\n          <p className=\"mt-1 text-sm text-jdc-gray-400\">Modifier les r\u00F4les et les secteurs des utilisateurs.</p>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div className=\"bg-red-900 border border-red-700 text-red-100 px-4 py-3 rounded relative mb-4\" role=\"alert\">\r\n            <strong className=\"font-bold\">Attention S\u00E9curit\u00E9 ! </strong>\r\n            <span className=\"block sm:inline\">La modification des utilisateurs est effectu\u00E9e c\u00F4t\u00E9 client via SDK. Ceci est INSECURIS\u00C9 pour les op\u00E9rations sensibles (changement de r\u00F4le admin) et doit \u00EAtre remplac\u00E9 par des fonctions backend s\u00E9curis\u00E9es (ex: Cloud Functions) \u00E0 terme.</span>\r\n          </div>\r\n           <div className=\"bg-yellow-900 border border-yellow-700 text-yellow-100 px-4 py-3 rounded relative mb-4\" role=\"alert\">\r\n             <strong className=\"font-bold\">Info : </strong>\r\n             <span className=\"block sm:inline\">La cr\u00E9ation de nouveaux utilisateurs se fait d\u00E9sormais via la fen\u00EAtre de connexion (bouton \"Cr\u00E9er un compte\").</span>\r\n           </div>\r\n\r\n          {loadingUsers && <div className=\"text-center py-4\"><p className=\"text-jdc-gray-400 animate-pulse\">Chargement de la liste...</p></div>}\r\n          {errorUsers && !loadingUsers && <div className=\"text-center py-4 text-red-400\"><p>{errorUsers}</p></div>}\r\n\r\n          {!loadingUsers && !errorUsers && users.length > 0 && (\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full divide-y divide-jdc-gray-700\">\r\n                <thead className=\"bg-jdc-gray-800/50\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-jdc-gray-300 uppercase tracking-wider\">Nom</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-jdc-gray-300 uppercase tracking-wider\">Email</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-jdc-gray-300 uppercase tracking-wider\">R\u00F4le</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-jdc-gray-300 uppercase tracking-wider\">Secteurs</th>\r\n                    <th className=\"relative px-6 py-3\"><span className=\"sr-only\">Actions</span></th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-jdc-card divide-y divide-jdc-gray-700\">\r\n                  {users.map((u) => (\r\n                    <tr key={u.uid}>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-white\">{u.displayName || <i className=\"text-jdc-gray-500\">Non d\u00E9fini</i>}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-jdc-gray-300\">{u.email}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-jdc-gray-300\">{u.role}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-jdc-gray-300\">{u.secteurs?.join(', ') || <i className=\"text-jdc-gray-500\">Aucun</i>}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                        <Button\r\n                          variant=\"secondary\"\r\n                          size=\"sm\"\r\n                          onClick={() => handleOpenEditModal(u)}\r\n                          // Optional: Prevent editing self if needed\r\n                          // disabled={u.uid === user?.uid}\r\n                        >\r\n                          Modifier\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n\r\n          {!loadingUsers && !errorUsers && users.length === 0 && (\r\n            <div className=\"text-center py-4 text-jdc-gray-400\"><p>Aucun utilisateur trouv\u00E9.</p></div>\r\n          )}\r\n        </CardBody>\r\n      </Card>\r\n\r\n      {/* Render the Edit User Modal */}\r\n      <EditUserModal\r\n        isOpen={isEditModalOpen}\r\n        onClose={handleCloseEditModal}\r\n        user={editingUser}\r\n        onSave={handleSaveUser}\r\n        availableRoles={AVAILABLE_ROLES}\r\n        availableSectors={AVAILABLE_SECTORS}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n", "import React from 'react';\r\n\r\ninterface CardProps {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n  as?: keyof JSX.IntrinsicElements; // Allow specifying the element type (div, section, etc.)\r\n}\r\n\r\nexport const Card: React.FC<CardProps> = ({ children, className = '', as = 'div' }) => {\r\n  const Tag = as;\r\n  // Added transition, hover transform, and hover shadow classes\r\n  const baseStyle = \"bg-jdc-card rounded-lg shadow-lg overflow-hidden transition duration-200 ease-in-out hover:-translate-y-0.5 hover:shadow-xl\";\r\n\r\n  return (\r\n    <Tag className={`${baseStyle} ${className}`}>\r\n      {children}\r\n    </Tag>\r\n  );\r\n};\r\n\r\n// Optional: Card Header, Body, Footer components for structure\r\ninterface CardSectionProps {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nexport const CardHeader: React.FC<CardSectionProps> = ({ children, className = '' }) => {\r\n  const baseStyle = \"px-4 py-3 sm:px-6 border-b border-jdc-gray-800\"; // Adjusted padding\r\n  return <div className={`${baseStyle} ${className}`}>{children}</div>;\r\n};\r\n\r\nexport const CardBody: React.FC<CardSectionProps> = ({ children, className = '' }) => {\r\n  const baseStyle = \"px-4 py-4 sm:p-6\"; // Adjusted padding\r\n  return <div className={`${baseStyle} ${className}`}>{children}</div>;\r\n};\r\n\r\nexport const CardFooter: React.FC<CardSectionProps> = ({ children, className = '' }) => {\r\n  const baseStyle = \"px-4 py-3 sm:px-6 bg-jdc-gray-800/50\"; // Slightly different bg for footer\r\n  return <div className={`${baseStyle} ${className}`}>{children}</div>;\r\n};\r\n", "import React, { useState, useEffect } from 'react';\r\nimport type { UserProfile } from '~/types/firestore.types';\r\nimport { Button } from './ui/Button';\r\nimport { Input } from './ui/Input';\r\nimport { Select } from './ui/Select';\r\n\r\ninterface EditUserModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  user: UserProfile | null;\r\n  onSave: (updatedUser: UserProfile) => Promise<void>;\r\n  availableRoles?: string[];\r\n  availableSectors?: string[]; // Now receiving available sectors\r\n}\r\n\r\n// Default values if props are not provided\r\nconst DEFAULT_ROLES = ['Admin', 'Technician', 'Viewer'];\r\nconst DEFAULT_SECTORS = ['CHR', 'HACCP', 'Kezia', 'Tabac'];\r\n\r\nexport const EditUserModal: React.FC<EditUserModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  user,\r\n  onSave,\r\n  availableRoles = DEFAULT_ROLES,\r\n  availableSectors = DEFAULT_SECTORS, // Use passed or default sectors\r\n}) => {\r\n  const [formData, setFormData] = useState<Partial<UserProfile>>({});\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (user && isOpen) {\r\n      setFormData({\r\n        uid: user.uid,\r\n        email: user.email,\r\n        displayName: user.displayName || '',\r\n        role: user.role || 'Technician',\r\n        secteurs: user.secteurs || [], // Initialize with current sectors\r\n      });\r\n      setError(null);\r\n    } else if (!isOpen) {\r\n      setFormData({});\r\n      setIsSaving(false);\r\n      setError(null);\r\n    }\r\n  }, [user, isOpen]);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Handler for toggling a sector button\r\n  const handleSectorToggle = (sector: string) => {\r\n    setFormData(prev => {\r\n      const currentSectors = prev.secteurs || [];\r\n      const isSelected = currentSectors.includes(sector);\r\n      let newSectors: string[];\r\n\r\n      if (isSelected) {\r\n        // Remove the sector\r\n        newSectors = currentSectors.filter(s => s !== sector);\r\n      } else {\r\n        // Add the sector\r\n        newSectors = [...currentSectors, sector];\r\n      }\r\n      // Sort for consistent comparison later if needed\r\n      // newSectors.sort();\r\n      return { ...prev, secteurs: newSectors };\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!user) return;\r\n\r\n    setIsSaving(true);\r\n    setError(null);\r\n\r\n    // Construct the final user data based on the form state\r\n    const updatedUserData: UserProfile = {\r\n      ...user, // Start with original user data\r\n      displayName: formData.displayName || user.displayName,\r\n      role: formData.role || user.role,\r\n      secteurs: formData.secteurs || [], // Use the updated sectors array\r\n      uid: user.uid,\r\n      email: user.email,\r\n    };\r\n\r\n    try {\r\n      await onSave(updatedUserData);\r\n      // Parent component (admin.tsx) handles closing on success\r\n    } catch (err: any) {\r\n      console.error(\"Error saving user:\", err);\r\n      setError(err.message || \"Erreur lors de la sauvegarde.\");\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen || !user) {\r\n    return null;\r\n  }\r\n\r\n  const roleOptions = availableRoles.map(role => ({ value: role, label: role }));\r\n  const currentSelectedSectors = formData.secteurs || [];\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-75 transition-opacity duration-300 ease-in-out\">\r\n      <div className=\"bg-jdc-card rounded-lg shadow-xl p-6 w-full max-w-md transform transition-all duration-300 ease-in-out scale-100\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h2 className=\"text-xl font-semibold text-white\">Modifier l'utilisateur</h2>\r\n          <button onClick={onClose} className=\"text-jdc-gray-400 hover:text-white\" disabled={isSaving}>\r\n            &times;\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          {/* Email (Read-only) */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-jdc-gray-300 mb-1\">Email</label>\r\n            <p className=\"text-sm text-white bg-jdc-gray-800 px-3 py-2 rounded\">{formData.email}</p>\r\n          </div>\r\n\r\n          {/* Display Name */}\r\n          <Input\r\n            label=\"Nom d'affichage\"\r\n            id=\"displayName\"\r\n            name=\"displayName\"\r\n            value={formData.displayName || ''}\r\n            onChange={handleChange}\r\n            disabled={isSaving}\r\n            placeholder=\"Nom affich\u00E9 dans l'application\"\r\n          />\r\n\r\n          {/* Role */}\r\n          <Select\r\n            label=\"R\u00F4le\"\r\n            id=\"role\"\r\n            name=\"role\"\r\n            options={roleOptions}\r\n            value={formData.role || ''}\r\n            onChange={handleChange}\r\n            disabled={isSaving}\r\n            required\r\n          />\r\n\r\n          {/* Sector Buttons */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-jdc-gray-300 mb-2\">Secteurs</label>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {availableSectors.map((sector) => {\r\n                const isSelected = currentSelectedSectors.includes(sector);\r\n                return (\r\n                  <Button\r\n                    key={sector}\r\n                    type=\"button\" // Important: prevent form submission\r\n                    variant={isSelected ? 'primary' : 'secondary'} // Style based on selection\r\n                    size=\"sm\"\r\n                    onClick={() => handleSectorToggle(sector)}\r\n                    disabled={isSaving}\r\n                    className={`transition-colors duration-150 ${isSelected ? '' : 'opacity-70 hover:opacity-100'}`} // Add visual feedback\r\n                  >\r\n                    {sector}\r\n                  </Button>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          {error && <p className=\"text-sm text-red-400 mt-2\">{error}</p>}\r\n\r\n          <div className=\"flex justify-end space-x-3 pt-4\">\r\n            <Button type=\"button\" variant=\"secondary\" onClick={onClose} disabled={isSaving}>\r\n              Annuler\r\n            </Button>\r\n            <Button type=\"submit\" variant=\"primary\" isLoading={isSaving} disabled={isSaving}>\r\n              Enregistrer\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n", "import React from 'react';\r\n\r\ninterface SelectOption {\r\n  value: string | number;\r\n  label: string;\r\n}\r\n\r\ninterface SelectProps extends React.SelectHTMLAttributes<HTMLSelectElement> {\r\n  label?: string;\r\n  options: SelectOption[];\r\n  error?: string;\r\n  containerClassName?: string;\r\n}\r\n\r\nexport const Select: React.FC<SelectProps> = ({\r\n  label,\r\n  id,\r\n  name,\r\n  options,\r\n  value,\r\n  onChange,\r\n  disabled,\r\n  required,\r\n  error,\r\n  className = '',\r\n  containerClassName = '',\r\n  ...props\r\n}) => {\r\n  const baseStyle = \"block w-full px-3 py-2 bg-jdc-gray-800 border border-jdc-gray-700 rounded-md shadow-sm placeholder-jdc-gray-500 focus:outline-none focus:ring-jdc-yellow focus:border-jdc-yellow sm:text-sm text-white disabled:opacity-50\";\r\n  const errorStyle = error ? \"border-red-500 ring-red-500\" : \"border-jdc-gray-700\";\r\n\r\n  return (\r\n    <div className={`mb-4 ${containerClassName}`}>\r\n      {label && (\r\n        <label htmlFor={id || name} className=\"block text-sm font-medium text-jdc-gray-300 mb-1\">\r\n          {label} {required && <span className=\"text-red-500\">*</span>}\r\n        </label>\r\n      )}\r\n      <select\r\n        id={id || name}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n        required={required}\r\n        className={`${baseStyle} ${errorStyle} ${className}`}\r\n        {...props}\r\n      >\r\n        {/* Optional: Add a default placeholder option if needed */}\r\n        {/* <option value=\"\" disabled>Select...</option> */}\r\n        {options.map((option) => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <p className=\"mt-1 text-sm text-red-400\">{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n", "export default {'entry':{'module':'/build/entry.client-3QKQLRXO.js','imports':['/build/_shared/chunk-O4BRYNJ4.js','/build/_shared/chunk-AMVBX4XI.js','/build/_shared/chunk-U4FRFQSK.js','/build/_shared/chunk-KHF7YLN5.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-XGOTYLZ5.js','/build/_shared/chunk-7M6SC7J5.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-V35BV476.js','imports':['/build/_shared/chunk-SQW27RMA.js','/build/_shared/chunk-BZ5ICFE4.js','/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-BURQIT5W.js','/build/_shared/chunk-MWBBKACI.js','/build/_shared/chunk-EX27AVCS.js','/build/_shared/chunk-PYKMED4Y.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':true},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-ID7FZHJM.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/admin':{'id':'routes/admin','parentId':'root','path':'admin','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin-FZ3EWPJC.js','imports':['/build/_shared/chunk-OLCCHEF4.js','/build/_shared/chunk-YVC54CLU.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.health':{'id':'routes/api.health','parentId':'root','path':'api/health','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.health-H34JQDK4.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/articles':{'id':'routes/articles','parentId':'root','path':'articles','index':undefined,'caseSensitive':undefined,'module':'/build/routes/articles-GRTDOJVY.js','imports':['/build/_shared/chunk-YVC54CLU.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/auth.google':{'id':'routes/auth.google','parentId':'root','path':'auth/google','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth.google-OG6QF3LO.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/auth.google.callback':{'id':'routes/auth.google.callback','parentId':'routes/auth.google','path':'callback','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth.google.callback-6OVSUAP3.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/buckets':{'id':'routes/buckets','parentId':'root','path':'buckets','index':undefined,'caseSensitive':undefined,'module':'/build/routes/buckets-YPBNV7QM.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/clients':{'id':'routes/clients','parentId':'root','path':'clients','index':undefined,'caseSensitive':undefined,'module':'/build/routes/clients-SFYKGVPT.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/dashboard':{'id':'routes/dashboard','parentId':'root','path':'dashboard','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard-AUVLNUDW.js','imports':['/build/_shared/chunk-QJLF2KKE.js','/build/_shared/chunk-BGEWULVP.js','/build/_shared/chunk-YVC54CLU.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/envois-ctn':{'id':'routes/envois-ctn','parentId':'root','path':'envois-ctn','index':undefined,'caseSensitive':undefined,'module':'/build/routes/envois-ctn-B4UT7XKX.js','imports':['/build/_shared/chunk-NMKEOK6V.js','/build/_shared/chunk-OLCCHEF4.js','/build/_shared/chunk-YVC54CLU.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/google-drive-files':{'id':'routes/google-drive-files','parentId':'root','path':'google-drive-files','index':undefined,'caseSensitive':undefined,'module':'/build/routes/google-drive-files-7UIJ4Z7T.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/installations.kezia':{'id':'routes/installations.kezia','parentId':'root','path':'installations/kezia','index':undefined,'caseSensitive':undefined,'module':'/build/routes/installations.kezia-AMIQNSQI.js','imports':['/build/_shared/chunk-QJLF2KKE.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-MMH6Q26W.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/tickets-sap':{'id':'routes/tickets-sap','parentId':'root','path':'tickets-sap','index':undefined,'caseSensitive':undefined,'module':'/build/routes/tickets-sap-DKWDTN4W.js','imports':['/build/_shared/chunk-B43JI2TA.js','/build/_shared/chunk-NMKEOK6V.js','/build/_shared/chunk-BGEWULVP.js','/build/_shared/chunk-OLCCHEF4.js','/build/_shared/chunk-YVC54CLU.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'2a56f049','hmr':{'runtime':'/build/_shared\\\\chunk-KHF7YLN5.js','timestamp':1744574305617},'url':'/build/manifest-2A56F049.js'};", "\nimport * as entryServer from \"C:\\\\Users\\\\dante\\\\Documents\\\\JDC_SAP\\\\JDC_SAP3.1\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/auth.google.callback.ts\";\nimport * as route2 from \"./routes/installations.kezia.tsx\";\nimport * as route3 from \"./routes/google-drive-files.tsx\";\nimport * as route4 from \"./routes/auth.google.ts\";\nimport * as route5 from \"./routes/tickets-sap.tsx\";\nimport * as route6 from \"./routes/api.health.ts\";\nimport * as route7 from \"./routes/envois-ctn.tsx\";\nimport * as route8 from \"./routes/dashboard.tsx\";\nimport * as route9 from \"./routes/articles.tsx\";\nimport * as route10 from \"./routes/buckets.tsx\";\nimport * as route11 from \"./routes/clients.tsx\";\nimport * as route12 from \"./routes/logout.ts\";\nimport * as route13 from \"./routes/_index.tsx\";\nimport * as route14 from \"./routes/admin.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false,\"v3_throwAbortReason\":false,\"v3_routeConfig\":false,\"v3_singleFetch\":false,\"v3_lazyRouteDiscovery\":false,\"unstable_optimizeDeps\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/auth.google.callback\": {\n      id: \"routes/auth.google.callback\",\n      parentId: \"routes/auth.google\",\n      path: \"callback\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/installations.kezia\": {\n      id: \"routes/installations.kezia\",\n      parentId: \"root\",\n      path: \"installations/kezia\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/google-drive-files\": {\n      id: \"routes/google-drive-files\",\n      parentId: \"root\",\n      path: \"google-drive-files\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/auth.google\": {\n      id: \"routes/auth.google\",\n      parentId: \"root\",\n      path: \"auth/google\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/tickets-sap\": {\n      id: \"routes/tickets-sap\",\n      parentId: \"root\",\n      path: \"tickets-sap\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/api.health\": {\n      id: \"routes/api.health\",\n      parentId: \"root\",\n      path: \"api/health\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/envois-ctn\": {\n      id: \"routes/envois-ctn\",\n      parentId: \"root\",\n      path: \"envois-ctn\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/dashboard\": {\n      id: \"routes/dashboard\",\n      parentId: \"root\",\n      path: \"dashboard\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/articles\": {\n      id: \"routes/articles\",\n      parentId: \"root\",\n      path: \"articles\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/buckets\": {\n      id: \"routes/buckets\",\n      parentId: \"root\",\n      path: \"buckets\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/clients\": {\n      id: \"routes/clients\",\n      parentId: \"root\",\n      path: \"clients\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/admin\": {\n      id: \"routes/admin\",\n      parentId: \"root\",\n      path: \"admin\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    }\n  };"],
  "mappings": "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",
  "names": ["Timestamp", "doc", "useState", "useEffect", "useRef", "React", "useState", "useMemo", "useEffect", "useCallback", "Map", "FontAwesomeIcon", "faSpinner", "faExclamationTriangle", "jsxDEV", "normalizeAddress", "useState", "Fragment", "Link", "jsxDEV", "Fragment", "jsxDEV", "Link", "Link", "NavLink", "FontAwesomeIcon", "faUserCircle", "faSignInAlt", "faTachometerAlt", "faTicketAlt", "faTruck", "faCog", "Fragment", "jsxDEV", "navItems", "faTachometerAlt", "faTicketAlt", "faTruck", "adminItem", "faCog", "JDC_LOGO_URL", "Link", "FontAwesomeIcon", "NavLink", "faUserCircle", "faSignInAlt", "useState", "FontAwesomeIcon", "faTimes", "jsxDEV", "jsxDEV", "useState", "FontAwesomeIcon", "faTimes", "FontAwesomeIcon", "faTimes", "jsxDEV", "FontAwesomeIcon", "faTimes", "Timestamp", "Fragment", "jsxDEV", "action", "Timestamp", "useState", "loader", "loader", "loader", "json", "redirect", "useLoaderData", "Link", "useState", "jsxDEV", "loader", "redirect", "json", "useLoaderData", "useState", "jsxDEV", "Link", "loader", "json", "redirect", "useLoaderData", "Link", "jsxDEV", "loader", "redirect", "json", "useLoaderData", "Link", "action", "loader", "loader", "action", "useState", "useEffect", "useMemo", "useCallback", "React", "jsxDEV", "useState", "useEffect", "useMemo", "useCallback", "useState", "useCallback", "jsxDEV", "useState", "useMemo", "useCallback", "useEffect", "FontAwesomeIcon", "faSearch", "faChevronDown", "faSpinner", "faExclamationTriangle", "faInfoCircle", "Fragment", "jsxDEV", "useState", "useEffect", "useMemo", "useCallback", "FontAwesomeIcon", "faSearch", "faSpinner", "faExclamationTriangle", "faInfoCircle", "faChevronDown", "loader", "json", "meta", "useState", "useEffect", "useMemo", "useCallback", "useOutletContext", "FontAwesomeIcon", "faFilter", "faSearch", "faChevronRight", "faSpinner", "jsxDEV", "meta", "useOutletContext", "useState", "useEffect", "useMemo", "isAdmin", "useCallback", "error", "FontAwesomeIcon", "faFilter", "faSearch", "faSpinner", "faChevronRight", "loader", "meta", "json", "useOutletContext", "useLoaderData", "useState", "useEffect", "Suspense", "FontAwesomeIcon", "faSpinner", "jsxDEV", "FontAwesomeIcon", "faTicket", "faSpinner", "faExclamationTriangle", "jsxDEV", "FontAwesomeIcon", "faTicket", "faSpinner", "faExclamationTriangle", "useMemo", "Link", "FontAwesomeIcon", "faTruckFast", "faBuilding", "jsxDEV", "useState", "useEffect", "FontAwesomeIcon", "faTicket", "faMapMarkedAlt", "faSpinner", "faExclamationTriangle", "jsxDEV", "InteractiveMap", "meta", "loader", "json", "useOutletContext", "useLoaderData", "useState", "useEffect", "Suspense", "loader", "json", "Form", "useLoaderData", "useSearchParams", "useState", "useEffect", "useOutletContext", "useRef", "FontAwesomeIcon", "faSpinner", "faTimes", "Fragment", "jsxDEV", "useState", "useEffect", "jsxDEV", "meta", "jsxDEV", "action", "loader", "redirect", "action", "loader", "redirect", "loader", "redirect", "jsxDEV", "useEffect", "useState", "useCallback", "useOutletContext", "Link", "jsxDEV", "useState", "useEffect", "jsxDEV", "jsxDEV", "useState", "useEffect", "jsxDEV", "useOutletContext", "useState", "useEffect", "useCallback", "Link"]
}
